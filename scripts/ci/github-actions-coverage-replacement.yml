# Enhanced Coverage Merging and Reporting Section
# Replace lines 968-1217 in .github/workflows/test.yml with this improved implementation

      - name: Install enhanced coverage tools
        run: |
          # Install tools needed for coverage processing
          npm install --no-save lcov-result-merger || echo "Will use fallback merger"
          
          # Ensure lcov is available for HTML reports
          sudo apt-get update && sudo apt-get install -y lcov || echo "lcov install failed"

      - name: Enhanced coverage merging and analysis
        id: coverage
        run: |
          # Use our enhanced coverage merger
          node scripts/ci/ci-coverage-merger.js
          
          # The merger sets GitHub outputs automatically
          echo "Enhanced coverage merging completed"

      - name: Generate LCOV HTML Report
        if: steps.coverage.outputs.status == 'available'
        run: |
          set -e
          
          LCOV_REPORT_DIR="lcov-html-report"
          mkdir -p "$LCOV_REPORT_DIR"
          
          echo "Generating LCOV HTML report..."
          
          # Copy CSS files if they exist
          if [ -d "assets/lcov" ]; then
            echo "Copying custom CSS files..."
            find assets/lcov -name "*.css" -exec cp {} "$LCOV_REPORT_DIR/" \;
          fi
          
          # Generate HTML report
          if [ -f "coverage/merged/lcov.info" ]; then
            genhtml coverage/merged/lcov.info \
              --output-directory "$LCOV_REPORT_DIR" \
              --title "Enhanced Code Coverage Report" \
              --branch-coverage \
              --function-coverage \
              --prefix "$(pwd)" \
              --legend \
              --show-details || echo "genhtml failed but continuing"
            
            echo "‚úÖ LCOV HTML report generated in $LCOV_REPORT_DIR"
          else
            echo "‚ùå No merged coverage file found for HTML generation"
          fi

      - name: Validate coverage quality
        run: |
          # Quality validation is now handled by the coverage merger
          # Just report the status
          COVERAGE_STATUS="${{ steps.coverage.outputs.coverage_status }}"
          COVERAGE_PCT="${{ steps.coverage.outputs.coverage_pct }}"
          
          echo "Coverage Status: $COVERAGE_STATUS"
          echo "Coverage Percentage: $COVERAGE_PCT%"
          
          case "$COVERAGE_STATUS" in
            "good")
              echo "‚úÖ Coverage meets quality standards"
              ;;
            "warning")
              echo "‚ö†Ô∏è Coverage below target but acceptable"
              ;;
            "critical")
              echo "‚ùå Coverage critically low"
              ;;
            "missing")
              echo "üì≠ No coverage data available"
              ;;
          esac

      - name: Upload merged coverage to Codecov
        if: steps.coverage.outputs.status == 'available'
        uses: codecov/codecov-action@v4
        with:
          file: coverage/merged/lcov.info
          flags: merged-enhanced
          name: enhanced-merged-coverage
          fail_ci_if_error: false
          plugins: ''

      - name: Clean up individual lcov files for artifacts
        run: |
          # Remove individual test suite lcov files to keep artifacts lean
          # Keep only the merged coverage and essential reports
          echo "üßπ Cleaning up individual LCOV files..."
          
          # Remove individual lcov.info files from test-results but keep other artifacts
          find test-results -name "lcov.info" -type f -delete || echo "No individual lcov files to remove"
          
          # Remove individual coverage directories but preserve structure
          find test-results -name "coverage" -type d -exec rm -rf {} + || echo "No coverage dirs to remove"
          
          # Keep test XML results and logs for debugging
          echo "‚úÖ Individual LCOV files removed, keeping test results and logs"

      - name: Store comprehensive test report
        uses: actions/upload-artifact@v4
        with:
          name: comprehensive-test-report
          path: |
            reports/
            coverage/merged/
            coverage/html/
            coverage/*.json
            test-results/*.xml
            test-results/*.log
          retention-days: 30

      - name: Upload LCOV HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lcov-html-report
          path: coverage/html/
          retention-days: 14

      - name: Comment on commit with enhanced results
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            const fs = require('fs');
            
            // Try to read the enhanced test summary
            const summaryPath = 'reports/test-summary.md';
            
            if (fs.existsSync(summaryPath)) {
              try {
                const body = fs.readFileSync(summaryPath, 'utf8');
                
                // Truncate if too long for GitHub comment
                const maxLength = 65000;
                const finalBody = body.length > maxLength 
                  ? body.substring(0, maxLength) + '\n\n*Report truncated - see full report in artifacts*'
                  : body;
                
                await github.rest.repos.createCommitComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  commit_sha: context.sha,
                  body: finalBody
                });
                
                console.log('‚úÖ Enhanced commit comment created successfully');
              } catch (error) {
                console.log('‚ùå Failed to create commit comment:', error.message);
              }
            } else {
              console.log('üì≠ No test summary found for commit comment');
            }

# Additional improvements to individual test jobs:

# For unit-tests job, add this after the test run:
      - name: Organize unit test artifacts
        if: always()
        run: |
          mkdir -p test-results/unit/node${{ matrix.node-version }}
          
          # Move coverage to standard location
          if [ -d "coverage/unit" ]; then
            cp -r coverage/unit test-results/unit/node${{ matrix.node-version }}/coverage/
          fi
          
          # Save test output log if available
          if [ -f "test-output.log" ]; then
            cp test-output.log test-results/unit/node${{ matrix.node-version }}/coverage/unit/test-output-node${{ matrix.node-version }}.log
          fi

# For integration-tests job:
      - name: Organize integration test artifacts
        if: always()
        run: |
          mkdir -p test-results/integration
          
          # Move coverage to standard location
          if [ -d "coverage/integration" ]; then
            cp -r coverage/integration test-results/integration/coverage/
          fi
          
          # Save test output log
          if [ -f "test-output.log" ]; then
            cp test-output.log test-results/integration/coverage/integration/test-output.log
          fi

# For e2e-tests job:
      - name: Organize E2E test artifacts
        if: always()
        run: |
          mkdir -p test-results/e2e
          
          # Move coverage if generated
          if [ -d "coverage" ]; then
            mkdir -p test-results/e2e/coverage/e2e
            cp -r coverage/* test-results/e2e/coverage/e2e/ || true
          fi

# For performance-tests job:
      - name: Organize performance test artifacts
        if: always()
        run: |
          mkdir -p test-results/performance
          
          # Move coverage to standard location
          if [ -d "coverage/performance" ]; then
            cp -r coverage/performance test-results/performance/coverage/
          fi
          
          # Move performance reports
          if [ -d "reports" ]; then
            cp -r reports test-results/performance/
          fi
          
          if [ -f "performance-metrics.json" ]; then
            cp performance-metrics.json test-results/performance/
          fi
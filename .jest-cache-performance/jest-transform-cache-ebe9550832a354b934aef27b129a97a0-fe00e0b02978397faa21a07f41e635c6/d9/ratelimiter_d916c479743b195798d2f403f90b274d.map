{"version":3,"names":["rateLimit","CommandRateLimit","constructor","maxCommands","windowMs","users","Map","cleanupThreshold","isAllowed","userId","now","Date","userData","get","count","resetTime","set","size","cleanup","entries","delete","getRemainingTime","Math","max","getUserCount","getStats","activeUsers","resetUser","resetAll","clear","setCleanupThreshold","threshold","createWebhookLimiter","options","defaultOptions","message","standardHeaders","legacyHeaders","createGeneralLimiter","createStrictLimiter","createSecureRateLimiter","limiter","req","res","next","ip","connection","remoteAddress","socket","headers","split","trim","process","env","NODE_ENV","createCommandRateLimiter"],"sources":["rate-limiter.js"],"sourcesContent":["// rate-limiter.js\n// Rate limiting utilities for Discord commands and webhook requests\n\nimport rateLimit from 'express-rate-limit';\n\n/**\n * Command rate limiter class for Discord bot commands\n * Implements in-memory rate limiting with automatic cleanup\n */\nexport class CommandRateLimit {\n  constructor(maxCommands = 5, windowMs = 60000) {\n    this.maxCommands = maxCommands;\n    this.windowMs = windowMs;\n    this.users = new Map();\n    this.cleanupThreshold = 1000; // Cleanup when this many users are stored\n  }\n\n  /**\n   * Check if a user is allowed to execute a command\n   * @param {string} userId - Discord user ID\n   * @returns {boolean} - True if user is allowed, false if rate limited\n   */\n  isAllowed(userId) {\n    const now = Date.now();\n    const userData = this.users.get(userId) || { count: 0, resetTime: now + this.windowMs };\n\n    // Reset if window has passed\n    if (now >= userData.resetTime) {\n      userData.count = 0;\n      userData.resetTime = now + this.windowMs;\n    }\n\n    // Check if user has exceeded limit\n    if (userData.count >= this.maxCommands) {\n      return false;\n    }\n\n    // Increment counter\n    userData.count++;\n    this.users.set(userId, userData);\n\n    // Clean up old entries periodically\n    if (this.users.size > this.cleanupThreshold) {\n      this.cleanup();\n    }\n\n    return true;\n  }\n\n  /**\n   * Clean up expired user entries\n   */\n  cleanup() {\n    const now = Date.now();\n    for (const [userId, userData] of this.users.entries()) {\n      if (now >= userData.resetTime) {\n        this.users.delete(userId);\n      }\n    }\n  }\n\n  /**\n   * Get remaining time until user's rate limit resets\n   * @param {string} userId - Discord user ID\n   * @returns {number} - Remaining time in milliseconds\n   */\n  getRemainingTime(userId) {\n    const userData = this.users.get(userId);\n    if (!userData) {\n      return 0;\n    }\n    return Math.max(0, userData.resetTime - Date.now());\n  }\n\n  /**\n   * Get current usage count for a user\n   * @param {string} userId - Discord user ID\n   * @returns {number} - Current command count\n   */\n  getUserCount(userId) {\n    const userData = this.users.get(userId);\n    if (!userData) {\n      return 0;\n    }\n\n    const now = Date.now();\n    if (now >= userData.resetTime) {\n      return 0; // Window has expired\n    }\n\n    return userData.count;\n  }\n\n  /**\n   * Get rate limit statistics\n   * @returns {Object} - Statistics object\n   */\n  getStats() {\n    return {\n      maxCommands: this.maxCommands,\n      windowMs: this.windowMs,\n      activeUsers: this.users.size,\n      cleanupThreshold: this.cleanupThreshold,\n    };\n  }\n\n  /**\n   * Reset rate limits for a specific user\n   * @param {string} userId - Discord user ID\n   */\n  resetUser(userId) {\n    this.users.delete(userId);\n  }\n\n  /**\n   * Reset all rate limits\n   */\n  resetAll() {\n    this.users.clear();\n  }\n\n  /**\n   * Set cleanup threshold\n   * @param {number} threshold - New cleanup threshold\n   */\n  setCleanupThreshold(threshold) {\n    this.cleanupThreshold = Math.max(100, threshold);\n  }\n}\n\n/**\n * Create a webhook rate limiter for Express\n * @param {Object} options - Rate limiter configuration\n * @returns {Function} - Express middleware function\n */\nexport function createWebhookLimiter(options = {}) {\n  const defaultOptions = {\n    windowMs: 15 * 60 * 1000, // 15 minutes\n    max: 100, // limit each IP to 100 requests per windowMs\n    message: 'Too many webhook requests from this IP, please try again later.',\n    standardHeaders: true,\n    legacyHeaders: false,\n  };\n\n  return rateLimit({ ...defaultOptions, ...options });\n}\n\n/**\n * Create a general purpose rate limiter\n * @param {Object} options - Rate limiter configuration\n * @returns {Function} - Express middleware function\n */\nexport function createGeneralLimiter(options = {}) {\n  const defaultOptions = {\n    windowMs: 60 * 1000, // 1 minute\n    max: 60, // limit each IP to 60 requests per minute\n    message: 'Too many requests from this IP, please try again later.',\n    standardHeaders: true,\n    legacyHeaders: false,\n  };\n\n  return rateLimit({ ...defaultOptions, ...options });\n}\n\n/**\n * Create a strict rate limiter for sensitive endpoints\n * @param {Object} options - Rate limiter configuration\n * @returns {Function} - Express middleware function\n */\nexport function createStrictLimiter(options = {}) {\n  const defaultOptions = {\n    windowMs: 60 * 1000, // 1 minute\n    max: 10, // limit each IP to 10 requests per minute\n    message: 'Too many requests from this IP, please try again later.',\n    standardHeaders: true,\n    legacyHeaders: false,\n  };\n\n  return rateLimit({ ...defaultOptions, ...options });\n}\n\n/**\n * Rate limiting middleware factory with IP validation\n * @param {Object} options - Configuration options\n * @returns {Function} - Express middleware function\n */\nexport function createSecureRateLimiter(options = {}) {\n  const limiter = createGeneralLimiter(options);\n\n  return (req, res, next) => {\n    // Get IP address from various sources\n    const ip =\n      req.ip ||\n      req.connection.remoteAddress ||\n      req.socket.remoteAddress ||\n      (req.headers['x-forwarded-for'] || '').split(',')[0].trim();\n\n    // Basic IP validation\n    if (!ip || ip === '::1' || ip === '127.0.0.1') {\n      // Allow localhost in development\n      if (process.env.NODE_ENV === 'development') {\n        return next();\n      }\n    }\n\n    // Apply rate limiting\n    return limiter(req, res, next);\n  };\n}\n\n/**\n * Utility function to create a command rate limiter instance\n * @param {Object} options - Configuration options\n * @returns {CommandRateLimit} - New command rate limiter instance\n */\nexport function createCommandRateLimiter(options = {}) {\n  const { maxCommands = 5, windowMs = 60000 } = options;\n  return new CommandRateLimit(maxCommands, windowMs);\n}\n"],"mappings":"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","ignoreList":[]}
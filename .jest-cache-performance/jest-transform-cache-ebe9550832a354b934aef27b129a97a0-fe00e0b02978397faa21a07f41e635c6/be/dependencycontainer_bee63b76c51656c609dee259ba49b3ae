4e5ef88131919d8f50314d166c2a4624
/* istanbul ignore next */
function cov_1nrwckxf6x() {
  var path = "/home/xush/Documents/prog/discord-youtube-bot/src/infrastructure/dependency-container.js";
  var hash = "cb69b7c3c2348cc82a53d6a963d5f624e689de04";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/xush/Documents/prog/discord-youtube-bot/src/infrastructure/dependency-container.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 30
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 31
        }
      },
      "2": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "4": {
        start: {
          line: 19,
          column: 6
        },
        end: {
          line: 19,
          column: 56
        }
      },
      "5": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "6": {
        start: {
          line: 23,
          column: 6
        },
        end: {
          line: 23,
          column: 60
        }
      },
      "7": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 31,
          column: 7
        }
      },
      "8": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 16
        }
      },
      "9": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 74
        }
      },
      "10": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 75
        }
      },
      "11": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "12": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 55,
          column: 56
        }
      },
      "13": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 40
        }
      },
      "14": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 16
        }
      },
      "15": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "16": {
        start: {
          line: 69,
          column: 6
        },
        end: {
          line: 69,
          column: 56
        }
      },
      "17": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "18": {
        start: {
          line: 74,
          column: 6
        },
        end: {
          line: 74,
          column: 39
        }
      },
      "19": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "20": {
        start: {
          line: 79,
          column: 6
        },
        end: {
          line: 79,
          column: 62
        }
      },
      "21": {
        start: {
          line: 82,
          column: 20
        },
        end: {
          line: 82,
          column: 44
        }
      },
      "22": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "23": {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 86,
          column: 39
        }
      },
      "24": {
        start: {
          line: 90,
          column: 21
        },
        end: {
          line: 90,
          column: 56
        }
      },
      "25": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "26": {
        start: {
          line: 94,
          column: 6
        },
        end: {
          line: 94,
          column: 42
        }
      },
      "27": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 95,
          column: 33
        }
      },
      "28": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 20
        }
      },
      "29": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "30": {
        start: {
          line: 107,
          column: 35
        },
        end: {
          line: 107,
          column: 87
        }
      },
      "31": {
        start: {
          line: 107,
          column: 69
        },
        end: {
          line: 107,
          column: 86
        }
      },
      "32": {
        start: {
          line: 110,
          column: 23
        },
        end: {
          line: 110,
          column: 69
        }
      },
      "33": {
        start: {
          line: 112,
          column: 6
        },
        end: {
          line: 114,
          column: 7
        }
      },
      "34": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 69
        }
      },
      "35": {
        start: {
          line: 116,
          column: 6
        },
        end: {
          line: 116,
          column: 22
        }
      },
      "36": {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 118,
          column: 83
        }
      },
      "37": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 65
        }
      },
      "38": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 133,
          column: 77
        }
      },
      "39": {
        start: {
          line: 140,
          column: 28
        },
        end: {
          line: 140,
          column: 53
        }
      },
      "40": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 141,
          column: 34
        }
      },
      "41": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "42": {
        start: {
          line: 145,
          column: 6
        },
        end: {
          line: 145,
          column: 78
        }
      },
      "43": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 148,
          column: 27
        }
      },
      "44": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 155,
          column: 27
        }
      },
      "45": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 160,
          column: 5
        }
      },
      "46": {
        start: {
          line: 159,
          column: 6
        },
        end: {
          line: 159,
          column: 34
        }
      },
      "47": {
        start: {
          line: 167,
          column: 28
        },
        end: {
          line: 167,
          column: 30
        }
      },
      "48": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 180,
          column: 5
        }
      },
      "49": {
        start: {
          line: 170,
          column: 6
        },
        end: {
          line: 179,
          column: 7
        }
      },
      "50": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "51": {
        start: {
          line: 172,
          column: 25
        },
        end: {
          line: 172,
          column: 43
        }
      },
      "52": {
        start: {
          line: 173,
          column: 10
        },
        end: {
          line: 175,
          column: 11
        }
      },
      "53": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 41
        }
      },
      "54": {
        start: {
          line: 177,
          column: 10
        },
        end: {
          line: 177,
          column: 60
        }
      },
      "55": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 182,
          column: 39
        }
      },
      "56": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 183,
          column: 26
        }
      },
      "57": {
        start: {
          line: 190,
          column: 20
        },
        end: {
          line: 190,
          column: 29
        }
      },
      "58": {
        start: {
          line: 191,
          column: 21
        },
        end: {
          line: 191,
          column: 30
        }
      },
      "59": {
        start: {
          line: 193,
          column: 25
        },
        end: {
          line: 216,
          column: 5
        }
      },
      "60": {
        start: {
          line: 194,
          column: 6
        },
        end: {
          line: 196,
          column: 7
        }
      },
      "61": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 77
        }
      },
      "62": {
        start: {
          line: 198,
          column: 6
        },
        end: {
          line: 200,
          column: 7
        }
      },
      "63": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 15
        }
      },
      "64": {
        start: {
          line: 202,
          column: 6
        },
        end: {
          line: 202,
          column: 26
        }
      },
      "65": {
        start: {
          line: 204,
          column: 22
        },
        end: {
          line: 204,
          column: 46
        }
      },
      "66": {
        start: {
          line: 205,
          column: 6
        },
        end: {
          line: 212,
          column: 7
        }
      },
      "67": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "68": {
        start: {
          line: 207,
          column: 10
        },
        end: {
          line: 209,
          column: 11
        }
      },
      "69": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 92
        }
      },
      "70": {
        start: {
          line: 210,
          column: 10
        },
        end: {
          line: 210,
          column: 28
        }
      },
      "71": {
        start: {
          line: 214,
          column: 6
        },
        end: {
          line: 214,
          column: 29
        }
      },
      "72": {
        start: {
          line: 215,
          column: 6
        },
        end: {
          line: 215,
          column: 25
        }
      },
      "73": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 220,
          column: 5
        }
      },
      "74": {
        start: {
          line: 219,
          column: 6
        },
        end: {
          line: 219,
          column: 26
        }
      },
      "75": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 222,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 2
          },
          end: {
            line: 5,
            column: 3
          }
        },
        loc: {
          start: {
            line: 5,
            column: 16
          },
          end: {
            line: 9,
            column: 3
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 17,
            column: 3
          }
        },
        loc: {
          start: {
            line: 17,
            column: 41
          },
          end: {
            line: 34,
            column: 3
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 39,
            column: 2
          },
          end: {
            line: 39,
            column: 3
          }
        },
        loc: {
          start: {
            line: 39,
            column: 50
          },
          end: {
            line: 41,
            column: 3
          }
        },
        line: 39
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 46,
            column: 2
          },
          end: {
            line: 46,
            column: 3
          }
        },
        loc: {
          start: {
            line: 46,
            column: 50
          },
          end: {
            line: 48,
            column: 3
          }
        },
        line: 46
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 53,
            column: 2
          },
          end: {
            line: 53,
            column: 3
          }
        },
        loc: {
          start: {
            line: 53,
            column: 36
          },
          end: {
            line: 60,
            column: 3
          }
        },
        line: 53
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 67,
            column: 2
          },
          end: {
            line: 67,
            column: 3
          }
        },
        loc: {
          start: {
            line: 67,
            column: 17
          },
          end: {
            line: 99,
            column: 3
          }
        },
        line: 67
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 104,
            column: 2
          },
          end: {
            line: 104,
            column: 3
          }
        },
        loc: {
          start: {
            line: 104,
            column: 33
          },
          end: {
            line: 120,
            column: 3
          }
        },
        line: 104
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 107,
            column: 60
          },
          end: {
            line: 107,
            column: 61
          }
        },
        loc: {
          start: {
            line: 107,
            column: 69
          },
          end: {
            line: 107,
            column: 86
          }
        },
        line: 107
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 125,
            column: 2
          },
          end: {
            line: 125,
            column: 3
          }
        },
        loc: {
          start: {
            line: 125,
            column: 22
          },
          end: {
            line: 127,
            column: 3
          }
        },
        line: 125
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 132,
            column: 2
          },
          end: {
            line: 132,
            column: 3
          }
        },
        loc: {
          start: {
            line: 132,
            column: 24
          },
          end: {
            line: 134,
            column: 3
          }
        },
        line: 132
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 139,
            column: 2
          },
          end: {
            line: 139,
            column: 3
          }
        },
        loc: {
          start: {
            line: 139,
            column: 16
          },
          end: {
            line: 149,
            column: 3
          }
        },
        line: 139
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 154,
            column: 2
          },
          end: {
            line: 154,
            column: 3
          }
        },
        loc: {
          start: {
            line: 154,
            column: 19
          },
          end: {
            line: 161,
            column: 3
          }
        },
        line: 154
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 166,
            column: 2
          },
          end: {
            line: 166,
            column: 3
          }
        },
        loc: {
          start: {
            line: 166,
            column: 18
          },
          end: {
            line: 184,
            column: 3
          }
        },
        line: 166
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 189,
            column: 2
          },
          end: {
            line: 189,
            column: 3
          }
        },
        loc: {
          start: {
            line: 189,
            column: 13
          },
          end: {
            line: 223,
            column: 3
          }
        },
        line: 189
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 193,
            column: 25
          },
          end: {
            line: 193,
            column: 26
          }
        },
        loc: {
          start: {
            line: 193,
            column: 36
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 193
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 27
          },
          end: {
            line: 17,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 17,
            column: 37
          },
          end: {
            line: 17,
            column: 39
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 20
          },
          end: {
            line: 29,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 20
          },
          end: {
            line: 29,
            column: 40
          }
        }, {
          start: {
            line: 29,
            column: 44
          },
          end: {
            line: 29,
            column: 46
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 36
          },
          end: {
            line: 39,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 39,
            column: 46
          },
          end: {
            line: 39,
            column: 48
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 46,
            column: 36
          },
          end: {
            line: 46,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 46,
            column: 46
          },
          end: {
            line: 46,
            column: 48
          }
        }],
        line: 46
      },
      "6": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "7": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "8": {
        loc: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "9": {
        loc: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "10": {
        loc: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "11": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 85,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 85,
            column: 25
          }
        }, {
          start: {
            line: 85,
            column: 29
          },
          end: {
            line: 85,
            column: 48
          }
        }, {
          start: {
            line: 85,
            column: 52
          },
          end: {
            line: 85,
            column: 77
          }
        }],
        line: 85
      },
      "12": {
        loc: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "13": {
        loc: {
          start: {
            line: 112,
            column: 6
          },
          end: {
            line: 114,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 6
          },
          end: {
            line: 114,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "14": {
        loc: {
          start: {
            line: 126,
            column: 11
          },
          end: {
            line: 126,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 11
          },
          end: {
            line: 126,
            column: 35
          }
        }, {
          start: {
            line: 126,
            column: 39
          },
          end: {
            line: 126,
            column: 64
          }
        }],
        line: 126
      },
      "15": {
        loc: {
          start: {
            line: 170,
            column: 6
          },
          end: {
            line: 179,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 6
          },
          end: {
            line: 179,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "16": {
        loc: {
          start: {
            line: 170,
            column: 10
          },
          end: {
            line: 170,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 10
          },
          end: {
            line: 170,
            column: 18
          }
        }, {
          start: {
            line: 170,
            column: 22
          },
          end: {
            line: 170,
            column: 60
          }
        }],
        line: 170
      },
      "17": {
        loc: {
          start: {
            line: 173,
            column: 10
          },
          end: {
            line: 175,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 10
          },
          end: {
            line: 175,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "18": {
        loc: {
          start: {
            line: 173,
            column: 14
          },
          end: {
            line: 173,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 14
          },
          end: {
            line: 173,
            column: 20
          }
        }, {
          start: {
            line: 173,
            column: 24
          },
          end: {
            line: 173,
            column: 57
          }
        }],
        line: 173
      },
      "19": {
        loc: {
          start: {
            line: 194,
            column: 6
          },
          end: {
            line: 196,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 6
          },
          end: {
            line: 196,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "20": {
        loc: {
          start: {
            line: 198,
            column: 6
          },
          end: {
            line: 200,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 6
          },
          end: {
            line: 200,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "21": {
        loc: {
          start: {
            line: 205,
            column: 6
          },
          end: {
            line: 212,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 6
          },
          end: {
            line: 212,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "22": {
        loc: {
          start: {
            line: 205,
            column: 10
          },
          end: {
            line: 205,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 205,
            column: 10
          },
          end: {
            line: 205,
            column: 17
          }
        }, {
          start: {
            line: 205,
            column: 21
          },
          end: {
            line: 205,
            column: 41
          }
        }],
        line: 205
      },
      "23": {
        loc: {
          start: {
            line: 207,
            column: 10
          },
          end: {
            line: 209,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 10
          },
          end: {
            line: 209,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cb69b7c3c2348cc82a53d6a963d5f624e689de04"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1nrwckxf6x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1nrwckxf6x();
/**
 * Dependency Injection Container for managing service dependencies
 */
export class DependencyContainer {
  constructor() {
    /* istanbul ignore next */
    cov_1nrwckxf6x().f[0]++;
    cov_1nrwckxf6x().s[0]++;
    this.services = new Map();
    /* istanbul ignore next */
    cov_1nrwckxf6x().s[1]++;
    this.instances = new Map();
    /* istanbul ignore next */
    cov_1nrwckxf6x().s[2]++;
    this.scoped = false;
  }

  /**
   * Register a service with a factory function
   * @param {string} token - Service identifier
   * @param {Function} factory - Factory function that creates the service
   * @param {Object} options - Registration options
   */
  register(token, factory, options =
  /* istanbul ignore next */
  (cov_1nrwckxf6x().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1nrwckxf6x().f[1]++;
    cov_1nrwckxf6x().s[3]++;
    if (typeof token !== 'string') {
      /* istanbul ignore next */
      cov_1nrwckxf6x().b[1][0]++;
      cov_1nrwckxf6x().s[4]++;
      throw new Error('Service token must be a string');
    } else
    /* istanbul ignore next */
    {
      cov_1nrwckxf6x().b[1][1]++;
    }
    cov_1nrwckxf6x().s[5]++;
    if (typeof factory !== 'function') {
      /* istanbul ignore next */
      cov_1nrwckxf6x().b[2][0]++;
      cov_1nrwckxf6x().s[6]++;
      throw new Error('Service factory must be a function');
    } else
    /* istanbul ignore next */
    {
      cov_1nrwckxf6x().b[2][1]++;
    }
    cov_1nrwckxf6x().s[7]++;
    this.services.set(token, {
      factory,
      singleton: options.singleton !== false,
      // Default to singleton
      dependencies:
      /* istanbul ignore next */
      (cov_1nrwckxf6x().b[3][0]++, options.dependencies) ||
      /* istanbul ignore next */
      (cov_1nrwckxf6x().b[3][1]++, []),
      initialized: false
    });
    /* istanbul ignore next */
    cov_1nrwckxf6x().s[8]++;
    return this;
  }

  /**
   * Register a singleton service (same as register with singleton: true)
   */
  registerSingleton(token, factory, options =
  /* istanbul ignore next */
  (cov_1nrwckxf6x().b[4][0]++, {})) {
    /* istanbul ignore next */
    cov_1nrwckxf6x().f[2]++;
    cov_1nrwckxf6x().s[9]++;
    return this.register(token, factory, {
      ...options,
      singleton: true
    });
  }

  /**
   * Register a transient service (new instance each time)
   */
  registerTransient(token, factory, options =
  /* istanbul ignore next */
  (cov_1nrwckxf6x().b[5][0]++, {})) {
    /* istanbul ignore next */
    cov_1nrwckxf6x().f[3]++;
    cov_1nrwckxf6x().s[10]++;
    return this.register(token, factory, {
      ...options,
      singleton: false
    });
  }

  /**
   * Register an instance directly
   */
  registerInstance(token, instance) {
    /* istanbul ignore next */
    cov_1nrwckxf6x().f[4]++;
    cov_1nrwckxf6x().s[11]++;
    if (typeof token !== 'string') {
      /* istanbul ignore next */
      cov_1nrwckxf6x().b[6][0]++;
      cov_1nrwckxf6x().s[12]++;
      throw new Error('Service token must be a string');
    } else
    /* istanbul ignore next */
    {
      cov_1nrwckxf6x().b[6][1]++;
    }
    cov_1nrwckxf6x().s[13]++;
    this.instances.set(token, instance);
    /* istanbul ignore next */
    cov_1nrwckxf6x().s[14]++;
    return this;
  }

  /**
   * Resolve a service by token
   * @param {string} token - Service identifier
   * @returns {*} The service instance
   */
  resolve(token) {
    /* istanbul ignore next */
    cov_1nrwckxf6x().f[5]++;
    cov_1nrwckxf6x().s[15]++;
    if (typeof token !== 'string') {
      /* istanbul ignore next */
      cov_1nrwckxf6x().b[7][0]++;
      cov_1nrwckxf6x().s[16]++;
      throw new Error('Service token must be a string');
    } else
    /* istanbul ignore next */
    {
      cov_1nrwckxf6x().b[7][1]++;
    }

    // Check for direct instance first
    cov_1nrwckxf6x().s[17]++;
    if (this.instances.has(token)) {
      /* istanbul ignore next */
      cov_1nrwckxf6x().b[8][0]++;
      cov_1nrwckxf6x().s[18]++;
      return this.instances.get(token);
    } else
    /* istanbul ignore next */
    {
      cov_1nrwckxf6x().b[8][1]++;
    }

    // Check for registered service
    cov_1nrwckxf6x().s[19]++;
    if (!this.services.has(token)) {
      /* istanbul ignore next */
      cov_1nrwckxf6x().b[9][0]++;
      cov_1nrwckxf6x().s[20]++;
      throw new Error(`Service '${token}' is not registered`);
    } else
    /* istanbul ignore next */
    {
      cov_1nrwckxf6x().b[9][1]++;
    }
    const service =
    /* istanbul ignore next */
    (cov_1nrwckxf6x().s[21]++, this.services.get(token));

    // Return existing singleton instance if available
    /* istanbul ignore next */
    cov_1nrwckxf6x().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_1nrwckxf6x().b[11][0]++, service.singleton) &&
    /* istanbul ignore next */
    (cov_1nrwckxf6x().b[11][1]++, service.initialized) &&
    /* istanbul ignore next */
    (cov_1nrwckxf6x().b[11][2]++, this.instances.has(token))) {
      /* istanbul ignore next */
      cov_1nrwckxf6x().b[10][0]++;
      cov_1nrwckxf6x().s[23]++;
      return this.instances.get(token);
    } else
    /* istanbul ignore next */
    {
      cov_1nrwckxf6x().b[10][1]++;
    }

    // Create new instance
    const instance =
    /* istanbul ignore next */
    (cov_1nrwckxf6x().s[24]++, this.createInstance(token, service));

    // Store singleton instance
    /* istanbul ignore next */
    cov_1nrwckxf6x().s[25]++;
    if (service.singleton) {
      /* istanbul ignore next */
      cov_1nrwckxf6x().b[12][0]++;
      cov_1nrwckxf6x().s[26]++;
      this.instances.set(token, instance);
      /* istanbul ignore next */
      cov_1nrwckxf6x().s[27]++;
      service.initialized = true;
    } else
    /* istanbul ignore next */
    {
      cov_1nrwckxf6x().b[12][1]++;
    }
    cov_1nrwckxf6x().s[28]++;
    return instance;
  }

  /**
   * Create a new instance using the factory
   */
  createInstance(token, service) {
    /* istanbul ignore next */
    cov_1nrwckxf6x().f[6]++;
    cov_1nrwckxf6x().s[29]++;
    try {
      // Resolve dependencies
      const resolvedDependencies =
      /* istanbul ignore next */
      (cov_1nrwckxf6x().s[30]++, service.dependencies.map(dep => {
        /* istanbul ignore next */
        cov_1nrwckxf6x().f[7]++;
        cov_1nrwckxf6x().s[31]++;
        return this.resolve(dep);
      }));

      // Call factory with dependencies
      const instance =
      /* istanbul ignore next */
      (cov_1nrwckxf6x().s[32]++, service.factory(this, ...resolvedDependencies));
      /* istanbul ignore next */
      cov_1nrwckxf6x().s[33]++;
      if (instance === undefined) {
        /* istanbul ignore next */
        cov_1nrwckxf6x().b[13][0]++;
        cov_1nrwckxf6x().s[34]++;
        throw new Error(`Factory for '${token}' returned undefined`);
      } else
      /* istanbul ignore next */
      {
        cov_1nrwckxf6x().b[13][1]++;
      }
      cov_1nrwckxf6x().s[35]++;
      return instance;
    } catch (error) {
      /* istanbul ignore next */
      cov_1nrwckxf6x().s[36]++;
      throw new Error(`Failed to create instance of '${token}': ${error.message}`);
    }
  }

  /**
   * Check if a service is registered
   */
  isRegistered(token) {
    /* istanbul ignore next */
    cov_1nrwckxf6x().f[8]++;
    cov_1nrwckxf6x().s[37]++;
    return /* istanbul ignore next */(cov_1nrwckxf6x().b[14][0]++, this.services.has(token)) ||
    /* istanbul ignore next */
    (cov_1nrwckxf6x().b[14][1]++, this.instances.has(token));
  }

  /**
   * Get all registered service tokens
   */
  getRegisteredTokens() {
    /* istanbul ignore next */
    cov_1nrwckxf6x().f[9]++;
    cov_1nrwckxf6x().s[38]++;
    return [...new Set([...this.services.keys(), ...this.instances.keys()])];
  }

  /**
   * Create a scoped container for testing
   */
  createScope() {
    /* istanbul ignore next */
    cov_1nrwckxf6x().f[10]++;
    const scopedContainer =
    /* istanbul ignore next */
    (cov_1nrwckxf6x().s[39]++, new DependencyContainer());
    /* istanbul ignore next */
    cov_1nrwckxf6x().s[40]++;
    scopedContainer.scoped = true;

    // Copy service registrations (but not instances)
    /* istanbul ignore next */
    cov_1nrwckxf6x().s[41]++;
    for (const [token, service] of this.services.entries()) {
      /* istanbul ignore next */
      cov_1nrwckxf6x().s[42]++;
      scopedContainer.services.set(token, {
        ...service,
        initialized: false
      });
    }
    /* istanbul ignore next */
    cov_1nrwckxf6x().s[43]++;
    return scopedContainer;
  }

  /**
   * Clear all instances (useful for testing)
   */
  clearInstances() {
    /* istanbul ignore next */
    cov_1nrwckxf6x().f[11]++;
    cov_1nrwckxf6x().s[44]++;
    this.instances.clear();

    // Reset initialization flags
    /* istanbul ignore next */
    cov_1nrwckxf6x().s[45]++;
    for (const service of this.services.values()) {
      /* istanbul ignore next */
      cov_1nrwckxf6x().s[46]++;
      service.initialized = false;
    }
  }

  /**
   * Dispose of all instances that have a dispose method
   */
  async dispose() {
    /* istanbul ignore next */
    cov_1nrwckxf6x().f[12]++;
    const disposePromises =
    /* istanbul ignore next */
    (cov_1nrwckxf6x().s[47]++, []);
    /* istanbul ignore next */
    cov_1nrwckxf6x().s[48]++;
    for (const instance of this.instances.values()) {
      /* istanbul ignore next */
      cov_1nrwckxf6x().s[49]++;
      if (
      /* istanbul ignore next */
      (cov_1nrwckxf6x().b[16][0]++, instance) &&
      /* istanbul ignore next */
      (cov_1nrwckxf6x().b[16][1]++, typeof instance.dispose === 'function')) {
        /* istanbul ignore next */
        cov_1nrwckxf6x().b[15][0]++;
        cov_1nrwckxf6x().s[50]++;
        try {
          const result =
          /* istanbul ignore next */
          (cov_1nrwckxf6x().s[51]++, instance.dispose());
          /* istanbul ignore next */
          cov_1nrwckxf6x().s[52]++;
          if (
          /* istanbul ignore next */
          (cov_1nrwckxf6x().b[18][0]++, result) &&
          /* istanbul ignore next */
          (cov_1nrwckxf6x().b[18][1]++, typeof result.then === 'function')) {
            /* istanbul ignore next */
            cov_1nrwckxf6x().b[17][0]++;
            cov_1nrwckxf6x().s[53]++;
            disposePromises.push(result);
          } else
          /* istanbul ignore next */
          {
            cov_1nrwckxf6x().b[17][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_1nrwckxf6x().s[54]++;
          console.error('Error disposing instance:', error);
        }
      } else
      /* istanbul ignore next */
      {
        cov_1nrwckxf6x().b[15][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1nrwckxf6x().s[55]++;
    await Promise.all(disposePromises);
    /* istanbul ignore next */
    cov_1nrwckxf6x().s[56]++;
    this.clearInstances();
  }

  /**
   * Validate container setup (check for circular dependencies)
   */
  validate() {
    /* istanbul ignore next */
    cov_1nrwckxf6x().f[13]++;
    const visited =
    /* istanbul ignore next */
    (cov_1nrwckxf6x().s[57]++, new Set());
    const visiting =
    /* istanbul ignore next */
    (cov_1nrwckxf6x().s[58]++, new Set());
    /* istanbul ignore next */
    cov_1nrwckxf6x().s[59]++;
    const visitService = token => {
      /* istanbul ignore next */
      cov_1nrwckxf6x().f[14]++;
      cov_1nrwckxf6x().s[60]++;
      if (visiting.has(token)) {
        /* istanbul ignore next */
        cov_1nrwckxf6x().b[19][0]++;
        cov_1nrwckxf6x().s[61]++;
        throw new Error(`Circular dependency detected involving '${token}'`);
      } else
      /* istanbul ignore next */
      {
        cov_1nrwckxf6x().b[19][1]++;
      }
      cov_1nrwckxf6x().s[62]++;
      if (visited.has(token)) {
        /* istanbul ignore next */
        cov_1nrwckxf6x().b[20][0]++;
        cov_1nrwckxf6x().s[63]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1nrwckxf6x().b[20][1]++;
      }
      cov_1nrwckxf6x().s[64]++;
      visiting.add(token);
      const service =
      /* istanbul ignore next */
      (cov_1nrwckxf6x().s[65]++, this.services.get(token));
      /* istanbul ignore next */
      cov_1nrwckxf6x().s[66]++;
      if (
      /* istanbul ignore next */
      (cov_1nrwckxf6x().b[22][0]++, service) &&
      /* istanbul ignore next */
      (cov_1nrwckxf6x().b[22][1]++, service.dependencies)) {
        /* istanbul ignore next */
        cov_1nrwckxf6x().b[21][0]++;
        cov_1nrwckxf6x().s[67]++;
        for (const dep of service.dependencies) {
          /* istanbul ignore next */
          cov_1nrwckxf6x().s[68]++;
          if (!this.isRegistered(dep)) {
            /* istanbul ignore next */
            cov_1nrwckxf6x().b[23][0]++;
            cov_1nrwckxf6x().s[69]++;
            throw new Error(`Dependency '${dep}' required by '${token}' is not registered`);
          } else
          /* istanbul ignore next */
          {
            cov_1nrwckxf6x().b[23][1]++;
          }
          cov_1nrwckxf6x().s[70]++;
          visitService(dep);
        }
      } else
      /* istanbul ignore next */
      {
        cov_1nrwckxf6x().b[21][1]++;
      }
      cov_1nrwckxf6x().s[71]++;
      visiting.delete(token);
      /* istanbul ignore next */
      cov_1nrwckxf6x().s[72]++;
      visited.add(token);
    };
    /* istanbul ignore next */
    cov_1nrwckxf6x().s[73]++;
    for (const token of this.services.keys()) {
      /* istanbul ignore next */
      cov_1nrwckxf6x().s[74]++;
      visitService(token);
    }
    /* istanbul ignore next */
    cov_1nrwckxf6x().s[75]++;
    return true;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
{"version":3,"names":["cov_16nj2t3cmt","actualCoverage","config","rateLimit","pathToFileURL","Configuration","DependencyContainer","setupProductionServices","setupWebhookEndpoints","createShutdownHandler","s","startBot","f","container","configuration","logger","resolve","info","startApplications","startWebServer","setupGracefulShutdown","error","b","isRegistered","console","dispose","main","eventBus","on","message","disposeError","child","service","botApp","start","monitorApp","xUser","get","scraperApp","warn","app","webhookLimiter","windowMs","max","standardHeaders","legacyHeaders","commandLimiter","use","req","res","status","json","port","server","listen","registerInstance","shutdownHandler","process","reason","promise","import","meta","url","argv","href","catch","exit"],"sources":["index.js"],"sourcesContent":["// index.js - Modern Discord YouTube Bot Entry Point\n// © 2025 Marco Keller. All rights reserved. This software and its content are proprietary and confidential. Unauthorized reproduction or distribution is strictly prohibited.\n\nimport { config } from '@dotenvx/dotenvx';\n\nimport rateLimit from 'express-rate-limit';\nimport { pathToFileURL } from 'url';\n\n// Infrastructure\nimport { Configuration } from './src/infrastructure/configuration.js';\nimport { DependencyContainer } from './src/infrastructure/dependency-container.js';\n\n// Setup\nimport { setupProductionServices, setupWebhookEndpoints, createShutdownHandler } from './src/setup/production-setup.js';\n\n// Load environment variables with encryption support\nconfig();\n\n/**\n * Main application entry point\n */\nasync function startBot() {\n  let container;\n  try {\n    const configuration = new Configuration();\n    container = new DependencyContainer();\n    await setupProductionServices(container, configuration);\n    const logger = container.resolve('logger');\n    logger.info('🚀 Starting Discord YouTube Bot...');\n    await startApplications(container, configuration);\n    await startWebServer(container, configuration);\n    setupGracefulShutdown(container);\n    logger.info('✅ Bot startup completed successfully');\n    return container;\n  } catch (error) {\n    if (container && container.isRegistered('logger')) {\n      container.resolve('logger').error('❌ Failed to start bot:', error);\n    } else {\n      console.error('❌ Failed to start bot:', error);\n    }\n    if (container) {\n      await container.dispose();\n    }\n    throw error;\n  }\n}\n\nasync function main() {\n  let container;\n  try {\n    container = await startBot();\n    const eventBus = container.resolve('eventBus');\n    eventBus.on('bot.request_restart', async () => {\n      const logger = container.resolve('logger');\n      logger.info('Restarting bot...');\n      await container.dispose();\n      container = await startBot();\n    });\n  } catch (error) {\n    // Logger is not available here if startBot fails, so we log to console.\n    // The error is already logged inside startBot's catch block.\n    console.error('❌ Bot startup failed in main:', error.message);\n\n    // Clean up on error\n    if (container) {\n      try {\n        await container.dispose();\n      } catch (disposeError) {\n        console.error('Error during cleanup:', disposeError);\n      }\n    }\n\n    // Don't call process.exit here - let the caller handle it\n    throw error;\n  }\n}\n\n/**\n * Start core applications (Bot, Monitor, Scraper)\n */\nasync function startApplications(container, config) {\n  const logger = container.resolve('logger').child({ service: 'Main' });\n\n  // Start Discord Bot\n  const botApp = container.resolve('botApplication');\n  await botApp.start();\n\n  // Start YouTube Monitor\n  const monitorApp = container.resolve('monitorApplication');\n  await monitorApp.start();\n\n  // Start X Scraper (if enabled)\n  const xUser = config.get('X_USER_HANDLE');\n  if (xUser) {\n    try {\n      const scraperApp = container.resolve('scraperApplication');\n      await scraperApp.start();\n    } catch (error) {\n      logger.error('Failed to start X Scraper application:', error.message);\n      logger.warn('X Scraper will be disabled - YouTube monitoring will continue normally');\n    }\n  } else {\n    logger.info('X Scraper disabled (no X_USER_HANDLE configured)');\n  }\n}\n\n/**\n * Start web server for webhooks and health checks\n */\nasync function startWebServer(container, config) {\n  const logger = container.resolve('logger');\n  const app = container.resolve('expressApp');\n\n  // Set up rate limiting\n  const webhookLimiter = rateLimit({\n    windowMs: 15 * 60 * 1000, // 15 minutes\n    max: 100, // Limit each IP to 100 requests per windowMs\n    message: 'Too many requests from this IP',\n    standardHeaders: true,\n    legacyHeaders: false,\n  });\n\n  const commandLimiter = rateLimit({\n    windowMs: 60 * 1000, // 1 minute\n    max: 5, // Limit each IP to 5 requests per minute\n    message: 'Too many commands from this IP',\n    standardHeaders: true,\n    legacyHeaders: false,\n  });\n\n  // Apply rate limiting to webhook endpoints\n  app.use('/youtube-webhook', webhookLimiter);\n  app.use('/api/', commandLimiter);\n\n  // Set up webhook endpoints\n  setupWebhookEndpoints(app, container);\n\n  // Error handling middleware\n  app.use((error, req, res) => {\n    logger.error('Express error:', error);\n    res.status(500).json({ error: 'Internal Server Error' });\n  });\n\n  // 404 handler\n  app.use((req, res) => {\n    res.status(404).json({ error: 'Not Found' });\n  });\n\n  // Start server\n  const port = config.get('PSH_PORT', 3000);\n  const server = app.listen(port, () => {\n    logger.info(`🌐 Web server listening on port ${port}`);\n  });\n\n  // Store server reference for graceful shutdown\n  container.registerInstance('httpServer', server);\n}\n\n/**\n * Set up graceful shutdown handlers\n */\nfunction setupGracefulShutdown(container) {\n  const shutdownHandler = createShutdownHandler(container);\n\n  // Handle various shutdown signals\n  process.on('SIGTERM', () => shutdownHandler('SIGTERM'));\n  process.on('SIGINT', () => shutdownHandler('SIGINT'));\n  process.on('SIGUSR1', () => shutdownHandler('SIGUSR1'));\n  process.on('SIGUSR2', () => shutdownHandler('SIGUSR2'));\n\n  // Handle uncaught exceptions\n  process.on('uncaughtException', (error) => {\n    const logger = container.resolve('logger');\n    logger.error('Uncaught Exception:', error);\n    shutdownHandler('uncaughtException');\n  });\n\n  // Handle unhandled promise rejections\n  process.on('unhandledRejection', (reason, promise) => {\n    const logger = container.resolve('logger');\n    logger.error('Unhandled Rejection at:', promise, 'reason:', reason);\n    shutdownHandler('unhandledRejection');\n  });\n}\n\n// Only run when executed directly (not imported in tests)\nif (import.meta.url === pathToFileURL(process.argv[1]).href) {\n  main().catch((error) => {\n    console.error('Fatal error:', error);\n    process.exit(1);\n  });\n}\n\n// Export for testing\nexport { main };\n"],"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","ignoreList":[]}
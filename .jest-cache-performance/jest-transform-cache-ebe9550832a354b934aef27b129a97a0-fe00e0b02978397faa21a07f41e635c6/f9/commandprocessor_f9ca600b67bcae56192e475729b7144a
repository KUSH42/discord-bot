051ee17acf1c91f65f64cd6af7fe4786
/* istanbul ignore next */
function cov_umpjnbrph() {
  var path = "/home/xush/Documents/prog/discord-youtube-bot/src/core/command-processor.js";
  var hash = "f959cef9085a62f266ec8ad298c0e424902624e5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/xush/Documents/prog/discord-youtube-bot/src/core/command-processor.js",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 25
        }
      },
      "1": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 30
        }
      },
      "2": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 59
        }
      },
      "3": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 32
        }
      },
      "4": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 21,
          column: 7
        }
      },
      "5": {
        start: {
          line: 20,
          column: 6
        },
        end: {
          line: 20,
          column: 84
        }
      },
      "6": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 25,
          column: 7
        }
      },
      "7": {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 24,
          column: 89
        }
      },
      "8": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 7
        }
      },
      "9": {
        start: {
          line: 28,
          column: 6
        },
        end: {
          line: 28,
          column: 96
        }
      },
      "10": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 34,
          column: 7
        }
      },
      "11": {
        start: {
          line: 32,
          column: 26
        },
        end: {
          line: 32,
          column: 88
        }
      },
      "12": {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 33,
          column: 103
        }
      },
      "13": {
        start: {
          line: 44,
          column: 27
        },
        end: {
          line: 44,
          column: 51
        }
      },
      "14": {
        start: {
          line: 45,
          column: 31
        },
        end: {
          line: 45,
          column: 60
        }
      },
      "15": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "16": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 48,
          column: 45
        }
      },
      "17": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 16
        }
      },
      "18": {
        start: {
          line: 59,
          column: 30
        },
        end: {
          line: 59,
          column: 69
        }
      },
      "19": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 88
        }
      },
      "20": {
        start: {
          line: 60,
          column: 72
        },
        end: {
          line: 60,
          column: 81
        }
      },
      "21": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "22": {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 73,
          column: 66
        }
      },
      "23": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "24": {
        start: {
          line: 77,
          column: 6
        },
        end: {
          line: 77,
          column: 65
        }
      },
      "25": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "26": {
        start: {
          line: 81,
          column: 6
        },
        end: {
          line: 81,
          column: 59
        }
      },
      "27": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "28": {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 94,
          column: 7
        }
      },
      "29": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 87,
          column: 41
        }
      },
      "30": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "31": {
        start: {
          line: 89,
          column: 10
        },
        end: {
          line: 92,
          column: 12
        }
      },
      "32": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "33": {
        start: {
          line: 98,
          column: 23
        },
        end: {
          line: 98,
          column: 66
        }
      },
      "34": {
        start: {
          line: 100,
          column: 6
        },
        end: {
          line: 102,
          column: 7
        }
      },
      "35": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 70
        }
      },
      "36": {
        start: {
          line: 104,
          column: 26
        },
        end: {
          line: 104,
          column: 88
        }
      },
      "37": {
        start: {
          line: 105,
          column: 6
        },
        end: {
          line: 110,
          column: 7
        }
      },
      "38": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 109,
          column: 10
        }
      },
      "39": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 113,
          column: 29
        }
      },
      "40": {
        start: {
          line: 125,
          column: 23
        },
        end: {
          line: 125,
          column: 66
        }
      },
      "41": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "42": {
        start: {
          line: 127,
          column: 6
        },
        end: {
          line: 131,
          column: 8
        }
      },
      "43": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 141,
          column: 5
        }
      },
      "44": {
        start: {
          line: 136,
          column: 6
        },
        end: {
          line: 140,
          column: 8
        }
      },
      "45": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 181,
          column: 5
        }
      },
      "46": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 48
        }
      },
      "47": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 45
        }
      },
      "48": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 47
        }
      },
      "49": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 48
        }
      },
      "50": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 47
        }
      },
      "51": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 41
        }
      },
      "52": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 57
        }
      },
      "53": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 57
        }
      },
      "54": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 41
        }
      },
      "55": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 47
        }
      },
      "56": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 180,
          column: 10
        }
      },
      "57": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 193,
          column: 6
        }
      },
      "58": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 203,
          column: 6
        }
      },
      "59": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 210,
          column: 44
        }
      },
      "60": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 218,
          column: 6
        }
      },
      "61": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 232,
          column: 5
        }
      },
      "62": {
        start: {
          line: 226,
          column: 27
        },
        end: {
          line: 226,
          column: 71
        }
      },
      "63": {
        start: {
          line: 227,
          column: 6
        },
        end: {
          line: 231,
          column: 8
        }
      },
      "64": {
        start: {
          line: 234,
          column: 22
        },
        end: {
          line: 234,
          column: 43
        }
      },
      "65": {
        start: {
          line: 235,
          column: 22
        },
        end: {
          line: 235,
          column: 42
        }
      },
      "66": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 237,
          column: 53
        }
      },
      "67": {
        start: {
          line: 239,
          column: 4
        },
        end: {
          line: 244,
          column: 6
        }
      },
      "68": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 258,
          column: 5
        }
      },
      "69": {
        start: {
          line: 252,
          column: 27
        },
        end: {
          line: 252,
          column: 78
        }
      },
      "70": {
        start: {
          line: 253,
          column: 6
        },
        end: {
          line: 257,
          column: 8
        }
      },
      "71": {
        start: {
          line: 260,
          column: 22
        },
        end: {
          line: 260,
          column: 43
        }
      },
      "72": {
        start: {
          line: 261,
          column: 22
        },
        end: {
          line: 261,
          column: 42
        }
      },
      "73": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 263,
          column: 60
        }
      },
      "74": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 270,
          column: 6
        }
      },
      "75": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 284,
          column: 5
        }
      },
      "76": {
        start: {
          line: 278,
          column: 27
        },
        end: {
          line: 278,
          column: 61
        }
      },
      "77": {
        start: {
          line: 279,
          column: 6
        },
        end: {
          line: 283,
          column: 8
        }
      },
      "78": {
        start: {
          line: 286,
          column: 21
        },
        end: {
          line: 286,
          column: 49
        }
      },
      "79": {
        start: {
          line: 289,
          column: 4
        },
        end: {
          line: 289,
          column: 41
        }
      },
      "80": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 297,
          column: 6
        }
      },
      "81": {
        start: {
          line: 304,
          column: 24
        },
        end: {
          line: 304,
          column: 34
        }
      },
      "82": {
        start: {
          line: 305,
          column: 19
        },
        end: {
          line: 305,
          column: 47
        }
      },
      "83": {
        start: {
          line: 306,
          column: 22
        },
        end: {
          line: 306,
          column: 106
        }
      },
      "84": {
        start: {
          line: 307,
          column: 21
        },
        end: {
          line: 307,
          column: 42
        }
      },
      "85": {
        start: {
          line: 308,
          column: 18
        },
        end: {
          line: 308,
          column: 61
        }
      },
      "86": {
        start: {
          line: 310,
          column: 25
        },
        end: {
          line: 310,
          column: 55
        }
      },
      "87": {
        start: {
          line: 311,
          column: 27
        },
        end: {
          line: 311,
          column: 65
        }
      },
      "88": {
        start: {
          line: 312,
          column: 32
        },
        end: {
          line: 312,
          column: 76
        }
      },
      "89": {
        start: {
          line: 313,
          column: 29
        },
        end: {
          line: 313,
          column: 80
        }
      },
      "90": {
        start: {
          line: 315,
          column: 23
        },
        end: {
          line: 323,
          column: 5
        }
      },
      "91": {
        start: {
          line: 325,
          column: 4
        },
        end: {
          line: 330,
          column: 6
        }
      },
      "92": {
        start: {
          line: 337,
          column: 24
        },
        end: {
          line: 347,
          column: 5
        }
      },
      "93": {
        start: {
          line: 349,
          column: 26
        },
        end: {
          line: 349,
          column: 159
        }
      },
      "94": {
        start: {
          line: 351,
          column: 4
        },
        end: {
          line: 355,
          column: 6
        }
      },
      "95": {
        start: {
          line: 366,
          column: 4
        },
        end: {
          line: 372,
          column: 5
        }
      },
      "96": {
        start: {
          line: 367,
          column: 6
        },
        end: {
          line: 371,
          column: 8
        }
      },
      "97": {
        start: {
          line: 374,
          column: 4
        },
        end: {
          line: 379,
          column: 6
        }
      },
      "98": {
        start: {
          line: 383,
          column: 4
        },
        end: {
          line: 399,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 2
          },
          end: {
            line: 6,
            column: 3
          }
        },
        loc: {
          start: {
            line: 6,
            column: 36
          },
          end: {
            line: 13,
            column: 3
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 18,
            column: 3
          }
        },
        loc: {
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 35,
            column: 3
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 46
          },
          end: {
            line: 19,
            column: 47
          }
        },
        loc: {
          start: {
            line: 19,
            column: 57
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 51
          },
          end: {
            line: 23,
            column: 52
          }
        },
        loc: {
          start: {
            line: 23,
            column: 62
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 58
          },
          end: {
            line: 27,
            column: 59
          }
        },
        loc: {
          start: {
            line: 27,
            column: 69
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 31,
            column: 40
          },
          end: {
            line: 31,
            column: 41
          }
        },
        loc: {
          start: {
            line: 31,
            column: 51
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 31
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 43,
            column: 2
          },
          end: {
            line: 43,
            column: 3
          }
        },
        loc: {
          start: {
            line: 43,
            column: 36
          },
          end: {
            line: 52,
            column: 3
          }
        },
        line: 43
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 58,
            column: 2
          },
          end: {
            line: 58,
            column: 3
          }
        },
        loc: {
          start: {
            line: 58,
            column: 22
          },
          end: {
            line: 61,
            column: 3
          }
        },
        line: 58
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 60,
            column: 64
          },
          end: {
            line: 60,
            column: 65
          }
        },
        loc: {
          start: {
            line: 60,
            column: 72
          },
          end: {
            line: 60,
            column: 81
          }
        },
        line: 60
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 70,
            column: 2
          },
          end: {
            line: 70,
            column: 3
          }
        },
        loc: {
          start: {
            line: 70,
            column: 41
          },
          end: {
            line: 114,
            column: 3
          }
        },
        line: 70
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 123,
            column: 2
          },
          end: {
            line: 123,
            column: 3
          }
        },
        loc: {
          start: {
            line: 123,
            column: 68
          },
          end: {
            line: 182,
            column: 3
          }
        },
        line: 123
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 187,
            column: 2
          },
          end: {
            line: 187,
            column: 3
          }
        },
        loc: {
          start: {
            line: 187,
            column: 29
          },
          end: {
            line: 194,
            column: 3
          }
        },
        line: 187
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 196,
            column: 2
          },
          end: {
            line: 196,
            column: 3
          }
        },
        loc: {
          start: {
            line: 196,
            column: 30
          },
          end: {
            line: 204,
            column: 3
          }
        },
        line: 196
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 209,
            column: 2
          },
          end: {
            line: 209,
            column: 3
          }
        },
        loc: {
          start: {
            line: 209,
            column: 27
          },
          end: {
            line: 219,
            column: 3
          }
        },
        line: 209
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 224,
            column: 2
          },
          end: {
            line: 224,
            column: 3
          }
        },
        loc: {
          start: {
            line: 224,
            column: 29
          },
          end: {
            line: 245,
            column: 3
          }
        },
        line: 224
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 250,
            column: 2
          },
          end: {
            line: 250,
            column: 3
          }
        },
        loc: {
          start: {
            line: 250,
            column: 30
          },
          end: {
            line: 271,
            column: 3
          }
        },
        line: 250
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 276,
            column: 2
          },
          end: {
            line: 276,
            column: 3
          }
        },
        loc: {
          start: {
            line: 276,
            column: 29
          },
          end: {
            line: 298,
            column: 3
          }
        },
        line: 276
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 303,
            column: 2
          },
          end: {
            line: 303,
            column: 3
          }
        },
        loc: {
          start: {
            line: 303,
            column: 23
          },
          end: {
            line: 331,
            column: 3
          }
        },
        line: 303
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 336,
            column: 2
          },
          end: {
            line: 336,
            column: 3
          }
        },
        loc: {
          start: {
            line: 336,
            column: 23
          },
          end: {
            line: 356,
            column: 3
          }
        },
        line: 336
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 365,
            column: 2
          },
          end: {
            line: 365,
            column: 3
          }
        },
        loc: {
          start: {
            line: 365,
            column: 39
          },
          end: {
            line: 380,
            column: 3
          }
        },
        line: 365
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 382,
            column: 2
          },
          end: {
            line: 382,
            column: 3
          }
        },
        loc: {
          start: {
            line: 382,
            column: 13
          },
          end: {
            line: 400,
            column: 3
          }
        },
        line: 382
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 13
          },
          end: {
            line: 20,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 42
          },
          end: {
            line: 20,
            column: 46
          }
        }, {
          start: {
            line: 20,
            column: 49
          },
          end: {
            line: 20,
            column: 83
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 13
          },
          end: {
            line: 24,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 42
          },
          end: {
            line: 24,
            column: 46
          }
        }, {
          start: {
            line: 24,
            column: 49
          },
          end: {
            line: 24,
            column: 88
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 13
          },
          end: {
            line: 28,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 42
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: 28,
            column: 49
          },
          end: {
            line: 28,
            column: 95
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 13
          },
          end: {
            line: 33,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 43
          },
          end: {
            line: 33,
            column: 47
          }
        }, {
          start: {
            line: 33,
            column: 50
          },
          end: {
            line: 33,
            column: 102
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 60,
            column: 11
          },
          end: {
            line: 60,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 60,
            column: 31
          },
          end: {
            line: 60,
            column: 82
          }
        }, {
          start: {
            line: 60,
            column: 85
          },
          end: {
            line: 60,
            column: 87
          }
        }],
        line: 60
      },
      "6": {
        loc: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "7": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 72,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 72,
            column: 16
          }
        }, {
          start: {
            line: 72,
            column: 20
          },
          end: {
            line: 72,
            column: 47
          }
        }],
        line: 72
      },
      "8": {
        loc: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "9": {
        loc: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "10": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 80,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 80,
            column: 15
          }
        }, {
          start: {
            line: 80,
            column: 19
          },
          end: {
            line: 80,
            column: 45
          }
        }],
        line: 80
      },
      "11": {
        loc: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "12": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 85,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 85,
            column: 30
          }
        }, {
          start: {
            line: 85,
            column: 34
          },
          end: {
            line: 85,
            column: 57
          }
        }],
        line: 85
      },
      "13": {
        loc: {
          start: {
            line: 86,
            column: 6
          },
          end: {
            line: 94,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 6
          },
          end: {
            line: 94,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "14": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "15": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 88,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 88,
            column: 26
          }
        }, {
          start: {
            line: 88,
            column: 30
          },
          end: {
            line: 88,
            column: 45
          }
        }],
        line: 88
      },
      "16": {
        loc: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "17": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 97,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 97,
            column: 30
          }
        }, {
          start: {
            line: 97,
            column: 34
          },
          end: {
            line: 97,
            column: 49
          }
        }],
        line: 97
      },
      "18": {
        loc: {
          start: {
            line: 98,
            column: 23
          },
          end: {
            line: 98,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 98,
            column: 33
          },
          end: {
            line: 98,
            column: 61
          }
        }, {
          start: {
            line: 98,
            column: 64
          },
          end: {
            line: 98,
            column: 66
          }
        }],
        line: 98
      },
      "19": {
        loc: {
          start: {
            line: 100,
            column: 6
          },
          end: {
            line: 102,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 6
          },
          end: {
            line: 102,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "20": {
        loc: {
          start: {
            line: 100,
            column: 10
          },
          end: {
            line: 100,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 10
          },
          end: {
            line: 100,
            column: 19
          }
        }, {
          start: {
            line: 100,
            column: 23
          },
          end: {
            line: 100,
            column: 43
          }
        }, {
          start: {
            line: 100,
            column: 47
          },
          end: {
            line: 100,
            column: 73
          }
        }],
        line: 100
      },
      "21": {
        loc: {
          start: {
            line: 105,
            column: 6
          },
          end: {
            line: 110,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 6
          },
          end: {
            line: 110,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "22": {
        loc: {
          start: {
            line: 123,
            column: 32
          },
          end: {
            line: 123,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 123,
            column: 39
          },
          end: {
            line: 123,
            column: 41
          }
        }],
        line: 123
      },
      "23": {
        loc: {
          start: {
            line: 123,
            column: 51
          },
          end: {
            line: 123,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 123,
            column: 62
          },
          end: {
            line: 123,
            column: 66
          }
        }],
        line: 123
      },
      "24": {
        loc: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "25": {
        loc: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "26": {
        loc: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 145,
            column: 6
          },
          end: {
            line: 146,
            column: 48
          }
        }, {
          start: {
            line: 148,
            column: 6
          },
          end: {
            line: 149,
            column: 45
          }
        }, {
          start: {
            line: 151,
            column: 6
          },
          end: {
            line: 152,
            column: 47
          }
        }, {
          start: {
            line: 154,
            column: 6
          },
          end: {
            line: 155,
            column: 48
          }
        }, {
          start: {
            line: 157,
            column: 6
          },
          end: {
            line: 158,
            column: 47
          }
        }, {
          start: {
            line: 160,
            column: 6
          },
          end: {
            line: 161,
            column: 41
          }
        }, {
          start: {
            line: 163,
            column: 6
          },
          end: {
            line: 164,
            column: 57
          }
        }, {
          start: {
            line: 166,
            column: 6
          },
          end: {
            line: 167,
            column: 57
          }
        }, {
          start: {
            line: 169,
            column: 6
          },
          end: {
            line: 170,
            column: 41
          }
        }, {
          start: {
            line: 172,
            column: 6
          },
          end: {
            line: 173,
            column: 47
          }
        }, {
          start: {
            line: 175,
            column: 6
          },
          end: {
            line: 180,
            column: 10
          }
        }],
        line: 144
      },
      "27": {
        loc: {
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "28": {
        loc: {
          start: {
            line: 229,
            column: 48
          },
          end: {
            line: 229,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 229,
            column: 63
          },
          end: {
            line: 229,
            column: 72
          }
        }, {
          start: {
            line: 229,
            column: 75
          },
          end: {
            line: 229,
            column: 85
          }
        }],
        line: 229
      },
      "29": {
        loc: {
          start: {
            line: 241,
            column: 51
          },
          end: {
            line: 241,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 241,
            column: 63
          },
          end: {
            line: 241,
            column: 72
          }
        }, {
          start: {
            line: 241,
            column: 75
          },
          end: {
            line: 241,
            column: 85
          }
        }],
        line: 241
      },
      "30": {
        loc: {
          start: {
            line: 243,
            column: 49
          },
          end: {
            line: 243,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 243,
            column: 61
          },
          end: {
            line: 243,
            column: 70
          }
        }, {
          start: {
            line: 243,
            column: 73
          },
          end: {
            line: 243,
            column: 83
          }
        }],
        line: 243
      },
      "31": {
        loc: {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "32": {
        loc: {
          start: {
            line: 255,
            column: 56
          },
          end: {
            line: 255,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 255,
            column: 71
          },
          end: {
            line: 255,
            column: 80
          }
        }, {
          start: {
            line: 255,
            column: 83
          },
          end: {
            line: 255,
            column: 93
          }
        }],
        line: 255
      },
      "33": {
        loc: {
          start: {
            line: 267,
            column: 62
          },
          end: {
            line: 267,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 267,
            column: 74
          },
          end: {
            line: 267,
            column: 83
          }
        }, {
          start: {
            line: 267,
            column: 86
          },
          end: {
            line: 267,
            column: 96
          }
        }],
        line: 267
      },
      "34": {
        loc: {
          start: {
            line: 269,
            column: 43
          },
          end: {
            line: 269,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 269,
            column: 55
          },
          end: {
            line: 269,
            column: 64
          }
        }, {
          start: {
            line: 269,
            column: 67
          },
          end: {
            line: 269,
            column: 77
          }
        }],
        line: 269
      },
      "35": {
        loc: {
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "36": {
        loc: {
          start: {
            line: 318,
            column: 21
          },
          end: {
            line: 318,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 318,
            column: 38
          },
          end: {
            line: 318,
            column: 47
          }
        }, {
          start: {
            line: 318,
            column: 50
          },
          end: {
            line: 318,
            column: 60
          }
        }],
        line: 318
      },
      "37": {
        loc: {
          start: {
            line: 319,
            column: 21
          },
          end: {
            line: 319,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 319,
            column: 43
          },
          end: {
            line: 319,
            column: 52
          }
        }, {
          start: {
            line: 319,
            column: 55
          },
          end: {
            line: 319,
            column: 65
          }
        }],
        line: 319
      },
      "38": {
        loc: {
          start: {
            line: 320,
            column: 17
          },
          end: {
            line: 320,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 320,
            column: 36
          },
          end: {
            line: 320,
            column: 45
          }
        }, {
          start: {
            line: 320,
            column: 48
          },
          end: {
            line: 320,
            column: 58
          }
        }],
        line: 320
      },
      "39": {
        loc: {
          start: {
            line: 321,
            column: 20
          },
          end: {
            line: 321,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 321,
            column: 35
          },
          end: {
            line: 321,
            column: 64
          }
        }, {
          start: {
            line: 321,
            column: 67
          },
          end: {
            line: 321,
            column: 76
          }
        }],
        line: 321
      },
      "40": {
        loc: {
          start: {
            line: 366,
            column: 4
          },
          end: {
            line: 372,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 366,
            column: 4
          },
          end: {
            line: 372,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 366
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f959cef9085a62f266ec8ad298c0e424902624e5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_umpjnbrph = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_umpjnbrph();
/**
 * Pure business logic for processing Discord bot commands
 * No side effects - only processes input and returns command results
 */
export class CommandProcessor {
  constructor(config, stateManager) {
    /* istanbul ignore next */
    cov_umpjnbrph().f[0]++;
    cov_umpjnbrph().s[0]++;
    this.config = config;
    /* istanbul ignore next */
    cov_umpjnbrph().s[1]++;
    this.state = stateManager;
    /* istanbul ignore next */
    cov_umpjnbrph().s[2]++;
    this.commandPrefix = config.get('COMMAND_PREFIX', '!');

    // Set up validators for state keys this processor manages
    /* istanbul ignore next */
    cov_umpjnbrph().s[3]++;
    this.setupStateValidators();
  }

  /**
   * Set up state validators for command-managed state
   */
  setupStateValidators() {
    /* istanbul ignore next */
    cov_umpjnbrph().f[1]++;
    cov_umpjnbrph().s[4]++;
    this.state.setValidator('postingEnabled', value => {
      /* istanbul ignore next */
      cov_umpjnbrph().f[2]++;
      cov_umpjnbrph().s[5]++;
      return typeof value === 'boolean' ?
      /* istanbul ignore next */
      (cov_umpjnbrph().b[0][0]++, true) :
      /* istanbul ignore next */
      (cov_umpjnbrph().b[0][1]++, 'postingEnabled must be a boolean');
    });
    /* istanbul ignore next */
    cov_umpjnbrph().s[6]++;
    this.state.setValidator('announcementEnabled', value => {
      /* istanbul ignore next */
      cov_umpjnbrph().f[3]++;
      cov_umpjnbrph().s[7]++;
      return typeof value === 'boolean' ?
      /* istanbul ignore next */
      (cov_umpjnbrph().b[1][0]++, true) :
      /* istanbul ignore next */
      (cov_umpjnbrph().b[1][1]++, 'announcementEnabled must be a boolean');
    });
    /* istanbul ignore next */
    cov_umpjnbrph().s[8]++;
    this.state.setValidator('vxTwitterConversionEnabled', value => {
      /* istanbul ignore next */
      cov_umpjnbrph().f[4]++;
      cov_umpjnbrph().s[9]++;
      return typeof value === 'boolean' ?
      /* istanbul ignore next */
      (cov_umpjnbrph().b[2][0]++, true) :
      /* istanbul ignore next */
      (cov_umpjnbrph().b[2][1]++, 'vxTwitterConversionEnabled must be a boolean');
    });
    /* istanbul ignore next */
    cov_umpjnbrph().s[10]++;
    this.state.setValidator('logLevel', value => {
      /* istanbul ignore next */
      cov_umpjnbrph().f[5]++;
      const validLevels =
      /* istanbul ignore next */
      (cov_umpjnbrph().s[11]++, ['error', 'warn', 'info', 'http', 'verbose', 'debug', 'silly']);
      /* istanbul ignore next */
      cov_umpjnbrph().s[12]++;
      return validLevels.includes(value) ?
      /* istanbul ignore next */
      (cov_umpjnbrph().b[3][0]++, true) :
      /* istanbul ignore next */
      (cov_umpjnbrph().b[3][1]++, `logLevel must be one of: ${validLevels.join(', ')}`);
    });
  }

  /**
   * Check if user is authorized for a command
   * @param {string} userId - Discord user ID
   * @param {string} command - Command name
   * @returns {boolean} True if authorized
   */
  isUserAuthorized(userId, command) {
    /* istanbul ignore next */
    cov_umpjnbrph().f[6]++;
    const allowedUserIds =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[13]++, this.getAllowedUserIds());
    const restrictedCommands =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[14]++, ['restart', 'kill', 'update']);
    /* istanbul ignore next */
    cov_umpjnbrph().s[15]++;
    if (restrictedCommands.includes(command)) {
      /* istanbul ignore next */
      cov_umpjnbrph().b[4][0]++;
      cov_umpjnbrph().s[16]++;
      return allowedUserIds.includes(userId);
    } else
    /* istanbul ignore next */
    {
      cov_umpjnbrph().b[4][1]++;
    }
    cov_umpjnbrph().s[17]++;
    return true; // All other commands are allowed for any user
  }

  /**
   * Get list of allowed user IDs from configuration
   * @returns {Array<string>} Array of allowed user IDs
   */
  getAllowedUserIds() {
    /* istanbul ignore next */
    cov_umpjnbrph().f[7]++;
    const allowedUserIdsStr =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[18]++, this.config.get('ALLOWED_USER_IDS', ''));
    /* istanbul ignore next */
    cov_umpjnbrph().s[19]++;
    return allowedUserIdsStr ?
    /* istanbul ignore next */
    (cov_umpjnbrph().b[5][0]++, allowedUserIdsStr.split(',').map(id => {
      /* istanbul ignore next */
      cov_umpjnbrph().f[8]++;
      cov_umpjnbrph().s[20]++;
      return id.trim();
    })) :
    /* istanbul ignore next */
    (cov_umpjnbrph().b[5][1]++, []);
  }

  /**
   * Validate command format and inputs
   * @param {string} command - Command name
   * @param {Array<string>} args - Command arguments
   * @param {string} userId - User ID
   * @returns {Object} Validation result with success boolean and error message
   */
  validateCommand(command, args, userId) {
    /* istanbul ignore next */
    cov_umpjnbrph().f[9]++;
    cov_umpjnbrph().s[21]++;
    // Basic format validation
    if (
    /* istanbul ignore next */
    (cov_umpjnbrph().b[7][0]++, !command) ||
    /* istanbul ignore next */
    (cov_umpjnbrph().b[7][1]++, typeof command !== 'string')) {
      /* istanbul ignore next */
      cov_umpjnbrph().b[6][0]++;
      cov_umpjnbrph().s[22]++;
      return {
        success: false,
        error: 'Invalid command format.'
      };
    } else
    /* istanbul ignore next */
    {
      cov_umpjnbrph().b[6][1]++;
    }
    cov_umpjnbrph().s[23]++;
    if (command.length > 20) {
      /* istanbul ignore next */
      cov_umpjnbrph().b[8][0]++;
      cov_umpjnbrph().s[24]++;
      return {
        success: false,
        error: 'Command name too long.'
      };
    } else
    /* istanbul ignore next */
    {
      cov_umpjnbrph().b[8][1]++;
    }
    cov_umpjnbrph().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_umpjnbrph().b[10][0]++, !userId) ||
    /* istanbul ignore next */
    (cov_umpjnbrph().b[10][1]++, typeof userId !== 'string')) {
      /* istanbul ignore next */
      cov_umpjnbrph().b[9][0]++;
      cov_umpjnbrph().s[26]++;
      return {
        success: false,
        error: 'Invalid user ID.'
      };
    } else
    /* istanbul ignore next */
    {
      cov_umpjnbrph().b[9][1]++;
    }

    // Command-specific validation
    cov_umpjnbrph().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_umpjnbrph().b[12][0]++, command === 'announce') ||
    /* istanbul ignore next */
    (cov_umpjnbrph().b[12][1]++, command === 'vxtwitter')) {
      /* istanbul ignore next */
      cov_umpjnbrph().b[11][0]++;
      cov_umpjnbrph().s[28]++;
      if (args.length > 0) {
        /* istanbul ignore next */
        cov_umpjnbrph().b[13][0]++;
        const arg =
        /* istanbul ignore next */
        (cov_umpjnbrph().s[29]++, args[0].toLowerCase());
        /* istanbul ignore next */
        cov_umpjnbrph().s[30]++;
        if (
        /* istanbul ignore next */
        (cov_umpjnbrph().b[15][0]++, arg !== 'true') &&
        /* istanbul ignore next */
        (cov_umpjnbrph().b[15][1]++, arg !== 'false')) {
          /* istanbul ignore next */
          cov_umpjnbrph().b[14][0]++;
          cov_umpjnbrph().s[31]++;
          return {
            success: false,
            error: `Invalid argument for ${this.commandPrefix}${command}. Use \`${this.commandPrefix}${command} true\` or \`${this.commandPrefix}${command} false\`.`
          };
        } else
        /* istanbul ignore next */
        {
          cov_umpjnbrph().b[14][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_umpjnbrph().b[13][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_umpjnbrph().b[11][1]++;
    }
    cov_umpjnbrph().s[32]++;
    if (
    /* istanbul ignore next */
    (cov_umpjnbrph().b[17][0]++, command === 'loglevel') &&
    /* istanbul ignore next */
    (cov_umpjnbrph().b[17][1]++, args.length > 0)) {
      /* istanbul ignore next */
      cov_umpjnbrph().b[16][0]++;
      const newLevel =
      /* istanbul ignore next */
      (cov_umpjnbrph().s[33]++, args[0] ?
      /* istanbul ignore next */
      (cov_umpjnbrph().b[18][0]++, args[0].toLowerCase().trim()) :
      /* istanbul ignore next */
      (cov_umpjnbrph().b[18][1]++, ''));
      /* istanbul ignore next */
      cov_umpjnbrph().s[34]++;
      if (
      /* istanbul ignore next */
      (cov_umpjnbrph().b[20][0]++, !newLevel) ||
      /* istanbul ignore next */
      (cov_umpjnbrph().b[20][1]++, newLevel.length > 10) ||
      /* istanbul ignore next */
      (cov_umpjnbrph().b[20][2]++, !/^[a-z]+$/.test(newLevel))) {
        /* istanbul ignore next */
        cov_umpjnbrph().b[19][0]++;
        cov_umpjnbrph().s[35]++;
        return {
          success: false,
          error: 'Invalid log level format.'
        };
      } else
      /* istanbul ignore next */
      {
        cov_umpjnbrph().b[19][1]++;
      }
      const validLevels =
      /* istanbul ignore next */
      (cov_umpjnbrph().s[36]++, ['error', 'warn', 'info', 'http', 'verbose', 'debug', 'silly']);
      /* istanbul ignore next */
      cov_umpjnbrph().s[37]++;
      if (!validLevels.includes(newLevel)) {
        /* istanbul ignore next */
        cov_umpjnbrph().b[21][0]++;
        cov_umpjnbrph().s[38]++;
        return {
          success: false,
          error: `Invalid log level. Valid levels are: ${validLevels.join(', ')}.`
        };
      } else
      /* istanbul ignore next */
      {
        cov_umpjnbrph().b[21][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_umpjnbrph().b[16][1]++;
    }
    cov_umpjnbrph().s[39]++;
    return {
      success: true
    };
  }

  /**
   * Process a Discord command
   * @param {string} command - Command name
   * @param {Array<string>} args - Command arguments
   * @param {string} userId - UserID who issued the command
   * @returns {Promise<Object>} Command result object
   */
  async processCommand(command, args =
  /* istanbul ignore next */
  (cov_umpjnbrph().b[22][0]++, []), userId, appStats =
  /* istanbul ignore next */
  (cov_umpjnbrph().b[23][0]++, null)) {
    /* istanbul ignore next */
    cov_umpjnbrph().f[10]++;
    // Validate command
    const validation =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[40]++, this.validateCommand(command, args, userId));
    /* istanbul ignore next */
    cov_umpjnbrph().s[41]++;
    if (!validation.success) {
      /* istanbul ignore next */
      cov_umpjnbrph().b[24][0]++;
      cov_umpjnbrph().s[42]++;
      return {
        success: false,
        message: `❌ ${validation.error}`,
        requiresRestart: false
      };
    } else
    /* istanbul ignore next */
    {
      cov_umpjnbrph().b[24][1]++;
    }

    // Check authorization
    cov_umpjnbrph().s[43]++;
    if (!this.isUserAuthorized(userId, command)) {
      /* istanbul ignore next */
      cov_umpjnbrph().b[25][0]++;
      cov_umpjnbrph().s[44]++;
      return {
        success: false,
        message: '🚫 You are not authorized to use this command.',
        requiresRestart: false
      };
    } else
    /* istanbul ignore next */
    {
      cov_umpjnbrph().b[25][1]++;
    }

    // Process specific commands
    cov_umpjnbrph().s[45]++;
    switch (command) {
      case 'restart':
        /* istanbul ignore next */
        cov_umpjnbrph().b[26][0]++;
        cov_umpjnbrph().s[46]++;
        return await this.handleRestart(userId);
      case 'kill':
        /* istanbul ignore next */
        cov_umpjnbrph().b[26][1]++;
        cov_umpjnbrph().s[47]++;
        return await this.handleKill(userId);
      case 'announce':
        /* istanbul ignore next */
        cov_umpjnbrph().b[26][2]++;
        cov_umpjnbrph().s[48]++;
        return await this.handleAnnounce(args);
      case 'vxtwitter':
        /* istanbul ignore next */
        cov_umpjnbrph().b[26][3]++;
        cov_umpjnbrph().s[49]++;
        return await this.handleVxTwitter(args);
      case 'loglevel':
        /* istanbul ignore next */
        cov_umpjnbrph().b[26][4]++;
        cov_umpjnbrph().s[50]++;
        return await this.handleLogLevel(args);
      case 'health':
        /* istanbul ignore next */
        cov_umpjnbrph().b[26][5]++;
        cov_umpjnbrph().s[51]++;
        return await this.handleHealth();
      case 'health-detailed':
        /* istanbul ignore next */
        cov_umpjnbrph().b[26][6]++;
        cov_umpjnbrph().s[52]++;
        return await this.handleHealthDetailed(appStats);
      case 'hd':
        /* istanbul ignore next */
        cov_umpjnbrph().b[26][7]++;
        cov_umpjnbrph().s[53]++;
        return await this.handleHealthDetailed(appStats);
      case 'readme':
        /* istanbul ignore next */
        cov_umpjnbrph().b[26][8]++;
        cov_umpjnbrph().s[54]++;
        return await this.handleReadme();
      case 'update':
        /* istanbul ignore next */
        cov_umpjnbrph().b[26][9]++;
        cov_umpjnbrph().s[55]++;
        return await this.handleUpdate(userId);
      default:
        /* istanbul ignore next */
        cov_umpjnbrph().b[26][10]++;
        cov_umpjnbrph().s[56]++;
        return {
          success: false,
          message: `❓ Unknown command: \`${command}\`. Use \`${this.commandPrefix}readme\` for help.`,
          requiresRestart: false
        };
    }
  }

  /**
   * Handle restart command
   */
  async handleUpdate(userId) {
    /* istanbul ignore next */
    cov_umpjnbrph().f[11]++;
    cov_umpjnbrph().s[57]++;
    return {
      success: true,
      message: '🚀 Initiating update... Pulling latest changes, please wait for confirmation.',
      requiresUpdate: true,
      userId
    };
  }
  async handleRestart(userId) {
    /* istanbul ignore next */
    cov_umpjnbrph().f[12]++;
    cov_umpjnbrph().s[58]++;
    // Note: The actual restart logic is handled by the application layer
    return {
      success: true,
      message: '🔄 Initiating full restart... The bot will reload all configurations.',
      requiresRestart: true,
      userId
    };
  }

  /**
   * Handle kill command
   */
  async handleKill(userId) {
    /* istanbul ignore next */
    cov_umpjnbrph().f[13]++;
    cov_umpjnbrph().s[59]++;
    this.state.set('postingEnabled', false);
    /* istanbul ignore next */
    cov_umpjnbrph().s[60]++;
    return {
      success: true,
      message: '🛑 All Discord posting has been stopped.',
      requiresRestart: false,
      logMessage: `User executed kill command. All Discord posting is now disabled.`,
      userId
    };
  }

  /**
   * Handle announce command
   */
  async handleAnnounce(args) {
    /* istanbul ignore next */
    cov_umpjnbrph().f[14]++;
    cov_umpjnbrph().s[61]++;
    if (args.length === 0) {
      /* istanbul ignore next */
      cov_umpjnbrph().b[27][0]++;
      const currentState =
      /* istanbul ignore next */
      (cov_umpjnbrph().s[62]++, this.state.get('announcementEnabled', false));
      /* istanbul ignore next */
      cov_umpjnbrph().s[63]++;
      return {
        success: true,
        message: `Current announcement state: ${currentState ?
        /* istanbul ignore next */
        (cov_umpjnbrph().b[28][0]++, 'enabled') :
        /* istanbul ignore next */
        (cov_umpjnbrph().b[28][1]++, 'disabled')}. Usage: ${this.commandPrefix}announce <true|false>`,
        requiresRestart: false
      };
    } else
    /* istanbul ignore next */
    {
      cov_umpjnbrph().b[27][1]++;
    }
    const enableArg =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[64]++, args[0].toLowerCase());
    const isEnabled =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[65]++, enableArg === 'true');
    /* istanbul ignore next */
    cov_umpjnbrph().s[66]++;
    this.state.set('announcementEnabled', isEnabled);
    /* istanbul ignore next */
    cov_umpjnbrph().s[67]++;
    return {
      success: true,
      message: `📣 Announcement posting is now **${isEnabled ?
      /* istanbul ignore next */
      (cov_umpjnbrph().b[29][0]++, 'enabled') :
      /* istanbul ignore next */
      (cov_umpjnbrph().b[29][1]++, 'disabled')}**. (Support log is unaffected)`,
      requiresRestart: false,
      logMessage: `Announcement posting is now ${isEnabled ?
      /* istanbul ignore next */
      (cov_umpjnbrph().b[30][0]++, 'enabled') :
      /* istanbul ignore next */
      (cov_umpjnbrph().b[30][1]++, 'disabled')}.`
    };
  }

  /**
   * Handle vxtwitter command
   */
  async handleVxTwitter(args) {
    /* istanbul ignore next */
    cov_umpjnbrph().f[15]++;
    cov_umpjnbrph().s[68]++;
    if (args.length === 0) {
      /* istanbul ignore next */
      cov_umpjnbrph().b[31][0]++;
      const currentState =
      /* istanbul ignore next */
      (cov_umpjnbrph().s[69]++, this.state.get('vxTwitterConversionEnabled', false));
      /* istanbul ignore next */
      cov_umpjnbrph().s[70]++;
      return {
        success: true,
        message: `Current vxtwitter conversion state: ${currentState ?
        /* istanbul ignore next */
        (cov_umpjnbrph().b[32][0]++, 'enabled') :
        /* istanbul ignore next */
        (cov_umpjnbrph().b[32][1]++, 'disabled')}. Usage: ${this.commandPrefix}vxtwitter <true|false>`,
        requiresRestart: false
      };
    } else
    /* istanbul ignore next */
    {
      cov_umpjnbrph().b[31][1]++;
    }
    const enableArg =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[71]++, args[0].toLowerCase());
    const isEnabled =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[72]++, enableArg === 'true');
    /* istanbul ignore next */
    cov_umpjnbrph().s[73]++;
    this.state.set('vxTwitterConversionEnabled', isEnabled);
    /* istanbul ignore next */
    cov_umpjnbrph().s[74]++;
    return {
      success: true,
      message: `🐦 URL conversion to vxtwitter.com is now **${isEnabled ?
      /* istanbul ignore next */
      (cov_umpjnbrph().b[33][0]++, 'enabled') :
      /* istanbul ignore next */
      (cov_umpjnbrph().b[33][1]++, 'disabled')}**.`,
      requiresRestart: false,
      logMessage: `URL conversion is now ${isEnabled ?
      /* istanbul ignore next */
      (cov_umpjnbrph().b[34][0]++, 'enabled') :
      /* istanbul ignore next */
      (cov_umpjnbrph().b[34][1]++, 'disabled')}.`
    };
  }

  /**
   * Handle loglevel command
   */
  async handleLogLevel(args) {
    /* istanbul ignore next */
    cov_umpjnbrph().f[16]++;
    cov_umpjnbrph().s[75]++;
    if (args.length === 0) {
      /* istanbul ignore next */
      cov_umpjnbrph().b[35][0]++;
      const currentLevel =
      /* istanbul ignore next */
      (cov_umpjnbrph().s[76]++, this.state.get('logLevel', 'info'));
      /* istanbul ignore next */
      cov_umpjnbrph().s[77]++;
      return {
        success: true,
        message: `Current log level: ${currentLevel}. Usage: ${this.commandPrefix}loglevel <level>`,
        requiresRestart: false
      };
    } else
    /* istanbul ignore next */
    {
      cov_umpjnbrph().b[35][1]++;
    }
    const newLevel =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[78]++, args[0].toLowerCase().trim());

    // Validation was already done in validateCommand
    /* istanbul ignore next */
    cov_umpjnbrph().s[79]++;
    this.state.set('logLevel', newLevel);
    /* istanbul ignore next */
    cov_umpjnbrph().s[80]++;
    return {
      success: true,
      message: `🔧 Log level has been changed to **${newLevel}**.`,
      requiresRestart: false,
      logMessage: `Log level changed to '${newLevel}'.`,
      newLogLevel: newLevel
    };
  }

  /**
   * Handle health command
   */
  async handleHealth() {
    /* istanbul ignore next */
    cov_umpjnbrph().f[17]++;
    const currentTime =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[81]++, new Date());
    const uptime =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[82]++, Math.floor(process.uptime()));
    const uptimeStr =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[83]++, `${Math.floor(uptime / 3600)}h ${Math.floor(uptime % 3600 / 60)}m ${uptime % 60}s`);
    const memUsage =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[84]++, process.memoryUsage());
    const memMB =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[85]++, Math.round(memUsage.heapUsed / 1024 / 1024));
    const botStartTime =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[86]++, this.state.get('botStartTime'));
    const postingEnabled =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[87]++, this.state.get('postingEnabled', true));
    const announcementEnabled =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[88]++, this.state.get('announcementEnabled', false));
    const vxTwitterEnabled =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[89]++, this.state.get('vxTwitterConversionEnabled', false));
    const healthData =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[90]++, {
      uptime: uptimeStr,
      memoryUsage: `${memMB} MB`,
      postingStatus: postingEnabled ?
      /* istanbul ignore next */
      (cov_umpjnbrph().b[36][0]++, 'Enabled') :
      /* istanbul ignore next */
      (cov_umpjnbrph().b[36][1]++, 'Disabled'),
      announcements: announcementEnabled ?
      /* istanbul ignore next */
      (cov_umpjnbrph().b[37][0]++, 'Enabled') :
      /* istanbul ignore next */
      (cov_umpjnbrph().b[37][1]++, 'Disabled'),
      vxTwitter: vxTwitterEnabled ?
      /* istanbul ignore next */
      (cov_umpjnbrph().b[38][0]++, 'Enabled') :
      /* istanbul ignore next */
      (cov_umpjnbrph().b[38][1]++, 'Disabled'),
      botStartTime: botStartTime ?
      /* istanbul ignore next */
      (cov_umpjnbrph().b[39][0]++, botStartTime.toLocaleString()) :
      /* istanbul ignore next */
      (cov_umpjnbrph().b[39][1]++, 'Unknown'),
      timestamp: currentTime.toISOString()
    });
    /* istanbul ignore next */
    cov_umpjnbrph().s[91]++;
    return {
      success: true,
      message: 'Health check completed',
      requiresRestart: false,
      healthData
    };
  }

  /**
   * Handle readme command
   */
  async handleReadme() {
    /* istanbul ignore next */
    cov_umpjnbrph().f[18]++;
    const commandList =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[92]++, [`**${this.commandPrefix}kill**: Stops *all* bot posting to Discord channels (announcements and support log).`, `**${this.commandPrefix}restart**: Performs a full restart of the bot, reloading the .env file and all configurations. Requires specific user authorization (\`ALLOWED_USER_IDS\`).`, `**${this.commandPrefix}announce <true|false>**: Toggles announcement posting to non-support channels.`, `**${this.commandPrefix}vxtwitter <true|false>**: Toggles the conversion of \`x.com\` URLs to \`vxtwitter.com\` in announcements.`, `**${this.commandPrefix}loglevel <level>**: Changes the bot's logging level (e.g., info, debug).`, `**${this.commandPrefix}health**: Shows bot health status and system information.`, `**${this.commandPrefix}health-detailed**: Shows detailed health status for all components.`, `**${this.commandPrefix}update**: Pulls the latest changes from git, updates dependencies, and restarts the bot.`, `**${this.commandPrefix}readme**: Displays this command information.`]);
    const readmeMessage =
    /* istanbul ignore next */
    (cov_umpjnbrph().s[93]++, `**Discord Bot Message Commands**\n\nThese commands can only be used in the configured support channel.\n\n${commandList.join('\n')}`);
    /* istanbul ignore next */
    cov_umpjnbrph().s[94]++;
    return {
      success: true,
      message: readmeMessage,
      requiresRestart: false
    };
  }

  /**
   * Get command statistics
   * @returns {Object} Command usage statistics
   */
  /**
   * Handle detailed health command
   */
  async handleHealthDetailed(appStats) {
    /* istanbul ignore next */
    cov_umpjnbrph().f[19]++;
    cov_umpjnbrph().s[95]++;
    if (!appStats) {
      /* istanbul ignore next */
      cov_umpjnbrph().b[40][0]++;
      cov_umpjnbrph().s[96]++;
      return {
        success: false,
        message: 'Detailed health information is not available at the moment.',
        requiresRestart: false
      };
    } else
    /* istanbul ignore next */
    {
      cov_umpjnbrph().b[40][1]++;
    }
    cov_umpjnbrph().s[97]++;
    return {
      success: true,
      message: 'Detailed health check completed',
      requiresRestart: false,
      healthData: appStats
    };
  }
  getStats() {
    /* istanbul ignore next */
    cov_umpjnbrph().f[20]++;
    cov_umpjnbrph().s[98]++;
    return {
      availableCommands: ['restart', 'kill', 'announce', 'vxtwitter', 'loglevel', 'health', 'health-detailed', 'hd', 'readme', 'update'],
      restrictedCommands: ['restart', 'kill', 'update'],
      allowedUsers: this.getAllowedUserIds().length,
      commandPrefix: this.commandPrefix
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
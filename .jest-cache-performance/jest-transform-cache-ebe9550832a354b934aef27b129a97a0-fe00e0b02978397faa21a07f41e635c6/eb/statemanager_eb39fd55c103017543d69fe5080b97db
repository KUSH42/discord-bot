15ea71d539b3ff983c99453d95b86d0f
/* istanbul ignore next */
function cov_igneruij4() {
  var path = "/home/xush/Documents/prog/discord-youtube-bot/src/infrastructure/state-manager.js";
  var hash = "d4500f4c151488e04a45d0a538e20dabf695eb4f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/xush/Documents/prog/discord-youtube-bot/src/infrastructure/state-manager.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 37
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 33
        }
      },
      "2": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 32
        }
      },
      "3": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "4": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "5": {
        start: {
          line: 20,
          column: 6
        },
        end: {
          line: 20,
          column: 52
        }
      },
      "6": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 98
        }
      },
      "7": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "8": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 34,
          column: 52
        }
      },
      "9": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "10": {
        start: {
          line: 38,
          column: 6
        },
        end: {
          line: 38,
          column: 71
        }
      },
      "11": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "12": {
        start: {
          line: 43,
          column: 24
        },
        end: {
          line: 43,
          column: 48
        }
      },
      "13": {
        start: {
          line: 44,
          column: 31
        },
        end: {
          line: 44,
          column: 64
        }
      },
      "14": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 48,
          column: 7
        }
      },
      "15": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 83
        }
      },
      "16": {
        start: {
          line: 51,
          column: 21
        },
        end: {
          line: 51,
          column: 36
        }
      },
      "17": {
        start: {
          line: 52,
          column: 23
        },
        end: {
          line: 52,
          column: 41
        }
      },
      "18": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "19": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 55,
          column: 30
        }
      },
      "20": {
        start: {
          line: 56,
          column: 6
        },
        end: {
          line: 56,
          column: 51
        }
      },
      "21": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 16
        }
      },
      "22": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "23": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 68,
          column: 51
        }
      },
      "24": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "25": {
        start: {
          line: 72,
          column: 6
        },
        end: {
          line: 72,
          column: 71
        }
      },
      "26": {
        start: {
          line: 76,
          column: 29
        },
        end: {
          line: 76,
          column: 31
        }
      },
      "27": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "28": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 85,
          column: 7
        }
      },
      "29": {
        start: {
          line: 79,
          column: 26
        },
        end: {
          line: 79,
          column: 50
        }
      },
      "30": {
        start: {
          line: 80,
          column: 33
        },
        end: {
          line: 80,
          column: 66
        }
      },
      "31": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "32": {
        start: {
          line: 83,
          column: 10
        },
        end: {
          line: 83,
          column: 85
        }
      },
      "33": {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 86,
          column: 36
        }
      },
      "34": {
        start: {
          line: 90,
          column: 20
        },
        end: {
          line: 90,
          column: 22
        }
      },
      "35": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "36": {
        start: {
          line: 92,
          column: 23
        },
        end: {
          line: 92,
          column: 38
        }
      },
      "37": {
        start: {
          line: 93,
          column: 6
        },
        end: {
          line: 96,
          column: 7
        }
      },
      "38": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 32
        }
      },
      "39": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 47
        }
      },
      "40": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 102,
          column: 5
        }
      },
      "41": {
        start: {
          line: 101,
          column: 6
        },
        end: {
          line: 101,
          column: 72
        }
      },
      "42": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 111,
          column: 65
        }
      },
      "43": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 122,
          column: 5
        }
      },
      "44": {
        start: {
          line: 121,
          column: 6
        },
        end: {
          line: 121,
          column: 52
        }
      },
      "45": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 126,
          column: 5
        }
      },
      "46": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 125,
          column: 71
        }
      },
      "47": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "48": {
        start: {
          line: 129,
          column: 23
        },
        end: {
          line: 129,
          column: 38
        }
      },
      "49": {
        start: {
          line: 130,
          column: 6
        },
        end: {
          line: 130,
          column: 29
        }
      },
      "50": {
        start: {
          line: 131,
          column: 6
        },
        end: {
          line: 131,
          column: 55
        }
      },
      "51": {
        start: {
          line: 132,
          column: 6
        },
        end: {
          line: 132,
          column: 18
        }
      },
      "52": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 17
        }
      },
      "53": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "54": {
        start: {
          line: 146,
          column: 6
        },
        end: {
          line: 146,
          column: 52
        }
      },
      "55": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "56": {
        start: {
          line: 150,
          column: 6
        },
        end: {
          line: 150,
          column: 53
        }
      },
      "57": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "58": {
        start: {
          line: 154,
          column: 6
        },
        end: {
          line: 154,
          column: 36
        }
      },
      "59": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 157,
          column: 45
        }
      },
      "60": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 160,
          column: 49
        }
      },
      "61": {
        start: {
          line: 160,
          column: 17
        },
        end: {
          line: 160,
          column: 48
        }
      },
      "62": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 171,
          column: 5
        }
      },
      "63": {
        start: {
          line: 170,
          column: 6
        },
        end: {
          line: 170,
          column: 13
        }
      },
      "64": {
        start: {
          line: 173,
          column: 22
        },
        end: {
          line: 173,
          column: 47
        }
      },
      "65": {
        start: {
          line: 174,
          column: 18
        },
        end: {
          line: 174,
          column: 45
        }
      },
      "66": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "67": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 177,
          column: 33
        }
      },
      "68": {
        start: {
          line: 180,
          column: 6
        },
        end: {
          line: 182,
          column: 7
        }
      },
      "69": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 37
        }
      },
      "70": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 194,
          column: 5
        }
      },
      "71": {
        start: {
          line: 193,
          column: 6
        },
        end: {
          line: 193,
          column: 52
        }
      },
      "72": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 198,
          column: 5
        }
      },
      "73": {
        start: {
          line: 197,
          column: 6
        },
        end: {
          line: 197,
          column: 54
        }
      },
      "74": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 200,
          column: 40
        }
      },
      "75": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 208,
          column: 32
        }
      },
      "76": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 216,
          column: 35
        }
      },
      "77": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 224,
          column: 29
        }
      },
      "78": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 234,
          column: 5
        }
      },
      "79": {
        start: {
          line: 233,
          column: 6
        },
        end: {
          line: 233,
          column: 71
        }
      },
      "80": {
        start: {
          line: 236,
          column: 21
        },
        end: {
          line: 236,
          column: 38
        }
      },
      "81": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 237,
          column: 33
        }
      },
      "82": {
        start: {
          line: 240,
          column: 20
        },
        end: {
          line: 240,
          column: 81
        }
      },
      "83": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 248,
          column: 5
        }
      },
      "84": {
        start: {
          line: 242,
          column: 23
        },
        end: {
          line: 242,
          column: 36
        }
      },
      "85": {
        start: {
          line: 243,
          column: 23
        },
        end: {
          line: 243,
          column: 38
        }
      },
      "86": {
        start: {
          line: 245,
          column: 6
        },
        end: {
          line: 247,
          column: 7
        }
      },
      "87": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 56
        }
      },
      "88": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 255,
          column: 23
        }
      },
      "89": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 262,
          column: 24
        }
      },
      "90": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 270,
          column: 23
        }
      },
      "91": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 283,
          column: 6
        }
      },
      "92": {
        start: {
          line: 281,
          column: 82
        },
        end: {
          line: 281,
          column: 98
        }
      },
      "93": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 293,
          column: 5
        }
      },
      "94": {
        start: {
          line: 292,
          column: 6
        },
        end: {
          line: 292,
          column: 42
        }
      },
      "95": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 295,
          column: 31
        }
      },
      "96": {
        start: {
          line: 303,
          column: 22
        },
        end: {
          line: 303,
          column: 47
        }
      },
      "97": {
        start: {
          line: 304,
          column: 4
        },
        end: {
          line: 306,
          column: 5
        }
      },
      "98": {
        start: {
          line: 305,
          column: 6
        },
        end: {
          line: 305,
          column: 13
        }
      },
      "99": {
        start: {
          line: 309,
          column: 26
        },
        end: {
          line: 309,
          column: 40
        }
      },
      "100": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 323,
          column: 7
        }
      },
      "101": {
        start: {
          line: 313,
          column: 6
        },
        end: {
          line: 322,
          column: 7
        }
      },
      "102": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 321,
          column: 9
        }
      },
      "103": {
        start: {
          line: 316,
          column: 10
        },
        end: {
          line: 320,
          column: 11
        }
      },
      "104": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 46
        }
      },
      "105": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 85
        }
      },
      "106": {
        start: {
          line: 330,
          column: 4
        },
        end: {
          line: 336,
          column: 6
        }
      },
      "107": {
        start: {
          line: 332,
          column: 82
        },
        end: {
          line: 332,
          column: 98
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 2
          },
          end: {
            line: 5,
            column: 3
          }
        },
        loc: {
          start: {
            line: 5,
            column: 33
          },
          end: {
            line: 10,
            column: 3
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 18,
            column: 3
          }
        },
        loc: {
          start: {
            line: 18,
            column: 37
          },
          end: {
            line: 24,
            column: 3
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 32,
            column: 3
          }
        },
        loc: {
          start: {
            line: 32,
            column: 18
          },
          end: {
            line: 60,
            column: 3
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 66,
            column: 2
          },
          end: {
            line: 66,
            column: 3
          }
        },
        loc: {
          start: {
            line: 66,
            column: 18
          },
          end: {
            line: 103,
            column: 3
          }
        },
        line: 66
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 110,
            column: 2
          },
          end: {
            line: 110,
            column: 3
          }
        },
        loc: {
          start: {
            line: 110,
            column: 11
          },
          end: {
            line: 112,
            column: 3
          }
        },
        line: 110
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 119,
            column: 2
          },
          end: {
            line: 119,
            column: 3
          }
        },
        loc: {
          start: {
            line: 119,
            column: 14
          },
          end: {
            line: 136,
            column: 3
          }
        },
        line: 119
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 144,
            column: 2
          },
          end: {
            line: 144,
            column: 3
          }
        },
        loc: {
          start: {
            line: 144,
            column: 27
          },
          end: {
            line: 161,
            column: 3
          }
        },
        line: 144
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 160,
            column: 11
          },
          end: {
            line: 160,
            column: 12
          }
        },
        loc: {
          start: {
            line: 160,
            column: 17
          },
          end: {
            line: 160,
            column: 48
          }
        },
        line: 160
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 168,
            column: 2
          },
          end: {
            line: 168,
            column: 3
          }
        },
        loc: {
          start: {
            line: 168,
            column: 29
          },
          end: {
            line: 184,
            column: 3
          }
        },
        line: 168
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 191,
            column: 2
          },
          end: {
            line: 191,
            column: 3
          }
        },
        loc: {
          start: {
            line: 191,
            column: 31
          },
          end: {
            line: 201,
            column: 3
          }
        },
        line: 191
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 207,
            column: 2
          },
          end: {
            line: 207,
            column: 3
          }
        },
        loc: {
          start: {
            line: 207,
            column: 23
          },
          end: {
            line: 209,
            column: 3
          }
        },
        line: 207
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 215,
            column: 2
          },
          end: {
            line: 215,
            column: 3
          }
        },
        loc: {
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 217,
            column: 3
          }
        },
        line: 215
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 223,
            column: 2
          },
          end: {
            line: 223,
            column: 3
          }
        },
        loc: {
          start: {
            line: 223,
            column: 11
          },
          end: {
            line: 225,
            column: 3
          }
        },
        line: 223
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 231,
            column: 2
          },
          end: {
            line: 231,
            column: 3
          }
        },
        loc: {
          start: {
            line: 231,
            column: 23
          },
          end: {
            line: 249,
            column: 3
          }
        },
        line: 231
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 254,
            column: 2
          },
          end: {
            line: 254,
            column: 3
          }
        },
        loc: {
          start: {
            line: 254,
            column: 9
          },
          end: {
            line: 256,
            column: 3
          }
        },
        line: 254
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 261,
            column: 2
          },
          end: {
            line: 261,
            column: 3
          }
        },
        loc: {
          start: {
            line: 261,
            column: 11
          },
          end: {
            line: 263,
            column: 3
          }
        },
        line: 261
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 269,
            column: 2
          },
          end: {
            line: 269,
            column: 3
          }
        },
        loc: {
          start: {
            line: 269,
            column: 13
          },
          end: {
            line: 271,
            column: 3
          }
        },
        line: 269
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 277,
            column: 2
          },
          end: {
            line: 277,
            column: 3
          }
        },
        loc: {
          start: {
            line: 277,
            column: 19
          },
          end: {
            line: 284,
            column: 3
          }
        },
        line: 277
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 281,
            column: 68
          },
          end: {
            line: 281,
            column: 69
          }
        },
        loc: {
          start: {
            line: 281,
            column: 82
          },
          end: {
            line: 281,
            column: 98
          }
        },
        line: 281
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 290,
            column: 2
          },
          end: {
            line: 290,
            column: 3
          }
        },
        loc: {
          start: {
            line: 290,
            column: 28
          },
          end: {
            line: 296,
            column: 3
          }
        },
        line: 290
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 302,
            column: 2
          },
          end: {
            line: 302,
            column: 3
          }
        },
        loc: {
          start: {
            line: 302,
            column: 45
          },
          end: {
            line: 324,
            column: 3
          }
        },
        line: 302
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 312,
            column: 17
          },
          end: {
            line: 312,
            column: 18
          }
        },
        loc: {
          start: {
            line: 312,
            column: 23
          },
          end: {
            line: 323,
            column: 5
          }
        },
        line: 312
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 329,
            column: 2
          },
          end: {
            line: 329,
            column: 3
          }
        },
        loc: {
          start: {
            line: 329,
            column: 13
          },
          end: {
            line: 337,
            column: 3
          }
        },
        line: 329
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 332,
            column: 68
          },
          end: {
            line: 332,
            column: 69
          }
        },
        loc: {
          start: {
            line: 332,
            column: 82
          },
          end: {
            line: 332,
            column: 98
          }
        },
        line: 332
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 5,
            column: 14
          },
          end: {
            line: 5,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 5,
            column: 29
          },
          end: {
            line: 5,
            column: 31
          }
        }],
        line: 5
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 18,
            column: 35
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 23,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 67
          },
          end: {
            line: 23,
            column: 82
          }
        }, {
          start: {
            line: 23,
            column: 85
          },
          end: {
            line: 23,
            column: 97
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "5": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 46,
            column: 6
          },
          end: {
            line: 48,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 6
          },
          end: {
            line: 48,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "8": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "9": {
        loc: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "10": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 67,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 67,
            column: 35
          }
        }, {
          start: {
            line: 67,
            column: 39
          },
          end: {
            line: 67,
            column: 55
          }
        }],
        line: 67
      },
      "11": {
        loc: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "12": {
        loc: {
          start: {
            line: 78,
            column: 6
          },
          end: {
            line: 85,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 6
          },
          end: {
            line: 85,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "13": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "14": {
        loc: {
          start: {
            line: 93,
            column: 6
          },
          end: {
            line: 96,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 6
          },
          end: {
            line: 96,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "15": {
        loc: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "16": {
        loc: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "17": {
        loc: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "18": {
        loc: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "19": {
        loc: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "20": {
        loc: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "21": {
        loc: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "22": {
        loc: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "23": {
        loc: {
          start: {
            line: 180,
            column: 6
          },
          end: {
            line: 182,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 6
          },
          end: {
            line: 182,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "24": {
        loc: {
          start: {
            line: 192,
            column: 4
          },
          end: {
            line: 194,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 4
          },
          end: {
            line: 194,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "25": {
        loc: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "26": {
        loc: {
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 231,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 231,
            column: 19
          },
          end: {
            line: 231,
            column: 21
          }
        }],
        line: 231
      },
      "27": {
        loc: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "28": {
        loc: {
          start: {
            line: 245,
            column: 6
          },
          end: {
            line: 247,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 6
          },
          end: {
            line: 247,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "29": {
        loc: {
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "30": {
        loc: {
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 291,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 291,
            column: 17
          }
        }, {
          start: {
            line: 291,
            column: 21
          },
          end: {
            line: 291,
            column: 49
          }
        }],
        line: 291
      },
      "31": {
        loc: {
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 306,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 306,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      },
      "32": {
        loc: {
          start: {
            line: 304,
            column: 8
          },
          end: {
            line: 304,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 304,
            column: 8
          },
          end: {
            line: 304,
            column: 18
          }
        }, {
          start: {
            line: 304,
            column: 22
          },
          end: {
            line: 304,
            column: 44
          }
        }],
        line: 304
      },
      "33": {
        loc: {
          start: {
            line: 315,
            column: 8
          },
          end: {
            line: 321,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 8
          },
          end: {
            line: 321,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 315
      },
      "34": {
        loc: {
          start: {
            line: 315,
            column: 12
          },
          end: {
            line: 315,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 315,
            column: 12
          },
          end: {
            line: 315,
            column: 37
          }
        }, {
          start: {
            line: 315,
            column: 41
          },
          end: {
            line: 315,
            column: 85
          }
        }],
        line: 315
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d4500f4c151488e04a45d0a538e20dabf695eb4f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_igneruij4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_igneruij4();
/**
 * Centralized state management with validation and subscriptions
 */
export class StateManager {
  constructor(initialState =
  /* istanbul ignore next */
  (cov_igneruij4().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_igneruij4().f[0]++;
    cov_igneruij4().s[0]++;
    this.state = {
      ...initialState
    };
    /* istanbul ignore next */
    cov_igneruij4().s[1]++;
    this.subscribers = new Map();
    /* istanbul ignore next */
    cov_igneruij4().s[2]++;
    this.validators = new Map();
    /* istanbul ignore next */
    cov_igneruij4().s[3]++;
    this.locked = false;
  }

  /**
   * Get a state value
   * @param {string} key - State key
   * @param {*} defaultValue - Default value if key doesn't exist
   * @returns {*} State value
   */
  get(key, defaultValue =
  /* istanbul ignore next */
  (cov_igneruij4().b[1][0]++, undefined)) {
    /* istanbul ignore next */
    cov_igneruij4().f[1]++;
    cov_igneruij4().s[4]++;
    if (typeof key !== 'string') {
      /* istanbul ignore next */
      cov_igneruij4().b[2][0]++;
      cov_igneruij4().s[5]++;
      throw new Error('State key must be a string');
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[2][1]++;
    }
    cov_igneruij4().s[6]++;
    return Object.prototype.hasOwnProperty.call(this.state, key) ?
    /* istanbul ignore next */
    (cov_igneruij4().b[3][0]++, this.state[key]) :
    /* istanbul ignore next */
    (cov_igneruij4().b[3][1]++, defaultValue);
  }

  /**
   * Set a state value
   * @param {string} key - State key
   * @param {*} value - New value
   * @returns {boolean} True if value was set, false if validation failed
   */
  set(key, value) {
    /* istanbul ignore next */
    cov_igneruij4().f[2]++;
    cov_igneruij4().s[7]++;
    if (typeof key !== 'string') {
      /* istanbul ignore next */
      cov_igneruij4().b[4][0]++;
      cov_igneruij4().s[8]++;
      throw new Error('State key must be a string');
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[4][1]++;
    }
    cov_igneruij4().s[9]++;
    if (this.locked) {
      /* istanbul ignore next */
      cov_igneruij4().b[5][0]++;
      cov_igneruij4().s[10]++;
      throw new Error('StateManager is locked and cannot be modified');
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[5][1]++;
    }

    // Validate value if validator exists
    cov_igneruij4().s[11]++;
    if (this.validators.has(key)) {
      /* istanbul ignore next */
      cov_igneruij4().b[6][0]++;
      const validator =
      /* istanbul ignore next */
      (cov_igneruij4().s[12]++, this.validators.get(key));
      const validationResult =
      /* istanbul ignore next */
      (cov_igneruij4().s[13]++, validator(value, this.state[key]));
      /* istanbul ignore next */
      cov_igneruij4().s[14]++;
      if (validationResult !== true) {
        /* istanbul ignore next */
        cov_igneruij4().b[7][0]++;
        cov_igneruij4().s[15]++;
        throw new Error(`Validation failed for key '${key}': ${validationResult}`);
      } else
      /* istanbul ignore next */
      {
        cov_igneruij4().b[7][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[6][1]++;
    }
    const oldValue =
    /* istanbul ignore next */
    (cov_igneruij4().s[16]++, this.state[key]);
    const hasChanged =
    /* istanbul ignore next */
    (cov_igneruij4().s[17]++, oldValue !== value);
    /* istanbul ignore next */
    cov_igneruij4().s[18]++;
    if (hasChanged) {
      /* istanbul ignore next */
      cov_igneruij4().b[8][0]++;
      cov_igneruij4().s[19]++;
      this.state[key] = value;
      /* istanbul ignore next */
      cov_igneruij4().s[20]++;
      this.notifySubscribers(key, value, oldValue);
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[8][1]++;
    }
    cov_igneruij4().s[21]++;
    return true;
  }

  /**
   * Update multiple state values atomically
   * @param {Object} updates - Object with key-value pairs to update
   */
  update(updates) {
    /* istanbul ignore next */
    cov_igneruij4().f[3]++;
    cov_igneruij4().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_igneruij4().b[10][0]++, typeof updates !== 'object') ||
    /* istanbul ignore next */
    (cov_igneruij4().b[10][1]++, updates === null)) {
      /* istanbul ignore next */
      cov_igneruij4().b[9][0]++;
      cov_igneruij4().s[23]++;
      throw new Error('Updates must be an object');
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[9][1]++;
    }
    cov_igneruij4().s[24]++;
    if (this.locked) {
      /* istanbul ignore next */
      cov_igneruij4().b[11][0]++;
      cov_igneruij4().s[25]++;
      throw new Error('StateManager is locked and cannot be modified');
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[11][1]++;
    }

    // Validate all updates first
    const validatedUpdates =
    /* istanbul ignore next */
    (cov_igneruij4().s[26]++, {});
    /* istanbul ignore next */
    cov_igneruij4().s[27]++;
    for (const [key, value] of Object.entries(updates)) {
      /* istanbul ignore next */
      cov_igneruij4().s[28]++;
      if (this.validators.has(key)) {
        /* istanbul ignore next */
        cov_igneruij4().b[12][0]++;
        const validator =
        /* istanbul ignore next */
        (cov_igneruij4().s[29]++, this.validators.get(key));
        const validationResult =
        /* istanbul ignore next */
        (cov_igneruij4().s[30]++, validator(value, this.state[key]));
        /* istanbul ignore next */
        cov_igneruij4().s[31]++;
        if (validationResult !== true) {
          /* istanbul ignore next */
          cov_igneruij4().b[13][0]++;
          cov_igneruij4().s[32]++;
          throw new Error(`Validation failed for key '${key}': ${validationResult}`);
        } else
        /* istanbul ignore next */
        {
          cov_igneruij4().b[13][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_igneruij4().b[12][1]++;
      }
      cov_igneruij4().s[33]++;
      validatedUpdates[key] = value;
    }

    // Apply all updates
    const changes =
    /* istanbul ignore next */
    (cov_igneruij4().s[34]++, []);
    /* istanbul ignore next */
    cov_igneruij4().s[35]++;
    for (const [key, value] of Object.entries(validatedUpdates)) {
      const oldValue =
      /* istanbul ignore next */
      (cov_igneruij4().s[36]++, this.state[key]);
      /* istanbul ignore next */
      cov_igneruij4().s[37]++;
      if (oldValue !== value) {
        /* istanbul ignore next */
        cov_igneruij4().b[14][0]++;
        cov_igneruij4().s[38]++;
        this.state[key] = value;
        /* istanbul ignore next */
        cov_igneruij4().s[39]++;
        changes.push({
          key,
          value,
          oldValue
        });
      } else
      /* istanbul ignore next */
      {
        cov_igneruij4().b[14][1]++;
      }
    }

    // Notify subscribers of changes
    /* istanbul ignore next */
    cov_igneruij4().s[40]++;
    for (const change of changes) {
      /* istanbul ignore next */
      cov_igneruij4().s[41]++;
      this.notifySubscribers(change.key, change.value, change.oldValue);
    }
  }

  /**
   * Check if a key exists in the state
   * @param {string} key - State key
   * @returns {boolean} True if key exists
   */
  has(key) {
    /* istanbul ignore next */
    cov_igneruij4().f[4]++;
    cov_igneruij4().s[42]++;
    return Object.prototype.hasOwnProperty.call(this.state, key);
  }

  /**
   * Delete a state key
   * @param {string} key - State key
   * @returns {boolean} True if key was deleted
   */
  delete(key) {
    /* istanbul ignore next */
    cov_igneruij4().f[5]++;
    cov_igneruij4().s[43]++;
    if (typeof key !== 'string') {
      /* istanbul ignore next */
      cov_igneruij4().b[15][0]++;
      cov_igneruij4().s[44]++;
      throw new Error('State key must be a string');
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[15][1]++;
    }
    cov_igneruij4().s[45]++;
    if (this.locked) {
      /* istanbul ignore next */
      cov_igneruij4().b[16][0]++;
      cov_igneruij4().s[46]++;
      throw new Error('StateManager is locked and cannot be modified');
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[16][1]++;
    }
    cov_igneruij4().s[47]++;
    if (Object.prototype.hasOwnProperty.call(this.state, key)) {
      /* istanbul ignore next */
      cov_igneruij4().b[17][0]++;
      const oldValue =
      /* istanbul ignore next */
      (cov_igneruij4().s[48]++, this.state[key]);
      /* istanbul ignore next */
      cov_igneruij4().s[49]++;
      delete this.state[key];
      /* istanbul ignore next */
      cov_igneruij4().s[50]++;
      this.notifySubscribers(key, undefined, oldValue);
      /* istanbul ignore next */
      cov_igneruij4().s[51]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[17][1]++;
    }
    cov_igneruij4().s[52]++;
    return false;
  }

  /**
   * Subscribe to changes in a specific state key
   * @param {string} key - State key to watch
   * @param {Function} callback - Callback function (newValue, oldValue, key) => void
   * @returns {Function} Unsubscribe function
   */
  subscribe(key, callback) {
    /* istanbul ignore next */
    cov_igneruij4().f[6]++;
    cov_igneruij4().s[53]++;
    if (typeof key !== 'string') {
      /* istanbul ignore next */
      cov_igneruij4().b[18][0]++;
      cov_igneruij4().s[54]++;
      throw new Error('State key must be a string');
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[18][1]++;
    }
    cov_igneruij4().s[55]++;
    if (typeof callback !== 'function') {
      /* istanbul ignore next */
      cov_igneruij4().b[19][0]++;
      cov_igneruij4().s[56]++;
      throw new Error('Callback must be a function');
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[19][1]++;
    }
    cov_igneruij4().s[57]++;
    if (!this.subscribers.has(key)) {
      /* istanbul ignore next */
      cov_igneruij4().b[20][0]++;
      cov_igneruij4().s[58]++;
      this.subscribers.set(key, []);
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[20][1]++;
    }
    cov_igneruij4().s[59]++;
    this.subscribers.get(key).push(callback);

    // Return unsubscribe function
    /* istanbul ignore next */
    cov_igneruij4().s[60]++;
    return () => {
      /* istanbul ignore next */
      cov_igneruij4().f[7]++;
      cov_igneruij4().s[61]++;
      return this.unsubscribe(key, callback);
    };
  }

  /**
   * Unsubscribe from state changes
   * @param {string} key - State key
   * @param {Function} callback - Callback function to remove
   */
  unsubscribe(key, callback) {
    /* istanbul ignore next */
    cov_igneruij4().f[8]++;
    cov_igneruij4().s[62]++;
    if (!this.subscribers.has(key)) {
      /* istanbul ignore next */
      cov_igneruij4().b[21][0]++;
      cov_igneruij4().s[63]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[21][1]++;
    }
    const callbacks =
    /* istanbul ignore next */
    (cov_igneruij4().s[64]++, this.subscribers.get(key));
    const index =
    /* istanbul ignore next */
    (cov_igneruij4().s[65]++, callbacks.indexOf(callback));
    /* istanbul ignore next */
    cov_igneruij4().s[66]++;
    if (index !== -1) {
      /* istanbul ignore next */
      cov_igneruij4().b[22][0]++;
      cov_igneruij4().s[67]++;
      callbacks.splice(index, 1);

      // Clean up empty arrays
      /* istanbul ignore next */
      cov_igneruij4().s[68]++;
      if (callbacks.length === 0) {
        /* istanbul ignore next */
        cov_igneruij4().b[23][0]++;
        cov_igneruij4().s[69]++;
        this.subscribers.delete(key);
      } else
      /* istanbul ignore next */
      {
        cov_igneruij4().b[23][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[22][1]++;
    }
  }

  /**
   * Set a validator for a state key
   * @param {string} key - State key
   * @param {Function} validator - Validator function (newValue, oldValue) => true | string
   */
  setValidator(key, validator) {
    /* istanbul ignore next */
    cov_igneruij4().f[9]++;
    cov_igneruij4().s[70]++;
    if (typeof key !== 'string') {
      /* istanbul ignore next */
      cov_igneruij4().b[24][0]++;
      cov_igneruij4().s[71]++;
      throw new Error('State key must be a string');
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[24][1]++;
    }
    cov_igneruij4().s[72]++;
    if (typeof validator !== 'function') {
      /* istanbul ignore next */
      cov_igneruij4().b[25][0]++;
      cov_igneruij4().s[73]++;
      throw new Error('Validator must be a function');
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[25][1]++;
    }
    cov_igneruij4().s[74]++;
    this.validators.set(key, validator);
  }

  /**
   * Remove a validator for a state key
   * @param {string} key - State key
   */
  removeValidator(key) {
    /* istanbul ignore next */
    cov_igneruij4().f[10]++;
    cov_igneruij4().s[75]++;
    this.validators.delete(key);
  }

  /**
   * Get all state keys
   * @returns {Array<string>} Array of state keys
   */
  getKeys() {
    /* istanbul ignore next */
    cov_igneruij4().f[11]++;
    cov_igneruij4().s[76]++;
    return Object.keys(this.state);
  }

  /**
   * Get all state as a copy
   * @returns {Object} Copy of current state
   */
  getAll() {
    /* istanbul ignore next */
    cov_igneruij4().f[12]++;
    cov_igneruij4().s[77]++;
    return {
      ...this.state
    };
  }

  /**
   * Reset state to initial values or provided state
   * @param {Object} newState - New state object (optional)
   */
  reset(newState =
  /* istanbul ignore next */
  (cov_igneruij4().b[26][0]++, {})) {
    /* istanbul ignore next */
    cov_igneruij4().f[13]++;
    cov_igneruij4().s[78]++;
    if (this.locked) {
      /* istanbul ignore next */
      cov_igneruij4().b[27][0]++;
      cov_igneruij4().s[79]++;
      throw new Error('StateManager is locked and cannot be modified');
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[27][1]++;
    }
    const oldState =
    /* istanbul ignore next */
    (cov_igneruij4().s[80]++, {
      ...this.state
    });
    /* istanbul ignore next */
    cov_igneruij4().s[81]++;
    this.state = {
      ...newState
    };

    // Notify subscribers of all changes
    const allKeys =
    /* istanbul ignore next */
    (cov_igneruij4().s[82]++, new Set([...Object.keys(oldState), ...Object.keys(newState)]));
    /* istanbul ignore next */
    cov_igneruij4().s[83]++;
    for (const key of allKeys) {
      const oldValue =
      /* istanbul ignore next */
      (cov_igneruij4().s[84]++, oldState[key]);
      const newValue =
      /* istanbul ignore next */
      (cov_igneruij4().s[85]++, this.state[key]);
      /* istanbul ignore next */
      cov_igneruij4().s[86]++;
      if (oldValue !== newValue) {
        /* istanbul ignore next */
        cov_igneruij4().b[28][0]++;
        cov_igneruij4().s[87]++;
        this.notifySubscribers(key, newValue, oldValue);
      } else
      /* istanbul ignore next */
      {
        cov_igneruij4().b[28][1]++;
      }
    }
  }

  /**
   * Lock the state manager (prevent modifications)
   */
  lock() {
    /* istanbul ignore next */
    cov_igneruij4().f[14]++;
    cov_igneruij4().s[88]++;
    this.locked = true;
  }

  /**
   * Unlock the state manager (allow modifications)
   */
  unlock() {
    /* istanbul ignore next */
    cov_igneruij4().f[15]++;
    cov_igneruij4().s[89]++;
    this.locked = false;
  }

  /**
   * Check if state manager is locked
   * @returns {boolean} True if locked
   */
  isLocked() {
    /* istanbul ignore next */
    cov_igneruij4().f[16]++;
    cov_igneruij4().s[90]++;
    return this.locked;
  }

  /**
   * Create a snapshot of current state
   * @returns {Object} State snapshot with metadata
   */
  createSnapshot() {
    /* istanbul ignore next */
    cov_igneruij4().f[17]++;
    cov_igneruij4().s[91]++;
    return {
      state: {
        ...this.state
      },
      timestamp: Date.now(),
      subscriberCount: Array.from(this.subscribers.values()).reduce((sum, arr) => {
        /* istanbul ignore next */
        cov_igneruij4().f[18]++;
        cov_igneruij4().s[92]++;
        return sum + arr.length;
      }, 0),
      validatorCount: this.validators.size
    };
  }

  /**
   * Restore state from snapshot
   * @param {Object} snapshot - State snapshot
   */
  restoreSnapshot(snapshot) {
    /* istanbul ignore next */
    cov_igneruij4().f[19]++;
    cov_igneruij4().s[93]++;
    if (
    /* istanbul ignore next */
    (cov_igneruij4().b[30][0]++, !snapshot) ||
    /* istanbul ignore next */
    (cov_igneruij4().b[30][1]++, typeof snapshot !== 'object')) {
      /* istanbul ignore next */
      cov_igneruij4().b[29][0]++;
      cov_igneruij4().s[94]++;
      throw new Error('Invalid snapshot');
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[29][1]++;
    }
    cov_igneruij4().s[95]++;
    this.reset(snapshot.state);
  }

  /**
   * Notify subscribers of state changes
   * @private
   */
  notifySubscribers(key, newValue, oldValue) {
    /* istanbul ignore next */
    cov_igneruij4().f[20]++;
    const callbacks =
    /* istanbul ignore next */
    (cov_igneruij4().s[96]++, this.subscribers.get(key));
    /* istanbul ignore next */
    cov_igneruij4().s[97]++;
    if (
    /* istanbul ignore next */
    (cov_igneruij4().b[32][0]++, !callbacks) ||
    /* istanbul ignore next */
    (cov_igneruij4().b[32][1]++, callbacks.length === 0)) {
      /* istanbul ignore next */
      cov_igneruij4().b[31][0]++;
      cov_igneruij4().s[98]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_igneruij4().b[31][1]++;
    }

    // Create a copy to avoid issues if callbacks modify the array
    const callbacksCopy =
    /* istanbul ignore next */
    (cov_igneruij4().s[99]++, [...callbacks]);

    // Execute callbacks asynchronously to avoid blocking
    /* istanbul ignore next */
    cov_igneruij4().s[100]++;
    setImmediate(() => {
      /* istanbul ignore next */
      cov_igneruij4().f[21]++;
      cov_igneruij4().s[101]++;
      for (const callback of callbacksCopy) {
        /* istanbul ignore next */
        cov_igneruij4().s[102]++;
        // Check if the callback is still subscribed before invoking
        if (
        /* istanbul ignore next */
        (cov_igneruij4().b[34][0]++, this.subscribers.has(key)) &&
        /* istanbul ignore next */
        (cov_igneruij4().b[34][1]++, this.subscribers.get(key).includes(callback))) {
          /* istanbul ignore next */
          cov_igneruij4().b[33][0]++;
          cov_igneruij4().s[103]++;
          try {
            /* istanbul ignore next */
            cov_igneruij4().s[104]++;
            callback(newValue, oldValue, key);
          } catch (error) {
            /* istanbul ignore next */
            cov_igneruij4().s[105]++;
            console.error(`StateManager: Subscriber error for key '${key}':`, error);
          }
        } else
        /* istanbul ignore next */
        {
          cov_igneruij4().b[33][1]++;
        }
      }
    });
  }

  /**
   * Get statistics about the state manager
   */
  getStats() {
    /* istanbul ignore next */
    cov_igneruij4().f[22]++;
    cov_igneruij4().s[106]++;
    return {
      stateKeys: this.getKeys().length,
      subscriberCount: Array.from(this.subscribers.values()).reduce((sum, arr) => {
        /* istanbul ignore next */
        cov_igneruij4().f[23]++;
        cov_igneruij4().s[107]++;
        return sum + arr.length;
      }, 0),
      validatorCount: this.validators.size,
      locked: this.locked,
      memoryUsage: JSON.stringify(this.state).length
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
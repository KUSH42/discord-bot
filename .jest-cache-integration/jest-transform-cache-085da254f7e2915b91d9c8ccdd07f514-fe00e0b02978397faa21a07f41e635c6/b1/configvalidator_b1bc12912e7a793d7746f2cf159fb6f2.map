{"version":3,"names":["cov_cfy43zl1","actualCoverage","validateEnvironmentVariables","env","b","process","f","requiredVars","s","optionalVars","name","defaultValue","missing","warnings","varName","push","success","length","validateDiscordChannelId","channelId","channelIdRegex","test","validateYouTubeChannelId","youtubeChannelIdRegex","validateUrl","url","URL","validatePort","port","portNum","parseInt","isNaN","validateLogLevel","level","validLevels","includes","validateBooleanEnvVar","value","normalizedValue","toLowerCase","trim","parseBooleanEnvVar"],"sources":["config-validator.js"],"sourcesContent":["// config-validator.js\n// Configuration validation utilities for environment variables and security settings\n\n/**\n * Validates all required and optional environment variables\n * @param {Object} env - Environment variables object (defaults to process.env)\n * @returns {Object} - Validation result with success status and any issues\n */\nexport function validateEnvironmentVariables(env = process.env) {\n  const requiredVars = [\n    'DISCORD_BOT_TOKEN',\n    'YOUTUBE_API_KEY',\n    'YOUTUBE_CHANNEL_ID',\n    'DISCORD_YOUTUBE_CHANNEL_ID',\n    'PSH_CALLBACK_URL',\n    'X_USER_HANDLE',\n    'DISCORD_X_POSTS_CHANNEL_ID',\n    'DISCORD_X_REPLIES_CHANNEL_ID',\n    'DISCORD_X_QUOTES_CHANNEL_ID',\n    'DISCORD_X_RETWEETS_CHANNEL_ID',\n    'TWITTER_USERNAME',\n    'TWITTER_PASSWORD',\n    'DISCORD_BOT_SUPPORT_LOG_CHANNEL',\n  ];\n\n  const optionalVars = [\n    { name: 'COMMAND_PREFIX', defaultValue: '!' },\n    { name: 'PSH_PORT', defaultValue: '3000' },\n    { name: 'LOG_FILE_PATH', defaultValue: 'bot.log' },\n    { name: 'LOG_LEVEL', defaultValue: 'info' },\n    { name: 'PSH_SECRET', defaultValue: 'your_super_secret_string_here' },\n    { name: 'PSH_VERIFY_TOKEN', defaultValue: 'your_optional_verify_token' },\n    { name: 'ANNOUNCEMENT_ENABLED', defaultValue: 'false' },\n    { name: 'X_VX_TWITTER_CONVERSION', defaultValue: 'false' },\n    { name: 'X_QUERY_INTERVAL_MIN', defaultValue: '300000' },\n    { name: 'X_QUERY_INTERVAL_MAX', defaultValue: '600000' },\n    { name: 'ALLOWED_USER_IDS', defaultValue: null },\n    { name: 'ANNOUNCE_OLD_TWEETS', defaultValue: 'false' },\n    { name: 'WEBHOOK_DEBUG_LOGGING', defaultValue: 'false' },\n  ];\n\n  const missing = [];\n  const warnings = [];\n\n  // Check required variables\n  for (const varName of requiredVars) {\n    if (!env[varName]) {\n      missing.push(varName);\n    }\n  }\n\n  // Check optional variables and warn about security defaults\n  for (const { name } of optionalVars) {\n    if (!env[name]) {\n      if (name === 'PSH_SECRET' || name === 'PSH_VERIFY_TOKEN') {\n        warnings.push(`${name} not set - using default value (consider setting for security)`);\n      } else if (name === 'ALLOWED_USER_IDS') {\n        warnings.push(`${name} not set - restart command will be unavailable`);\n      }\n    }\n  }\n\n  return {\n    success: missing.length === 0,\n    missing,\n    warnings,\n    requiredVars,\n    optionalVars,\n  };\n}\n\n/**\n * Validates Discord channel ID format\n * @param {string} channelId - Discord channel ID to validate\n * @returns {boolean} - True if valid Discord channel ID format\n */\nexport function validateDiscordChannelId(channelId) {\n  if (!channelId || typeof channelId !== 'string') {\n    return false;\n  }\n\n  // Discord channel IDs are 17-19 digit numbers\n  const channelIdRegex = /^\\d{17,19}$/;\n  return channelIdRegex.test(channelId);\n}\n\n/**\n * Validates YouTube channel ID format\n * @param {string} channelId - YouTube channel ID to validate\n * @returns {boolean} - True if valid YouTube channel ID format\n */\nexport function validateYouTubeChannelId(channelId) {\n  if (!channelId || typeof channelId !== 'string') {\n    return false;\n  }\n\n  // YouTube channel IDs start with 'UC' followed by 22 characters\n  const youtubeChannelIdRegex = /^UC[a-zA-Z0-9_-]{22}$/;\n  return youtubeChannelIdRegex.test(channelId);\n}\n\n/**\n * Validates URL format\n * @param {string} url - URL to validate\n * @returns {boolean} - True if valid URL format\n */\nexport function validateUrl(url) {\n  if (!url || typeof url !== 'string') {\n    return false;\n  }\n\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Validates port number\n * @param {string|number} port - Port number to validate\n * @returns {boolean} - True if valid port number\n */\nexport function validatePort(port) {\n  const portNum = parseInt(port, 10);\n  return !isNaN(portNum) && portNum >= 1 && portNum <= 65535;\n}\n\n/**\n * Validates log level\n * @param {string} level - Log level to validate\n * @returns {boolean} - True if valid log level\n */\nexport function validateLogLevel(level) {\n  const validLevels = ['error', 'warn', 'info', 'verbose', 'debug'];\n  return validLevels.includes(level);\n}\n\n/**\n * Validates boolean-like environment variable\n * @param {string} value - Environment variable value\n * @returns {boolean} - True if valid boolean representation\n */\nexport function validateBooleanEnvVar(value) {\n  if (typeof value !== 'string') {\n    return false;\n  }\n\n  const normalizedValue = value.toLowerCase().trim();\n  return ['true', 'false', '1', '0', 'yes', 'no'].includes(normalizedValue);\n}\n\n/**\n * Parses boolean environment variable\n * @param {string} value - Environment variable value\n * @param {boolean} defaultValue - Default value if parsing fails\n * @returns {boolean} - Parsed boolean value\n */\nexport function parseBooleanEnvVar(value, defaultValue = false) {\n  if (!value || typeof value !== 'string') {\n    return defaultValue;\n  }\n\n  const normalizedValue = value.toLowerCase().trim();\n  return ['true', '1', 'yes'].includes(normalizedValue);\n}\n"],"mappingseY;IAAAA,YAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,YAAA;AAfZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,4BAA4BA,CAACC,GAAG;AAAA;AAAA,CAAAH,YAAA,GAAAI,CAAA,UAAGC,OAAO,CAACF,GAAG,GAAE;EAAA;EAAAH,YAAA,GAAAM,CAAA;EAC9D,MAAMC,YAAY;EAAA;EAAA,CAAAP,YAAA,GAAAQ,CAAA,OAAG,CACnB,mBAAmB,EACnB,iBAAiB,EACjB,oBAAoB,EACpB,4BAA4B,EAC5B,kBAAkB,EAClB,eAAe,EACf,4BAA4B,EAC5B,8BAA8B,EAC9B,6BAA6B,EAC7B,+BAA+B,EAC/B,kBAAkB,EAClB,kBAAkB,EAClB,iCAAiC,CAClC;EAED,MAAMC,YAAY;EAAA;EAAA,CAAAT,YAAA,GAAAQ,CAAA,OAAG,CACnB;IAAEE,IAAI,EAAE,gBAAgB;IAAEC,YAAY,EAAE;EAAI,CAAC,EAC7C;IAAED,IAAI,EAAE,UAAU;IAAEC,YAAY,EAAE;EAAO,CAAC,EAC1C;IAAED,IAAI,EAAE,eAAe;IAAEC,YAAY,EAAE;EAAU,CAAC,EAClD;IAAED,IAAI,EAAE,WAAW;IAAEC,YAAY,EAAE;EAAO,CAAC,EAC3C;IAAED,IAAI,EAAE,YAAY;IAAEC,YAAY,EAAE;EAAgC,CAAC,EACrE;IAAED,IAAI,EAAE,kBAAkB;IAAEC,YAAY,EAAE;EAA6B,CAAC,EACxE;IAAED,IAAI,EAAE,sBAAsB;IAAEC,YAAY,EAAE;EAAQ,CAAC,EACvD;IAAED,IAAI,EAAE,yBAAyB;IAAEC,YAAY,EAAE;EAAQ,CAAC,EAC1D;IAAED,IAAI,EAAE,sBAAsB;IAAEC,YAAY,EAAE;EAAS,CAAC,EACxD;IAAED,IAAI,EAAE,sBAAsB;IAAEC,YAAY,EAAE;EAAS,CAAC,EACxD;IAAED,IAAI,EAAE,kBAAkB;IAAEC,YAAY,EAAE;EAAK,CAAC,EAChD;IAAED,IAAI,EAAE,qBAAqB;IAAEC,YAAY,EAAE;EAAQ,CAAC,EACtD;IAAED,IAAI,EAAE,uBAAuB;IAAEC,YAAY,EAAE;EAAQ,CAAC,CACzD;EAED,MAAMC,OAAO;EAAA;EAAA,CAAAZ,YAAA,GAAAQ,CAAA,OAAG,EAAE;EAClB,MAAMK,QAAQ;EAAA;EAAA,CAAAb,YAAA,GAAAQ,CAAA,OAAG,EAAE;;EAEnB;EAAA;EAAAR,YAAA,GAAAQ,CAAA;EACA,KAAK,MAAMM,OAAO,IAAIP,YAAY,EAAE;IAAA;IAAAP,YAAA,GAAAQ,CAAA;IAClC,IAAI,CAACL,GAAG,CAACW,OAAO,CAAC,EAAE;MAAA;MAAAd,YAAA,GAAAI,CAAA;MAAAJ,YAAA,GAAAQ,CAAA;MACjBI,OAAO,CAACG,IAAI,CAACD,OAAO,CAAC;IACvB,CAAC;IAAA;IAAA;MAAAd,YAAA,GAAAI,CAAA;IAAA;EACH;;EAEA;EAAA;EAAAJ,YAAA,GAAAQ,CAAA;EACA,KAAK,MAAM;IAAEE;EAAK,CAAC,IAAID,YAAY,EAAE;IAAA;IAAAT,YAAA,GAAAQ,CAAA;IACnC,IAAI,CAACL,GAAG,CAACO,IAAI,CAAC,EAAE;MAAA;MAAAV,YAAA,GAAAI,CAAA;MAAAJ,YAAA,GAAAQ,CAAA;MACd;MAAI;MAAA,CAAAR,YAAA,GAAAI,CAAA,UAAAM,IAAI,KAAK,YAAY;MAAA;MAAA,CAAAV,YAAA,GAAAI,CAAA,UAAIM,IAAI,KAAK,kBAAkB,GAAE;QAAA;QAAAV,YAAA,GAAAI,CAAA;QAAAJ,YAAA,GAAAQ,CAAA;QACxDK,QAAQ,CAACE,IAAI,CAAC,GAAGL,IAAI,gEAAgE,CAAC;MACxF,CAAC,MAAM;QAAA;QAAAV,YAAA,GAAAI,CAAA;QAAAJ,YAAA,GAAAQ,CAAA;QAAA,IAAIE,IAAI,KAAK,kBAAkB,EAAE;UAAA;UAAAV,YAAA,GAAAI,CAAA;UAAAJ,YAAA,GAAAQ,CAAA;UACtCK,QAAQ,CAACE,IAAI,CAAC,GAAGL,IAAI,gDAAgD,CAAC;QACxE,CAAC;QAAA;QAAA;UAAAV,YAAA,GAAAI,CAAA;QAAA;MAAD;IACF,CAAC;IAAA;IAAA;MAAAJ,YAAA,GAAAI,CAAA;IAAA;EACH;EAAC;EAAAJ,YAAA,GAAAQ,CAAA;EAED,OAAO;IACLQ,OAAO,EAAEJ,OAAO,CAACK,MAAM,KAAK,CAAC;IAC7BL,OAAO;IACPC,QAAQ;IACRN,YAAY;IACZE;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASS,wBAAwBA,CAACC,SAAS,EAAE;EAAA;EAAAnB,YAAA,GAAAM,CAAA;EAAAN,YAAA,GAAAQ,CAAA;EAClD;EAAI;EAAA,CAAAR,YAAA,GAAAI,CAAA,WAACe,SAAS;EAAA;EAAA,CAAAnB,YAAA,GAAAI,CAAA,UAAI,OAAOe,SAAS,KAAK,QAAQ,GAAE;IAAA;IAAAnB,YAAA,GAAAI,CAAA;IAAAJ,YAAA,GAAAQ,CAAA;IAC/C,OAAO,KAAK;EACd,CAAC;EAAA;EAAA;IAAAR,YAAA,GAAAI,CAAA;EAAA;;EAED;EACA,MAAMgB,cAAc;EAAA;EAAA,CAAApB,YAAA,GAAAQ,CAAA,QAAG,aAAa;EAAC;EAAAR,YAAA,GAAAQ,CAAA;EACrC,OAAOY,cAAc,CAACC,IAAI,CAACF,SAAS,CAAC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,wBAAwBA,CAACH,SAAS,EAAE;EAAA;EAAAnB,YAAA,GAAAM,CAAA;EAAAN,YAAA,GAAAQ,CAAA;EAClD;EAAI;EAAA,CAAAR,YAAA,GAAAI,CAAA,WAACe,SAAS;EAAA;EAAA,CAAAnB,YAAA,GAAAI,CAAA,UAAI,OAAOe,SAAS,KAAK,QAAQ,GAAE;IAAA;IAAAnB,YAAA,GAAAI,CAAA;IAAAJ,YAAA,GAAAQ,CAAA;IAC/C,OAAO,KAAK;EACd,CAAC;EAAA;EAAA;IAAAR,YAAA,GAAAI,CAAA;EAAA;;EAED;EACA,MAAMmB,qBAAqB;EAAA;EAAA,CAAAvB,YAAA,GAAAQ,CAAA,QAAG,uBAAuB;EAAC;EAAAR,YAAA,GAAAQ,CAAA;EACtD,OAAOe,qBAAqB,CAACF,IAAI,CAACF,SAAS,CAAC;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASK,WAAWA,CAACC,GAAG,EAAE;EAAA;EAAAzB,YAAA,GAAAM,CAAA;EAAAN,YAAA,GAAAQ,CAAA;EAC/B;EAAI;EAAA,CAAAR,YAAA,GAAAI,CAAA,YAACqB,GAAG;EAAA;EAAA,CAAAzB,YAAA,GAAAI,CAAA,WAAI,OAAOqB,GAAG,KAAK,QAAQ,GAAE;IAAA;IAAAzB,YAAA,GAAAI,CAAA;IAAAJ,YAAA,GAAAQ,CAAA;IACnC,OAAO,KAAK;EACd,CAAC;EAAA;EAAA;IAAAR,YAAA,GAAAI,CAAA;EAAA;EAAAJ,YAAA,GAAAQ,CAAA;EAED,IAAI;IAAA;IAAAR,YAAA,GAAAQ,CAAA;IACF,IAAIkB,GAAG,CAACD,GAAG,CAAC;IAAC;IAAAzB,YAAA,GAAAQ,CAAA;IACb,OAAO,IAAI;EACb,CAAC,CAAC,MAAM;IAAA;IAAAR,YAAA,GAAAQ,CAAA;IACN,OAAO,KAAK;EACd;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASmB,YAAYA,CAACC,IAAI,EAAE;EAAA;EAAA5B,YAAA,GAAAM,CAAA;EACjC,MAAMuB,OAAO;EAAA;EAAA,CAAA7B,YAAA,GAAAQ,CAAA,QAAGsB,QAAQ,CAACF,IAAI,EAAE,EAAE,CAAC;EAAC;EAAA5B,YAAA,GAAAQ,CAAA;EACnC,OAAO,2BAAAR,YAAA,GAAAI,CAAA,YAAC2B,KAAK,CAACF,OAAO,CAAC;EAAA;EAAA,CAAA7B,YAAA,GAAAI,CAAA,WAAIyB,OAAO,IAAI,CAAC;EAAA;EAAA,CAAA7B,YAAA,GAAAI,CAAA,WAAIyB,OAAO,IAAI,KAAK;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,gBAAgBA,CAACC,KAAK,EAAE;EAAA;EAAAjC,YAAA,GAAAM,CAAA;EACtC,MAAM4B,WAAW;EAAA;EAAA,CAAAlC,YAAA,GAAAQ,CAAA,QAAG,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC;EAAC;EAAAR,YAAA,GAAAQ,CAAA;EAClE,OAAO0B,WAAW,CAACC,QAAQ,CAACF,KAAK,CAAC;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,qBAAqBA,CAACC,KAAK,EAAE;EAAA;EAAArC,YAAA,GAAAM,CAAA;EAAAN,YAAA,GAAAQ,CAAA;EAC3C,IAAI,OAAO6B,KAAK,KAAK,QAAQ,EAAE;IAAA;IAAArC,YAAA,GAAAI,CAAA;IAAAJ,YAAA,GAAAQ,CAAA;IAC7B,OAAO,KAAK;EACd,CAAC;EAAA;EAAA;IAAAR,YAAA,GAAAI,CAAA;EAAA;EAED,MAAMkC,eAAe;EAAA;EAAA,CAAAtC,YAAA,GAAAQ,CAAA,QAAG6B,KAAK,CAACE,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;EAAC;EAAAxC,YAAA,GAAAQ,CAAA;EACnD,OAAO,CAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC2B,QAAQ,CAACG,eAAe,CAAC;AAC3E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,kBAAkBA,CAACJ,KAAK,EAAE1B,YAAY;AAAA;AAAA,CAAAX,YAAA,GAAAI,CAAA,WAAG,KAAK,GAAE;EAAA;EAAAJ,YAAA,GAAAM,CAAA;EAAAN,YAAA,GAAAQ,CAAA;EAC9D;EAAI;EAAA,CAAAR,YAAA,GAAAI,CAAA,YAACiC,KAAK;EAAA;EAAA,CAAArC,YAAA,GAAAI,CAAA,WAAI,OAAOiC,KAAK,KAAK,QAAQ,GAAE;IAAA;IAAArC,YAAA,GAAAI,CAAA;IAAAJ,YAAA,GAAAQ,CAAA;IACvC,OAAOG,YAAY;EACrB,CAAC;EAAA;EAAA;IAAAX,YAAA,GAAAI,CAAA;EAAA;EAED,MAAMkC,eAAe;EAAA;EAAA,CAAAtC,YAAA,GAAAQ,CAAA,QAAG6B,KAAK,CAACE,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;EAAC;EAAAxC,YAAA,GAAAQ,CAAA;EACnD,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC2B,QAAQ,CAACG,eAAe,CAAC;AACvD","ignoreList":[]}
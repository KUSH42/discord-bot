{"version":3,"names":["jest","mockVideoDetails","id","snippet","title","description","channelId","channelTitle","publishedAt","thumbnails","high","url","statistics","viewCount","likeCount","liveStreamingDetails","actualStartTime","Date","toISOString","scheduledStartTime","mockLiveStreamDetails","liveBroadcastContent","concurrentViewers","mockPubSubNotification","mockYouTubeAPI","videos","list","fn","mockResolvedValue","data","items","mockGoogleAuth","auth","GoogleAuth","getClient","getAccessToken","mockGoogleAPIs","google","youtube","mockSubscriptionResponse","status","statusText","headers","createMockVideoDetails","overrides","createMockPubSubNotification","videoId","replace","mockHmacSignature","createMockSignature","secret","Buffer","from","toString","substring"],"sources":["youtube.mock.js"],"sourcesContent":["import { jest } from '@jest/globals';\n\n// Mock YouTube Data API responses\nexport const mockVideoDetails = {\n  id: 'dQw4w9WgXcQ',\n  snippet: {\n    title: 'Rick Astley - Never Gonna Give You Up (Official Video)',\n    description: 'The official video for \"Never Gonna Give You Up\" by Rick Astley',\n    channelId: 'UCuAXFkgsw1L7xaCfnd5JJOw',\n    channelTitle: 'Rick Astley',\n    publishedAt: '2009-10-25T06:57:33Z',\n    thumbnails: {\n      high: {\n        url: 'https://i.ytimg.com/vi/dQw4w9WgXcQ/hqdefault.jpg',\n      },\n    },\n  },\n  statistics: {\n    viewCount: '1000000000',\n    likeCount: '10000000',\n  },\n  liveStreamingDetails: {\n    actualStartTime: new Date().toISOString(),\n    scheduledStartTime: new Date().toISOString(),\n  },\n};\n\nexport const mockLiveStreamDetails = {\n  id: 'live123456789',\n  snippet: {\n    title: 'Live Stream Test',\n    description: 'Test live stream',\n    channelId: 'UCuAXFkgsw1L7xaCfnd5JJOw',\n    channelTitle: 'Test Channel',\n    publishedAt: new Date().toISOString(),\n    liveBroadcastContent: 'live',\n    thumbnails: {\n      high: {\n        url: 'https://i.ytimg.com/vi/live123456789/hqdefault_live.jpg',\n      },\n    },\n  },\n  liveStreamingDetails: {\n    actualStartTime: new Date().toISOString(),\n    concurrentViewers: '1000',\n  },\n};\n\n// Mock PubSubHubbub notification payload\nexport const mockPubSubNotification = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<feed xmlns:yt=\"http://www.youtube.com/xml/schemas/2015\" xmlns=\"http://www.w3.org/2005/Atom\">\n  <link rel=\"hub\" href=\"https://pubsubhubbub.appspot.com\"/>\n  <link rel=\"self\" href=\"https://www.youtube.com/xml/feeds/videos.xml?channel_id=UCuAXFkgsw1L7xaCfnd5JJOw\"/>\n  <title>YouTube video feed</title>\n  <updated>2024-01-01T12:00:00+00:00</updated>\n  <entry>\n    <id>yt:video:dQw4w9WgXcQ</id>\n    <yt:videoId>dQw4w9WgXcQ</yt:videoId>\n    <yt:channelId>UCuAXFkgsw1L7xaCfnd5JJOw</yt:channelId>\n    <title>Rick Astley - Never Gonna Give You Up (Official Video)</title>\n    <link rel=\"alternate\" href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"/>\n    <author>\n      <name>Rick Astley</name>\n      <uri>https://www.youtube.com/channel/UCuAXFkgsw1L7xaCfnd5JJOw</uri>\n    </author>\n    <published>2024-01-01T12:00:00+00:00</published>\n    <updated>2024-01-01T12:00:00+00:00</updated>\n  </entry>\n</feed>`;\n\n// Mock googleapis\nexport const mockYouTubeAPI = {\n  videos: {\n    list: jest.fn().mockResolvedValue({\n      data: {\n        items: [mockVideoDetails],\n      },\n    }),\n  },\n};\n\nexport const mockGoogleAuth = {\n  auth: {\n    GoogleAuth: jest.fn(() => ({\n      getClient: jest.fn().mockResolvedValue({}),\n      getAccessToken: jest.fn().mockResolvedValue('mock-token'),\n    })),\n  },\n};\n\nexport const mockGoogleAPIs = {\n  google: {\n    youtube: jest.fn(() => mockYouTubeAPI),\n    auth: mockGoogleAuth.auth,\n  },\n};\n\n// Mock subscription management\nexport const mockSubscriptionResponse = {\n  status: 202,\n  statusText: 'Accepted',\n  headers: {\n    'content-type': 'application/json',\n  },\n};\n\n// Helper functions for creating test data\nexport const createMockVideoDetails = (overrides = {}) => ({\n  ...mockVideoDetails,\n  ...overrides,\n  snippet: {\n    ...mockVideoDetails.snippet,\n    ...(overrides.snippet || {}),\n  },\n});\n\nexport const createMockPubSubNotification = (videoId, channelId = 'UCuAXFkgsw1L7xaCfnd5JJOw') =>\n  mockPubSubNotification.replace(/dQw4w9WgXcQ/g, videoId).replace(/UCuAXFkgsw1L7xaCfnd5JJOw/g, channelId);\n\n// Mock HMAC signature verification\nexport const mockHmacSignature = 'sha1=da39a3ee5e6b4b0d3255bfef95601890afd80709';\n\nexport const createMockSignature = (data, secret = 'test-secret') => {\n  // Simple mock signature for testing\n  return `sha1=${Buffer.from(data + secret)\n    .toString('hex')\n    .substring(0, 40)}`;\n};\n"],"mappings":"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","ignoreList":[]}
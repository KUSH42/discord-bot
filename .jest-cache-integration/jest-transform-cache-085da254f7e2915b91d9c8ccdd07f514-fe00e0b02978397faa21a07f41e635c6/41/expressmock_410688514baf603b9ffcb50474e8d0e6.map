{"version":3,"names":["jest","mockRequest","method","url","headers","body","rawBody","Buffer","from","ip","get","fn","header","toLowerCase","mockResponse","status","mockReturnThis","json","send","end","set","cookie","clearCookie","redirect","locals","mockNext","mockApp","use","post","put","delete","listen","mockImplementation","port","callback","mockServer","close","address","mockReturnValue","family","listening","mockRateLimit","options","req","res","next","rateLimitInfo","limit","max","remaining","reset","Date","now","windowMs","toISOString","mockBodyParser","raw","JSON","parse","e","urlencoded","createMockRequest","overrides","createMockResponse","createMockApp","serverOverrides","mockMiddleware","cors","helmet","compression","mockWebhookSignatures","valid","invalid","malformed","mockHealthResponse","timestamp","uptime","process","memory","memoryUsage","components","discord","youtube","xScraper","database","mockDetailedHealthResponse","details","connected","guilds","channels","latency","subscriptions","lastNotification","apiQuota","used","lastScrape","cookieValid","errorRate","createMockRateLimit","store","Map","key","keyGenerator","windowStart","skip","k","data","entries","resetTime","existing","count","message","error","createCommandRateLimit"],"sources":["express.mock.js"],"sourcesContent":["import { jest } from '@jest/globals';\n\n// Mock Express request object\nexport const mockRequest = {\n  method: 'POST',\n  url: '/webhook/youtube',\n  headers: {\n    'content-type': 'application/atom+xml',\n    'x-hub-signature': 'sha1=mock-signature',\n    'user-agent': 'FeedFetcher-Google',\n  },\n  body: '',\n  rawBody: Buffer.from(''),\n  ip: '127.0.0.1',\n  get: jest.fn((header) => mockRequest.headers[header.toLowerCase()]),\n  header: jest.fn((header) => mockRequest.headers[header.toLowerCase()]),\n};\n\n// Mock Express response object\nexport const mockResponse = {\n  status: jest.fn().mockReturnThis(),\n  json: jest.fn().mockReturnThis(),\n  send: jest.fn().mockReturnThis(),\n  end: jest.fn().mockReturnThis(),\n  set: jest.fn().mockReturnThis(),\n  cookie: jest.fn().mockReturnThis(),\n  clearCookie: jest.fn().mockReturnThis(),\n  redirect: jest.fn().mockReturnThis(),\n  locals: {},\n};\n\n// Mock Express next function\nexport const mockNext = jest.fn();\n\n// Mock Express app\nexport const mockApp = {\n  use: jest.fn(),\n  get: jest.fn(),\n  post: jest.fn(),\n  put: jest.fn(),\n  delete: jest.fn(),\n  listen: jest.fn().mockImplementation((port, callback) => {\n    if (callback) {\n      callback();\n    }\n    return mockServer;\n  }),\n  set: jest.fn(),\n  locals: {},\n};\n\n// Mock Express server\nexport const mockServer = {\n  close: jest.fn().mockImplementation((callback) => {\n    if (callback) {\n      callback();\n    }\n  }),\n  address: jest.fn().mockReturnValue({\n    address: '::',\n    family: 'IPv6',\n    port: 3000,\n  }),\n  listening: true,\n};\n\n// Mock rate limiter\nexport const mockRateLimit = jest.fn().mockImplementation((options) => {\n  return jest.fn((req, res, next) => {\n    // Simulate rate limiting logic\n    const rateLimitInfo = {\n      limit: options.max || 100,\n      remaining: options.max - 1 || 99,\n      reset: Date.now() + (options.windowMs || 900000),\n    };\n\n    res.set({\n      'X-RateLimit-Limit': rateLimitInfo.limit,\n      'X-RateLimit-Remaining': rateLimitInfo.remaining,\n      'X-RateLimit-Reset': new Date(rateLimitInfo.reset).toISOString(),\n    });\n\n    next();\n  });\n});\n\n// Mock body parser middleware\nexport const mockBodyParser = {\n  raw: jest.fn().mockReturnValue((req, res, next) => {\n    req.rawBody = Buffer.from(req.body || '');\n    next();\n  }),\n  json: jest.fn().mockReturnValue((req, res, next) => {\n    try {\n      req.body = typeof req.body === 'string' ? JSON.parse(req.body) : req.body;\n    } catch (e) {\n      req.body = {};\n    }\n    next();\n  }),\n  urlencoded: jest.fn().mockReturnValue((req, res, next) => {\n    next();\n  }),\n};\n\n// Helper functions for creating test data\nexport const createMockRequest = (overrides = {}) => ({\n  ...mockRequest,\n  ...overrides,\n  headers: {\n    ...mockRequest.headers,\n    ...(overrides.headers || {}),\n  },\n  get: jest.fn((header) => {\n    const headers = { ...mockRequest.headers, ...(overrides.headers || {}) };\n    return headers[header.toLowerCase()];\n  }),\n});\n\nexport const createMockResponse = (overrides = {}) => ({\n  ...mockResponse,\n  status: jest.fn().mockReturnThis(),\n  json: jest.fn().mockReturnThis(),\n  send: jest.fn().mockReturnThis(),\n  end: jest.fn().mockReturnThis(),\n  set: jest.fn().mockReturnThis(),\n  ...overrides,\n});\n\nexport const createMockApp = (overrides = {}) => ({\n  ...mockApp,\n  use: jest.fn(),\n  get: jest.fn(),\n  post: jest.fn(),\n  listen: jest.fn().mockImplementation((port, callback) => {\n    if (callback) {\n      callback();\n    }\n    return { ...mockServer, ...(overrides.serverOverrides || {}) };\n  }),\n  ...overrides,\n});\n\n// Mock middleware for testing\nexport const mockMiddleware = {\n  cors: jest.fn().mockReturnValue((req, res, next) => next()),\n  helmet: jest.fn().mockReturnValue((req, res, next) => next()),\n  compression: jest.fn().mockReturnValue((req, res, next) => next()),\n};\n\n// Mock webhook signatures for testing\nexport const mockWebhookSignatures = {\n  valid: 'sha1=da39a3ee5e6b4b0d3255bfef95601890afd80709',\n  invalid: 'sha1=invalid-signature-hash',\n  malformed: 'invalid-format-signature',\n};\n\n// Mock health check responses\nexport const mockHealthResponse = {\n  status: 'healthy',\n  timestamp: new Date().toISOString(),\n  uptime: process.uptime(),\n  memory: process.memoryUsage(),\n  components: {\n    discord: 'connected',\n    youtube: 'active',\n    xScraper: 'running',\n    database: 'n/a',\n  },\n};\n\nexport const mockDetailedHealthResponse = {\n  ...mockHealthResponse,\n  details: {\n    discord: {\n      connected: true,\n      guilds: 1,\n      channels: 2,\n      latency: 50,\n    },\n    youtube: {\n      subscriptions: 1,\n      lastNotification: new Date().toISOString(),\n      apiQuota: {\n        used: 100,\n        limit: 10000,\n      },\n    },\n    xScraper: {\n      lastScrape: new Date().toISOString(),\n      cookieValid: true,\n      errorRate: 0.01,\n    },\n  },\n};\n\n// Helper function to create a mock rate limiter implementation\nexport const createMockRateLimit = (options = {}) => {\n  const store = new Map();\n\n  return (req, res, next) => {\n    const key = options.keyGenerator ? options.keyGenerator(req) : req.ip || 'unknown';\n    const now = Date.now();\n    const windowStart = now - (options.windowMs || 900000);\n\n    // Handle skip function\n    if (options.skip && options.skip(req)) {\n      return next();\n    }\n\n    // Clean expired entries\n    for (const [k, data] of store.entries()) {\n      if (data.resetTime <= now) {\n        store.delete(k);\n      }\n    }\n\n    const existing = store.get(key);\n    if (!existing) {\n      store.set(key, {\n        count: 1,\n        resetTime: now + (options.windowMs || 900000),\n      });\n\n      res.set({\n        'X-RateLimit-Limit': options.max || 100,\n        'X-RateLimit-Remaining': (options.max || 100) - 1,\n        'X-RateLimit-Reset': new Date(now + (options.windowMs || 900000)).toISOString(),\n      });\n\n      return next();\n    }\n\n    if (existing.count >= (options.max || 100)) {\n      return res.status(429).json(options.message || { error: 'Too Many Requests' });\n    }\n\n    existing.count++;\n\n    res.set({\n      'X-RateLimit-Limit': options.max || 100,\n      'X-RateLimit-Remaining': (options.max || 100) - existing.count,\n      'X-RateLimit-Reset': new Date(existing.resetTime).toISOString(),\n    });\n\n    next();\n  };\n};\n\n// Helper function to create command-specific rate limiter\nexport const createCommandRateLimit = (options = {}) => {\n  return createMockRateLimit({\n    ...options,\n    message: { error: 'Command rate limit exceeded. Please wait before trying again.' },\n  });\n};\n"],"mappings":"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","ignoreList":[]}
{"version":3,"names":["Client","GatewayIntentBits","Partials","google","express","exec","winston","Configuration","DependencyContainer","EventBus","StateManager","DiscordClientService","YouTubeApiService","FetchHttpService","PlaywrightBrowserService","CommandProcessor","ContentClassifier","ContentAnnouncer","AuthManager","BotApplication","ScraperApplication","MonitorApplication","DiscordTransport","LoggerUtils","createConsoleLogFormat","createFileLogFormat","setupProductionServices","container","config","setupInfrastructureServices","setupExternalServices","setupCoreServices","setupApplicationServices","setupLogging","validate","registerInstance","registerSingleton","state","botStartTime","Date","postingEnabled","announcementEnabled","getBoolean","vxTwitterConversionEnabled","logLevel","get","client","intents","Guilds","GuildMessages","MessageContent","partials","Message","Channel","Reaction","c","youtube","version","auth","getRequired","logger","resolve","child","service","timeout","headers","app","use","raw","type","json","urlencoded","extended","botApp","discordService","commandProcessor","eventBus","stateManager","scraperApplication","monitorApplication","browserService","contentClassifier","contentAnnouncer","authManager","youtubeService","httpService","logFilePath","transports","Console","level","format","DailyRotateFile","filename","replace","datePattern","maxSize","maxFiles","supportChannelId","push","channelId","flushInterval","maxBufferSize","createLogger","combine","timestamp","errors","stack","setupWebhookEndpoints","all","req","res","requestStart","now","requestId","toString","Math","random","substr","info","method","url","userAgent","contentType","contentLength","remoteAddress","ip","connection","forwardedFor","hasSignature","result","handleWebhook","query","body","processingTime","status","responseMessage","message","send","error","getStatus","isRunning","isDiscordReady","toISOString","uptime","process","scraperApp","monitorApp","bot","scraper","getStats","monitor","system","memory","memoryUsage","createShutdownHandler","signal","Promise","stop","dispose","exit"],"sources":["production-setup.js"],"sourcesContent":["import { Client, GatewayIntentBits, Partials } from 'discord.js';\nimport { google } from 'googleapis';\nimport express from 'express';\nimport { exec } from 'child_process';\nimport * as winston from 'winston';\nimport 'winston-daily-rotate-file';\n\n// Infrastructure\nimport { Configuration } from '../infrastructure/configuration.js';\nimport { DependencyContainer } from '../infrastructure/dependency-container.js';\nimport { EventBus } from '../infrastructure/event-bus.js';\nimport { StateManager } from '../infrastructure/state-manager.js';\n\n// Services\nimport { DiscordClientService } from '../services/implementations/discord-client-service.js';\nimport { YouTubeApiService } from '../services/implementations/youtube-api-service.js';\nimport { FetchHttpService } from '../services/implementations/fetch-http-service.js';\nimport { PlaywrightBrowserService } from '../services/implementations/playwright-browser-service.js';\n\n// Core Logic\nimport { CommandProcessor } from '../core/command-processor.js';\nimport { ContentClassifier } from '../core/content-classifier.js';\nimport { ContentAnnouncer } from '../core/content-announcer.js';\n\n// Applications\nimport { AuthManager } from '../application/auth-manager.js';\nimport { BotApplication } from '../application/bot-application.js';\nimport { ScraperApplication } from '../application/scraper-application.js';\nimport { MonitorApplication } from '../application/monitor-application.js';\n\n// Utils\nimport { DiscordTransport, LoggerUtils } from '../logger-utils.js';\nconst { createConsoleLogFormat, createFileLogFormat } = LoggerUtils;\n\n/**\n * Set up all production services and dependencies\n * @param {DependencyContainer} container - Dependency container\n * @param {Configuration} config - Configuration instance\n * @returns {Promise<void>}\n */\nexport async function setupProductionServices(container, config) {\n  // Register infrastructure services\n  await setupInfrastructureServices(container, config);\n\n  // Register external services\n  await setupExternalServices(container, config);\n\n  // Register core business logic\n  await setupCoreServices(container, config);\n\n  // Register application services\n  await setupApplicationServices(container, config);\n\n  // Set up logging\n  await setupLogging(container, config);\n\n  // Validate container\n  container.validate();\n}\n\n/**\n * Set up infrastructure services\n */\nasync function setupInfrastructureServices(container, config) {\n  // Configuration (already created)\n  container.registerInstance('config', config);\n\n  // Event Bus\n  container.registerSingleton('eventBus', () => new EventBus());\n\n  // State Manager with initial state\n  container.registerSingleton('stateManager', () => {\n    const state = new StateManager({\n      botStartTime: new Date(),\n      postingEnabled: true,\n      announcementEnabled: config.getBoolean('ANNOUNCEMENT_ENABLED', false),\n      vxTwitterConversionEnabled: config.getBoolean('X_VX_TWITTER_CONVERSION', false),\n      logLevel: config.get('LOG_LEVEL', 'info'),\n    });\n    return state;\n  });\n}\n\n/**\n * Set up external services (Discord, YouTube, HTTP)\n */\nasync function setupExternalServices(container, config) {\n  // Discord Client Service\n  container.registerSingleton('discordService', () => {\n    const client = new Client({\n      intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages, GatewayIntentBits.MessageContent],\n      partials: [Partials.Message, Partials.Channel, Partials.Reaction],\n    });\n\n    return new DiscordClientService(client);\n  });\n\n  // YouTube API Service\n  container.registerSingleton('youtubeService', c => {\n    const youtube = google.youtube({\n      version: 'v3',\n      auth: config.getRequired('YOUTUBE_API_KEY'),\n    });\n\n    return new YouTubeApiService({\n      logger: c.resolve('logger').child({ service: 'YouTubeApiService' }),\n      youtube,\n    });\n  });\n\n  // HTTP Service\n  container.registerSingleton('httpService', () => {\n    return new FetchHttpService({\n      timeout: 30000,\n      headers: {\n        'User-Agent': 'Discord-YouTube-Bot/1.0',\n      },\n    });\n  });\n\n  // Express App for webhooks\n  container.registerSingleton('expressApp', () => {\n    const app = express();\n\n    // Middleware for raw body (needed for webhook signature verification)\n    app.use('/youtube-webhook', express.raw({ type: 'application/atom+xml' }));\n    app.use(express.json());\n    app.use(express.urlencoded({ extended: true }));\n\n    return app;\n  });\n\n  // Browser Service\n  container.registerSingleton('browserService', () => {\n    return new PlaywrightBrowserService();\n  });\n}\n\n/**\n * Set up core business logic services\n */\nasync function setupCoreServices(container, config) {\n  // Command Processor\n  container.registerSingleton('commandProcessor', c => {\n    return new CommandProcessor(c.resolve('config'), c.resolve('stateManager'));\n  });\n\n  // Content Classifier\n  container.registerSingleton('contentClassifier', () => {\n    return new ContentClassifier();\n  });\n\n  // Content Announcer\n  container.registerSingleton('contentAnnouncer', c => {\n    return new ContentAnnouncer(c.resolve('discordService'), c.resolve('config'), c.resolve('stateManager'));\n  });\n}\n\n/**\n * Set up application services\n */\nasync function setupApplicationServices(container, config) {\n  // Bot Application\n  container.registerSingleton('botApplication', c => {\n    const botApp = new BotApplication({\n      exec,\n      discordService: c.resolve('discordService'),\n      commandProcessor: c.resolve('commandProcessor'),\n      eventBus: c.resolve('eventBus'),\n      config: c.resolve('config'),\n      stateManager: c.resolve('stateManager'),\n      logger: c.resolve('logger').child({ service: 'BotApplication' }),\n    });\n\n    // Manually set dependencies to avoid circular dependency issues\n    botApp.scraperApplication = c.resolve('scraperApplication');\n    botApp.monitorApplication = c.resolve('monitorApplication');\n\n    return botApp;\n  });\n\n  // Auth Manager\n  container.registerSingleton('authManager', c => {\n    return new AuthManager({\n      browserService: c.resolve('browserService'),\n      config: c.resolve('config'),\n      stateManager: c.resolve('stateManager'),\n      logger: c.resolve('logger').child({ service: 'AuthManager' }),\n    });\n  });\n\n  // Scraper Application (X/Twitter monitoring)\n  container.registerSingleton('scraperApplication', c => {\n    return new ScraperApplication({\n      browserService: c.resolve('browserService'),\n      contentClassifier: c.resolve('contentClassifier'),\n      discordService: c.resolve('discordService'),\n      contentAnnouncer: c.resolve('contentAnnouncer'),\n      config: c.resolve('config'),\n      stateManager: c.resolve('stateManager'),\n      eventBus: c.resolve('eventBus'),\n      logger: c.resolve('logger').child({ service: 'ScraperApplication' }),\n      authManager: c.resolve('authManager'),\n    });\n  });\n\n  // Monitor Application (YouTube monitoring)\n  container.registerSingleton('monitorApplication', c => {\n    return new MonitorApplication({\n      youtubeService: c.resolve('youtubeService'),\n      httpService: c.resolve('httpService'),\n      contentClassifier: c.resolve('contentClassifier'),\n      contentAnnouncer: c.resolve('contentAnnouncer'),\n      config: c.resolve('config'),\n      stateManager: c.resolve('stateManager'),\n      eventBus: c.resolve('eventBus'),\n      logger: c.resolve('logger').child({ service: 'MonitorApplication' }),\n    });\n  });\n}\n\n/**\n * Set up logging infrastructure\n */\nasync function setupLogging(container, config) {\n  container.registerSingleton('logger', c => {\n    const logLevel = config.get('LOG_LEVEL', 'info');\n    const logFilePath = config.get('LOG_FILE_PATH', 'bot.log');\n\n    // Create transports\n    const transports = [\n      // Console transport\n      // Console transport\n      new winston.transports.Console({\n        level: logLevel,\n        format: createConsoleLogFormat(),\n      }),\n\n      // File transport with rotation\n      new winston.transports.DailyRotateFile({\n        level: logLevel,\n        filename: logFilePath.replace('.log', '-%DATE%.log'),\n        datePattern: 'YYYY-MM-DD',\n        maxSize: '20m',\n        maxFiles: '14d',\n        format: createFileLogFormat(),\n      }),\n    ];\n\n    // Add Discord transport if configured\n    const supportChannelId = config.get('DISCORD_BOT_SUPPORT_LOG_CHANNEL');\n    if (supportChannelId) {\n      const discordService = c.resolve('discordService');\n      transports.push(\n        new DiscordTransport({\n          level: logLevel, // Use the same log level as configured\n          client: discordService.client,\n          channelId: supportChannelId,\n          flushInterval: 2000,\n          maxBufferSize: 20,\n        })\n      );\n    }\n\n    return winston.createLogger({\n      level: logLevel,\n      format: winston.format.combine(winston.format.timestamp(), winston.format.errors({ stack: true })),\n      transports,\n    });\n  });\n}\n\n/**\n * Set up webhook endpoints\n * @param {express.Application} app - Express application\n * @param {DependencyContainer} container - Dependency container\n */\nexport function setupWebhookEndpoints(app, container) {\n  const monitorApplication = container.resolve('monitorApplication');\n  const logger = container.resolve('logger');\n\n  // YouTube PubSubHubbub webhook\n  app.all('/youtube-webhook', async (req, res) => {\n    const requestStart = Date.now();\n    const requestId = Date.now().toString(36) + Math.random().toString(36).substr(2, 5);\n\n    try {\n      // Log incoming webhook request details\n      logger.info('[WEBHOOK-ENDPOINT] Incoming request', {\n        requestId,\n        method: req.method,\n        url: req.url,\n        userAgent: req.headers['user-agent'],\n        contentType: req.headers['content-type'],\n        contentLength: req.headers['content-length'],\n        remoteAddress: req.ip || req.connection.remoteAddress,\n        forwardedFor: req.headers['x-forwarded-for'],\n        hasSignature: !!req.headers['x-hub-signature'],\n      });\n\n      const result = await monitorApplication.handleWebhook({\n        method: req.method,\n        headers: req.headers,\n        query: req.query,\n        body: req.body,\n      });\n\n      const processingTime = Date.now() - requestStart;\n\n      logger.info('[WEBHOOK-ENDPOINT] Request processed', {\n        requestId,\n        status: result.status,\n        processingTime,\n        responseMessage: result.message,\n      });\n\n      res.status(result.status);\n      if (result.body) {\n        res.send(result.body);\n      } else {\n        res.send(result.message || 'OK');\n      }\n    } catch (error) {\n      const processingTime = Date.now() - requestStart;\n\n      logger.error('[WEBHOOK-ENDPOINT] Webhook error:', {\n        requestId,\n        error: error.message,\n        stack: error.stack,\n        processingTime,\n        method: req.method,\n        url: req.url,\n      });\n\n      res.status(500).send('Internal Server Error');\n    }\n  });\n\n  // Health check endpoints\n  app.get('/health', (req, res) => {\n    const botApp = container.resolve('botApplication');\n    const status = botApp.getStatus();\n\n    res.json({\n      status: status.isRunning && status.isDiscordReady ? 'healthy' : 'unhealthy',\n      timestamp: new Date().toISOString(),\n      uptime: process.uptime(),\n    });\n  });\n\n  app.get('/health/detailed', (req, res) => {\n    const botApp = container.resolve('botApplication');\n    const scraperApp = container.resolve('scraperApplication');\n    const monitorApp = container.resolve('monitorApplication');\n\n    res.json({\n      bot: botApp.getStatus(),\n      scraper: scraperApp.getStats(),\n      monitor: monitorApp.getStats(),\n      system: {\n        uptime: process.uptime(),\n        memory: process.memoryUsage(),\n        timestamp: new Date().toISOString(),\n      },\n    });\n  });\n\n  app.get('/ready', (req, res) => {\n    const botApp = container.resolve('botApplication');\n    const status = botApp.getStatus();\n\n    if (status.isRunning && status.isDiscordReady) {\n      res.status(200).send('Ready');\n    } else {\n      res.status(503).send('Not Ready');\n    }\n  });\n}\n\n/**\n * Graceful shutdown handler\n * @param {DependencyContainer} container - Dependency container\n * @returns {Function} Shutdown function\n */\nexport function createShutdownHandler(container) {\n  return async signal => {\n    const logger = container.resolve('logger');\n    logger.info(`Received ${signal}, starting graceful shutdown...`);\n\n    try {\n      // Stop applications\n      const botApp = container.resolve('botApplication');\n      const scraperApp = container.resolve('scraperApplication');\n      const monitorApp = container.resolve('monitorApplication');\n\n      await Promise.all([botApp.stop(), scraperApp.stop(), monitorApp.stop()]);\n\n      // Dispose of container resources\n      await container.dispose();\n\n      logger.info('Graceful shutdown completed');\n      process.exit(0);\n    } catch (error) {\n      logger.error('Error during shutdown:', error);\n      process.exit(1);\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]}
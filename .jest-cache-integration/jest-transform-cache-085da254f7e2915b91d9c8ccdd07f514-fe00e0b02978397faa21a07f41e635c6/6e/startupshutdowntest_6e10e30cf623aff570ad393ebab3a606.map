{"version":3,"names":["jest","describe","it","expect","beforeEach","afterEach","DependencyContainer","Configuration","setupProductionServices","createShutdownHandler","main","container","originalEnv","originalProcessOn","originalProcessExit","mockProcessOn","mockProcessExit","processSignalHandlers","process","env","on","exit","Map","fn","signal","handler","set","DISCORD_BOT_TOKEN","DISCORD_SUPPORT_CHANNEL_ID","DISCORD_ANNOUNCE_CHANNEL_ID","DISCORD_YOUTUBE_CHANNEL_ID","DISCORD_X_POSTS_CHANNEL_ID","DISCORD_X_REPLIES_CHANNEL_ID","DISCORD_X_QUOTES_CHANNEL_ID","DISCORD_X_RETWEETS_CHANNEL_ID","YOUTUBE_API_KEY","YOUTUBE_CHANNEL_ID","PSH_CALLBACK_URL","PSH_SECRET","PSH_PORT","LOG_LEVEL","X_USER_HANDLE","TWITTER_USERNAME","TWITTER_PASSWORD","mockExternalDependencies","dispose","error","restoreAllMocks","discordModule","spyOn","DiscordClientService","prototype","mockResolvedValue","youtubeModule","YouTubeApiService","browserModule","PlaywrightBrowserService","httpModule","FetchHttpService","status","data","configuration","botApp","resolve","monitorApp","scraperApp","isRegistered","toBe","logger","toBeDefined","resolves","not","toThrow","expressApp","use","listen","toHaveBeenCalledWith","any","Function","shutdownHandler","stop","toHaveBeenCalledTimes","clearAllMocks","mockRejectedValue","Error","uncaughtExceptionHandler","get","testError","toHaveBeenCalled","unhandledRejectionHandler","testReason","testPromise","Promise","reject","catch","mockServer","close","mockImplementation","callback","registerInstance","eventBus","restartHandlerCalled","originalOn","event","call","emit","disposalTracker","originalDispose","push","toContain","length"],"sources":["startup-shutdown.test.js"],"sourcesContent":["import { jest, describe, it, expect, beforeEach, afterEach } from '@jest/globals';\nimport { DependencyContainer } from '../../src/infrastructure/dependency-container.js';\nimport { Configuration } from '../../src/infrastructure/configuration.js';\nimport { setupProductionServices, createShutdownHandler } from '../../src/setup/production-setup.js';\nimport { main } from '../../index.js';\n\ndescribe('Application Startup and Shutdown Integration Tests', () => {\n  let container;\n  let originalEnv;\n  let originalProcessOn;\n  let originalProcessExit;\n  let mockProcessOn;\n  let mockProcessExit;\n  let processSignalHandlers;\n\n  beforeEach(async () => {\n    // Save original environment and process handlers\n    originalEnv = process.env;\n    originalProcessOn = process.on;\n    originalProcessExit = process.exit;\n    processSignalHandlers = new Map();\n\n    // Mock process.on to capture signal handlers\n    mockProcessOn = jest.fn((signal, handler) => {\n      processSignalHandlers.set(signal, handler);\n      return process; // Return process for chaining\n    });\n    process.on = mockProcessOn;\n\n    // Mock process.exit\n    mockProcessExit = jest.fn();\n    process.exit = mockProcessExit;\n\n    // Set comprehensive environment variables for tests\n    process.env = {\n      ...originalEnv,\n      DISCORD_BOT_TOKEN: 'test-token-startup-shutdown',\n      DISCORD_SUPPORT_CHANNEL_ID: '123456789012345678',\n      DISCORD_ANNOUNCE_CHANNEL_ID: '123456789012345679',\n      DISCORD_YOUTUBE_CHANNEL_ID: '123456789012345680',\n      DISCORD_X_POSTS_CHANNEL_ID: '123456789012345681',\n      DISCORD_X_REPLIES_CHANNEL_ID: '123456789012345682',\n      DISCORD_X_QUOTES_CHANNEL_ID: '123456789012345683',\n      DISCORD_X_RETWEETS_CHANNEL_ID: '123456789012345684',\n      YOUTUBE_API_KEY: 'test-youtube-key',\n      YOUTUBE_CHANNEL_ID: 'UCrAOyUwjSM5zzPz_FqsUhuQ',\n      PSH_CALLBACK_URL: 'https://example.com/webhook',\n      PSH_SECRET: 'test-psh-secret',\n      PSH_PORT: '3001', // Use different port to avoid conflicts\n      LOG_LEVEL: 'error', // Reduce log noise during tests\n      X_USER_HANDLE: 'testuser', // Enable X scraper for testing\n      TWITTER_USERNAME: 'testuser',\n      TWITTER_PASSWORD: 'testpass',\n    };\n\n    // Mock all external dependencies to avoid real network calls\n    await mockExternalDependencies();\n  });\n\n  afterEach(async () => {\n    // Clean up container\n    if (container) {\n      try {\n        await container.dispose();\n      } catch (error) {\n        // Ignore cleanup errors in tests\n      }\n      container = null;\n    }\n\n    // Restore original environment and process handlers\n    process.env = originalEnv;\n    process.on = originalProcessOn;\n    process.exit = originalProcessExit;\n    jest.restoreAllMocks();\n  });\n\n  async function mockExternalDependencies() {\n    // Mock Discord Client at the service level\n    const discordModule = await import('../../src/services/implementations/discord-client-service.js');\n    jest.spyOn(discordModule.DiscordClientService.prototype, 'login').mockResolvedValue();\n    jest.spyOn(discordModule.DiscordClientService.prototype, 'destroy').mockResolvedValue();\n    \n    // Mock YouTube API service\n    const youtubeModule = await import('../../src/services/implementations/youtube-api-service.js');\n    jest.spyOn(youtubeModule.YouTubeApiService.prototype, 'getVideoDetails').mockResolvedValue({});\n    jest.spyOn(youtubeModule.YouTubeApiService.prototype, 'getChannelDetails').mockResolvedValue({});\n    jest.spyOn(youtubeModule.YouTubeApiService.prototype, 'validateApiKey').mockResolvedValue(true);\n    \n    // Mock Browser service\n    const browserModule = await import('../../src/services/implementations/playwright-browser-service.js');\n    jest.spyOn(browserModule.PlaywrightBrowserService.prototype, 'launch').mockResolvedValue();\n    jest.spyOn(browserModule.PlaywrightBrowserService.prototype, 'close').mockResolvedValue();\n    jest.spyOn(browserModule.PlaywrightBrowserService.prototype, 'goto').mockResolvedValue();\n    jest.spyOn(browserModule.PlaywrightBrowserService.prototype, 'newPage').mockResolvedValue();\n    \n    // Mock HTTP service\n    const httpModule = await import('../../src/services/implementations/fetch-http-service.js');\n    jest.spyOn(httpModule.FetchHttpService.prototype, 'get').mockResolvedValue({ status: 200, data: {} });\n    jest.spyOn(httpModule.FetchHttpService.prototype, 'post').mockResolvedValue({ status: 200, data: {} });\n  }\n\n  describe('Startup Integration Tests', () => {\n    it('should start all services and applications successfully', async () => {\n      // Create configuration and container\n      const configuration = new Configuration();\n      container = new DependencyContainer();\n      \n      // Setup all services\n      await setupProductionServices(container, configuration);\n      \n      // Mock the application start methods to avoid actual external calls\n      const botApp = container.resolve('botApplication');\n      const monitorApp = container.resolve('monitorApplication');\n      const scraperApp = container.resolve('scraperApplication');\n      \n      jest.spyOn(botApp, 'start').mockResolvedValue();\n      jest.spyOn(monitorApp, 'start').mockResolvedValue();\n      jest.spyOn(scraperApp, 'start').mockResolvedValue();\n      jest.spyOn(botApp, 'stop').mockResolvedValue();\n      jest.spyOn(monitorApp, 'stop').mockResolvedValue();\n      jest.spyOn(scraperApp, 'stop').mockResolvedValue();\n      \n      // Verify critical services are registered\n      expect(container.isRegistered('logger')).toBe(true);\n      expect(container.isRegistered('discordService')).toBe(true);\n      expect(container.isRegistered('botApplication')).toBe(true);\n      expect(container.isRegistered('monitorApplication')).toBe(true);\n      expect(container.isRegistered('scraperApplication')).toBe(true);\n      expect(container.isRegistered('expressApp')).toBe(true);\n\n      // Verify services can be resolved\n      const logger = container.resolve('logger');\n\n      expect(logger).toBeDefined();\n      expect(botApp).toBeDefined();\n      expect(monitorApp).toBeDefined();\n      expect(scraperApp).toBeDefined();\n    });\n\n    it('should handle startup with minimal configuration', async () => {\n      // Remove optional X configuration\n      delete process.env.X_USER_HANDLE;\n      delete process.env.TWITTER_USERNAME;\n      delete process.env.TWITTER_PASSWORD;\n      \n      const configuration = new Configuration();\n      container = new DependencyContainer();\n      \n      // Should still work without X scraper\n      await expect(setupProductionServices(container, configuration)).resolves.not.toThrow();\n      \n      // Basic services should still be available\n      expect(container.isRegistered('botApplication')).toBe(true);\n      expect(container.isRegistered('monitorApplication')).toBe(true);\n    });\n\n    it('should handle Express server startup and port binding', async () => {\n      const configuration = new Configuration();\n      container = new DependencyContainer();\n      \n      await setupProductionServices(container, configuration);\n      \n      const expressApp = container.resolve('expressApp');\n      expect(expressApp).toBeDefined();\n      expect(typeof expressApp.use).toBe('function'); // Middleware function should exist\n      expect(typeof expressApp.listen).toBe('function'); // Listen function should exist\n    });\n\n    it('should register process signal handlers during startup', async () => {\n      // This test focuses on signal handler registration without actual startup\n      // We'll verify the handlers are registered when setupGracefulShutdown is called\n      const configuration = new Configuration();\n      container = new DependencyContainer();\n      await setupProductionServices(container, configuration);\n      \n      // Mock the application methods\n      const botApp = container.resolve('botApplication');\n      const monitorApp = container.resolve('monitorApplication');\n      const scraperApp = container.resolve('scraperApplication');\n      \n      jest.spyOn(botApp, 'start').mockResolvedValue();\n      jest.spyOn(monitorApp, 'start').mockResolvedValue();\n      jest.spyOn(scraperApp, 'start').mockResolvedValue();\n      jest.spyOn(botApp, 'stop').mockResolvedValue();\n      jest.spyOn(monitorApp, 'stop').mockResolvedValue();\n      jest.spyOn(scraperApp, 'stop').mockResolvedValue();\n      \n      // Now test the main function\n      await expect(main()).resolves.not.toThrow();\n      \n      // Verify signal handlers were registered\n      expect(mockProcessOn).toHaveBeenCalledWith('SIGTERM', expect.any(Function));\n      expect(mockProcessOn).toHaveBeenCalledWith('SIGINT', expect.any(Function));\n      expect(mockProcessOn).toHaveBeenCalledWith('SIGUSR1', expect.any(Function));\n      expect(mockProcessOn).toHaveBeenCalledWith('SIGUSR2', expect.any(Function));\n      expect(mockProcessOn).toHaveBeenCalledWith('uncaughtException', expect.any(Function));\n      expect(mockProcessOn).toHaveBeenCalledWith('unhandledRejection', expect.any(Function));\n    });\n  });\n\n  describe('Shutdown Integration Tests', () => {\n    beforeEach(async () => {\n      // Set up a complete application for shutdown testing\n      const configuration = new Configuration();\n      container = new DependencyContainer();\n      await setupProductionServices(container, configuration);\n      \n      // Mock the application methods\n      const botApp = container.resolve('botApplication');\n      const monitorApp = container.resolve('monitorApplication');\n      const scraperApp = container.resolve('scraperApplication');\n      \n      jest.spyOn(botApp, 'start').mockResolvedValue();\n      jest.spyOn(monitorApp, 'start').mockResolvedValue();\n      jest.spyOn(scraperApp, 'start').mockResolvedValue();\n      jest.spyOn(botApp, 'stop').mockResolvedValue();\n      jest.spyOn(monitorApp, 'stop').mockResolvedValue();\n      jest.spyOn(scraperApp, 'stop').mockResolvedValue();\n    });\n\n    it('should create shutdown handler with proper dependencies', () => {\n      const shutdownHandler = createShutdownHandler(container);\n      expect(shutdownHandler).toBeDefined();\n      expect(typeof shutdownHandler).toBe('function');\n    });\n\n    it('should handle SIGTERM graceful shutdown', async () => {\n      const shutdownHandler = createShutdownHandler(container);\n      \n      // Mock application stop methods\n      const botApp = container.resolve('botApplication');\n      const monitorApp = container.resolve('monitorApplication');\n      const scraperApp = container.resolve('scraperApplication');\n      \n      jest.spyOn(botApp, 'stop').mockResolvedValue();\n      jest.spyOn(monitorApp, 'stop').mockResolvedValue();\n      jest.spyOn(scraperApp, 'stop').mockResolvedValue();\n      \n      // Mock container dispose\n      jest.spyOn(container, 'dispose').mockResolvedValue();\n      \n      await shutdownHandler('SIGTERM');\n      \n      expect(botApp.stop).toHaveBeenCalledTimes(1);\n      expect(monitorApp.stop).toHaveBeenCalledTimes(1);\n      expect(scraperApp.stop).toHaveBeenCalledTimes(1);\n      expect(container.dispose).toHaveBeenCalledTimes(1);\n      expect(mockProcessExit).toHaveBeenCalledWith(0);\n    });\n\n    it('should handle SIGINT graceful shutdown', async () => {\n      const shutdownHandler = createShutdownHandler(container);\n      \n      // Mock application stop methods\n      const botApp = container.resolve('botApplication');\n      const monitorApp = container.resolve('monitorApplication');\n      const scraperApp = container.resolve('scraperApplication');\n      \n      jest.spyOn(botApp, 'stop').mockResolvedValue();\n      jest.spyOn(monitorApp, 'stop').mockResolvedValue();\n      jest.spyOn(scraperApp, 'stop').mockResolvedValue();\n      jest.spyOn(container, 'dispose').mockResolvedValue();\n      \n      await shutdownHandler('SIGINT');\n      \n      expect(botApp.stop).toHaveBeenCalledTimes(1);\n      expect(monitorApp.stop).toHaveBeenCalledTimes(1);\n      expect(scraperApp.stop).toHaveBeenCalledTimes(1);\n      expect(container.dispose).toHaveBeenCalledTimes(1);\n      expect(mockProcessExit).toHaveBeenCalledWith(0);\n    });\n\n    it('should handle shutdown with failing applications', async () => {\n      const shutdownHandler = createShutdownHandler(container);\n      \n      // Mock one application to fail during stop\n      const botApp = container.resolve('botApplication');\n      const monitorApp = container.resolve('monitorApplication');\n      const scraperApp = container.resolve('scraperApplication');\n      \n      // Reset mocks first\n      jest.clearAllMocks();\n      \n      jest.spyOn(botApp, 'stop').mockRejectedValue(new Error('Bot stop failed'));\n      jest.spyOn(monitorApp, 'stop').mockResolvedValue();\n      jest.spyOn(scraperApp, 'stop').mockResolvedValue();\n      jest.spyOn(container, 'dispose').mockResolvedValue();\n      \n      await shutdownHandler('SIGTERM');\n      \n      // Should still try to stop all applications and dispose container\n      expect(botApp.stop).toHaveBeenCalledTimes(1);\n      expect(monitorApp.stop).toHaveBeenCalledTimes(1);\n      expect(scraperApp.stop).toHaveBeenCalledTimes(1);\n      expect(container.dispose).toHaveBeenCalledTimes(1);\n      expect(mockProcessExit).toHaveBeenCalledWith(1); // Exit with error code\n    });\n\n    it('should handle shutdown with container disposal failure', async () => {\n      const shutdownHandler = createShutdownHandler(container);\n      \n      // Mock applications to succeed but container disposal to fail\n      const botApp = container.resolve('botApplication');\n      const monitorApp = container.resolve('monitorApplication');\n      const scraperApp = container.resolve('scraperApplication');\n      \n      jest.spyOn(botApp, 'stop').mockResolvedValue();\n      jest.spyOn(monitorApp, 'stop').mockResolvedValue();\n      jest.spyOn(scraperApp, 'stop').mockResolvedValue();\n      jest.spyOn(container, 'dispose').mockRejectedValue(new Error('Container disposal failed'));\n      \n      await shutdownHandler('SIGTERM');\n      \n      expect(botApp.stop).toHaveBeenCalledTimes(1);\n      expect(monitorApp.stop).toHaveBeenCalledTimes(1);\n      expect(scraperApp.stop).toHaveBeenCalledTimes(1);\n      expect(container.dispose).toHaveBeenCalledTimes(1);\n      expect(mockProcessExit).toHaveBeenCalledWith(1); // Exit with error code\n    });\n\n    it('should handle uncaught exception shutdown', async () => {\n      // Start full application to get signal handlers\n      await main();\n      \n      // Get the uncaught exception handler\n      const uncaughtExceptionHandler = processSignalHandlers.get('uncaughtException');\n      expect(uncaughtExceptionHandler).toBeDefined();\n      \n      // Applications are already mocked in beforeEach\n      \n      // Trigger uncaught exception handler\n      const testError = new Error('Test uncaught exception');\n      await uncaughtExceptionHandler(testError);\n      \n      // Verify shutdown was triggered\n      expect(mockProcessExit).toHaveBeenCalled();\n    });\n\n    it('should handle unhandled promise rejection shutdown', async () => {\n      // Start full application to get signal handlers\n      await main();\n      \n      // Get the unhandled rejection handler\n      const unhandledRejectionHandler = processSignalHandlers.get('unhandledRejection');\n      expect(unhandledRejectionHandler).toBeDefined();\n      \n      // Applications are already mocked in beforeEach\n      \n      // Trigger unhandled rejection handler - catch the promise to prevent actual unhandled rejection\n      const testReason = 'Test unhandled rejection';\n      const testPromise = Promise.reject(testReason).catch(() => {}); // Catch to prevent unhandled rejection\n      await unhandledRejectionHandler(testReason, testPromise);\n      \n      // Verify shutdown was triggered\n      expect(mockProcessExit).toHaveBeenCalled();\n    });\n  });\n\n  describe('HTTP Server Shutdown Tests', () => {\n    it('should properly close HTTP server during shutdown', async () => {\n      const configuration = new Configuration();\n      container = new DependencyContainer();\n      await setupProductionServices(container, configuration);\n      \n      // Start a mock HTTP server and register it\n      const mockServer = {\n        close: jest.fn().mockImplementation((callback) => {\n          if (callback) callback();\n        }),\n        on: jest.fn()\n      };\n      container.registerInstance('httpServer', mockServer);\n      \n      const shutdownHandler = createShutdownHandler(container);\n      \n      // Mock applications\n      const botApp = container.resolve('botApplication');\n      const monitorApp = container.resolve('monitorApplication');\n      const scraperApp = container.resolve('scraperApplication');\n      \n      jest.spyOn(botApp, 'stop').mockResolvedValue();\n      jest.spyOn(monitorApp, 'stop').mockResolvedValue();\n      jest.spyOn(scraperApp, 'stop').mockResolvedValue();\n      jest.spyOn(container, 'dispose').mockResolvedValue();\n      \n      await shutdownHandler('SIGTERM');\n      \n      // HTTP server should be handled by container disposal\n      expect(container.dispose).toHaveBeenCalledTimes(1);\n      expect(mockProcessExit).toHaveBeenCalledWith(0);\n    });\n  });\n\n  describe('Restart Functionality Tests', () => {\n    it('should handle restart request event', async () => {\n      // Setup container first  \n      const configuration = new Configuration();\n      container = new DependencyContainer();\n      await setupProductionServices(container, configuration);\n      \n      // Mock the application methods\n      const botApp = container.resolve('botApplication');\n      const monitorApp = container.resolve('monitorApplication');\n      const scraperApp = container.resolve('scraperApplication');\n      \n      jest.spyOn(botApp, 'start').mockResolvedValue();\n      jest.spyOn(monitorApp, 'start').mockResolvedValue();\n      jest.spyOn(scraperApp, 'start').mockResolvedValue();\n      jest.spyOn(botApp, 'stop').mockResolvedValue();\n      jest.spyOn(monitorApp, 'stop').mockResolvedValue();\n      jest.spyOn(scraperApp, 'stop').mockResolvedValue();\n      \n      // Start full application\n      await main();\n      \n      // Get event bus to trigger restart\n      const eventBus = container.resolve('eventBus');\n      \n      // Listen for the restart event to verify it's registered\n      let restartHandlerCalled = false;\n      const originalOn = eventBus.on;\n      jest.spyOn(eventBus, 'on').mockImplementation((event, handler) => {\n        if (event === 'bot.request_restart') {\n          restartHandlerCalled = true;\n          // Don't actually execute restart in test\n          return;\n        }\n        return originalOn.call(eventBus, event, handler);\n      });\n      \n      // Emit restart event\n      eventBus.emit('bot.request_restart');\n      \n      // Verify restart handler was registered\n      expect(restartHandlerCalled).toBe(true);\n    });\n  });\n\n  describe('Resource Cleanup Tests', () => {\n    it('should properly dispose all resources during shutdown', async () => {\n      const configuration = new Configuration();\n      container = new DependencyContainer();\n      await setupProductionServices(container, configuration);\n      \n      // Track disposal calls\n      const disposalTracker = [];\n      \n      // Mock services with disposal tracking\n      const originalDispose = container.dispose;\n      jest.spyOn(container, 'dispose').mockImplementation(async () => {\n        disposalTracker.push('container');\n        return originalDispose.call(container);\n      });\n      \n      const shutdownHandler = createShutdownHandler(container);\n      \n      // Mock applications with disposal tracking\n      const botApp = container.resolve('botApplication');\n      const monitorApp = container.resolve('monitorApplication');\n      const scraperApp = container.resolve('scraperApplication');\n      \n      jest.spyOn(botApp, 'stop').mockImplementation(async () => {\n        disposalTracker.push('botApp');\n      });\n      jest.spyOn(monitorApp, 'stop').mockImplementation(async () => {\n        disposalTracker.push('monitorApp');\n      });\n      jest.spyOn(scraperApp, 'stop').mockImplementation(async () => {\n        disposalTracker.push('scraperApp');\n      });\n      \n      await shutdownHandler('SIGTERM');\n      \n      // Verify all resources were disposed in correct order\n      expect(disposalTracker).toContain('botApp');\n      expect(disposalTracker).toContain('monitorApp');\n      expect(disposalTracker).toContain('scraperApp');\n      expect(disposalTracker).toContain('container');\n      \n      // Container disposal should be last\n      expect(disposalTracker[disposalTracker.length - 1]).toBe('container');\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}
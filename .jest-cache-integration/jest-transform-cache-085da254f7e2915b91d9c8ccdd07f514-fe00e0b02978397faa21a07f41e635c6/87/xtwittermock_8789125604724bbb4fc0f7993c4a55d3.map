{"version":3,"names":["jest","mockTweetData","id","text","user","username","displayName","verified","createdAt","Date","toISOString","metrics","retweets","likes","replies","media","urls","hashtags","mentions","mockQuoteTweet","quotedTweet","mockReplyTweet","replyTo","mockRetweetData","type","originalTweet","mockPage","goto","fn","mockResolvedValue","waitForSelector","waitForTimeout","click","fill","press","screenshot","Buffer","from","content","evaluate","mockImplementation","locator","mockReturnValue","textContent","getAttribute","isVisible","$","$$","cookies","setCookie","close","mockBrowser","newPage","contexts","newContext","mockPlaywright","chromium","launch","launchPersistentContext","firefox","webkit","mockXCookies","name","value","domain","path","expires","now","httpOnly","secure","mockScraperResults","posts","quotes","totalFound","newContentCount","duplicatesFiltered","timestamp","createMockTweet","overrides","createMockPage","createMockBrowser","pageOverrides","mockSearchUrls","mockLoginSequence","action","url","selector"],"sources":["x-twitter.mock.js"],"sourcesContent":["import { jest } from '@jest/globals';\n\n// Mock X/Twitter post data\nexport const mockTweetData = {\n  id: '1234567890123456789',\n  text: 'This is a test tweet with some content',\n  user: {\n    id: '987654321',\n    username: 'testuser',\n    displayName: 'Test User',\n    verified: false,\n  },\n  createdAt: new Date().toISOString(),\n  metrics: {\n    retweets: 10,\n    likes: 50,\n    replies: 5,\n  },\n  media: [],\n  urls: ['https://example.com'],\n  hashtags: ['test', 'example'],\n  mentions: [],\n};\n\nexport const mockQuoteTweet = {\n  ...mockTweetData,\n  id: '1111222233334444555',\n  text: 'Quote tweet with original content',\n  quotedTweet: {\n    id: '9999888877776666555',\n    text: 'Original quoted tweet',\n    user: {\n      username: 'originaluser',\n      displayName: 'Original User',\n    },\n  },\n};\n\nexport const mockReplyTweet = {\n  ...mockTweetData,\n  id: '5555444433332222111',\n  text: '@testuser This is a reply',\n  replyTo: {\n    id: '1234567890123456789',\n    user: {\n      username: 'testuser',\n    },\n  },\n};\n\nexport const mockRetweetData = {\n  id: '7777666655554444333',\n  type: 'retweet',\n  user: {\n    username: 'retweetuser',\n    displayName: 'Retweet User',\n  },\n  originalTweet: mockTweetData,\n  createdAt: new Date().toISOString(),\n};\n\n// Mock Playwright/Puppeteer browser and page\nexport const mockPage = {\n  goto: jest.fn().mockResolvedValue(),\n  waitForSelector: jest.fn().mockResolvedValue(),\n  waitForTimeout: jest.fn().mockResolvedValue(),\n  click: jest.fn().mockResolvedValue(),\n  type: jest.fn().mockResolvedValue(),\n  fill: jest.fn().mockResolvedValue(),\n  press: jest.fn().mockResolvedValue(),\n  screenshot: jest.fn().mockResolvedValue(Buffer.from('mock-screenshot')),\n  content: jest.fn().mockResolvedValue('<html>Mock page content</html>'),\n  evaluate: jest.fn().mockImplementation((fn) => fn()),\n  locator: jest.fn().mockReturnValue({\n    textContent: jest.fn().mockResolvedValue('Mock text'),\n    getAttribute: jest.fn().mockResolvedValue('mock-attribute'),\n    click: jest.fn().mockResolvedValue(),\n    isVisible: jest.fn().mockResolvedValue(true),\n  }),\n  $: jest.fn().mockResolvedValue({\n    textContent: jest.fn().mockResolvedValue('Mock text'),\n    getAttribute: jest.fn().mockResolvedValue('mock-attribute'),\n  }),\n  $$: jest.fn().mockResolvedValue([\n    {\n      textContent: jest.fn().mockResolvedValue('Mock text 1'),\n      getAttribute: jest.fn().mockResolvedValue('mock-attribute-1'),\n    },\n    {\n      textContent: jest.fn().mockResolvedValue('Mock text 2'),\n      getAttribute: jest.fn().mockResolvedValue('mock-attribute-2'),\n    },\n  ]),\n  cookies: jest.fn().mockResolvedValue([]),\n  setCookie: jest.fn().mockResolvedValue(),\n  close: jest.fn().mockResolvedValue(),\n};\n\nexport const mockBrowser = {\n  newPage: jest.fn().mockResolvedValue(mockPage),\n  close: jest.fn().mockResolvedValue(),\n  contexts: jest.fn().mockReturnValue([]),\n  newContext: jest.fn().mockResolvedValue({\n    newPage: jest.fn().mockResolvedValue(mockPage),\n    close: jest.fn().mockResolvedValue(),\n  }),\n};\n\nexport const mockPlaywright = {\n  chromium: {\n    launch: jest.fn().mockResolvedValue(mockBrowser),\n    launchPersistentContext: jest.fn().mockResolvedValue({\n      newPage: jest.fn().mockResolvedValue(mockPage),\n      close: jest.fn().mockResolvedValue(),\n    }),\n  },\n  firefox: {\n    launch: jest.fn().mockResolvedValue(mockBrowser),\n  },\n  webkit: {\n    launch: jest.fn().mockResolvedValue(mockBrowser),\n  },\n};\n\n// Mock cookie data for X/Twitter authentication\nexport const mockXCookies = [\n  {\n    name: 'auth_token',\n    value: 'mock-auth-token-value',\n    domain: '.x.com',\n    path: '/',\n    expires: Date.now() + 86400000, // 24 hours\n    httpOnly: true,\n    secure: true,\n  },\n  {\n    name: 'ct0',\n    value: 'mock-csrf-token',\n    domain: '.x.com',\n    path: '/',\n    expires: Date.now() + 86400000,\n    httpOnly: false,\n    secure: true,\n  },\n];\n\n// Mock scraper results\nexport const mockScraperResults = {\n  posts: [mockTweetData],\n  replies: [mockReplyTweet],\n  quotes: [mockQuoteTweet],\n  retweets: [mockRetweetData],\n  totalFound: 4,\n  newContentCount: 2,\n  duplicatesFiltered: 1,\n  timestamp: new Date().toISOString(),\n};\n\n// Helper functions for creating test data\nexport const createMockTweet = (overrides = {}) => ({\n  ...mockTweetData,\n  ...overrides,\n  user: {\n    ...mockTweetData.user,\n    ...(overrides.user || {}),\n  },\n});\n\nexport const createMockPage = (overrides = {}) => ({\n  ...mockPage,\n  ...overrides,\n});\n\nexport const createMockBrowser = (overrides = {}) => ({\n  ...mockBrowser,\n  newPage: jest.fn().mockResolvedValue({\n    ...mockPage,\n    ...(overrides.pageOverrides || {}),\n  }),\n  ...overrides,\n});\n\n// Mock X/Twitter search URL patterns\nexport const mockSearchUrls = {\n  posts: 'https://x.com/search?q=(from%3Atestuser)+exclude%3Areplies+exclude%3Aretweets&src=typed_query&f=live',\n  replies: 'https://x.com/search?q=(from%3Atestuser)+filter%3Areplies&src=typed_query&f=live',\n  quotes: 'https://x.com/search?q=quoted%3Atestuser&src=typed_query&f=live',\n  retweets: 'https://x.com/search?q=(from%3Atestuser)+filter%3Aretweets&src=typed_query&f=live',\n};\n\n// Mock login flow\nexport const mockLoginSequence = [\n  { action: 'goto', url: 'https://x.com/login' },\n  { action: 'fill', selector: 'input[name=\"text\"]', value: 'mock-username' },\n  { action: 'click', selector: '[role=\"button\"]' },\n  { action: 'fill', selector: 'input[name=\"password\"]', value: 'mock-password' },\n  { action: 'click', selector: '[data-testid=\"LoginForm_Login_Button\"]' },\n];\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,eAAe;;AAEpC;AACA,OAAO,MAAMC,aAAa,GAAG;EAC3BC,EAAE,EAAE,qBAAqB;EACzBC,IAAI,EAAE,wCAAwC;EAC9CC,IAAI,EAAE;IACJF,EAAE,EAAE,WAAW;IACfG,QAAQ,EAAE,UAAU;IACpBC,WAAW,EAAE,WAAW;IACxBC,QAAQ,EAAE;EACZ,CAAC;EACDC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACnCC,OAAO,EAAE;IACPC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC;EACDC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,CAAC,qBAAqB,CAAC;EAC7BC,QAAQ,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;EAC7BC,QAAQ,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG;EAC5B,GAAGlB,aAAa;EAChBC,EAAE,EAAE,qBAAqB;EACzBC,IAAI,EAAE,mCAAmC;EACzCiB,WAAW,EAAE;IACXlB,EAAE,EAAE,qBAAqB;IACzBC,IAAI,EAAE,uBAAuB;IAC7BC,IAAI,EAAE;MACJC,QAAQ,EAAE,cAAc;MACxBC,WAAW,EAAE;IACf;EACF;AACF,CAAC;AAED,OAAO,MAAMe,cAAc,GAAG;EAC5B,GAAGpB,aAAa;EAChBC,EAAE,EAAE,qBAAqB;EACzBC,IAAI,EAAE,2BAA2B;EACjCmB,OAAO,EAAE;IACPpB,EAAE,EAAE,qBAAqB;IACzBE,IAAI,EAAE;MACJC,QAAQ,EAAE;IACZ;EACF;AACF,CAAC;AAED,OAAO,MAAMkB,eAAe,GAAG;EAC7BrB,EAAE,EAAE,qBAAqB;EACzBsB,IAAI,EAAE,SAAS;EACfpB,IAAI,EAAE;IACJC,QAAQ,EAAE,aAAa;IACvBC,WAAW,EAAE;EACf,CAAC;EACDmB,aAAa,EAAExB,aAAa;EAC5BO,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;AACpC,CAAC;;AAED;AACA,OAAO,MAAMgB,QAAQ,GAAG;EACtBC,IAAI,EAAE3B,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;EACnCC,eAAe,EAAE9B,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;EAC9CE,cAAc,EAAE/B,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;EAC7CG,KAAK,EAAEhC,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;EACpCL,IAAI,EAAExB,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;EACnCI,IAAI,EAAEjC,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;EACnCK,KAAK,EAAElC,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;EACpCM,UAAU,EAAEnC,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAACO,MAAM,CAACC,IAAI,CAAC,iBAAiB,CAAC,CAAC;EACvEC,OAAO,EAAEtC,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,gCAAgC,CAAC;EACtEU,QAAQ,EAAEvC,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACY,kBAAkB,CAAEZ,EAAE,IAAKA,EAAE,CAAC,CAAC,CAAC;EACpDa,OAAO,EAAEzC,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACc,eAAe,CAAC;IACjCC,WAAW,EAAE3C,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,WAAW,CAAC;IACrDe,YAAY,EAAE5C,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,gBAAgB,CAAC;IAC3DG,KAAK,EAAEhC,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;IACpCgB,SAAS,EAAE7C,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,IAAI;EAC7C,CAAC,CAAC;EACFiB,CAAC,EAAE9C,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC;IAC7Bc,WAAW,EAAE3C,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,WAAW,CAAC;IACrDe,YAAY,EAAE5C,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,gBAAgB;EAC5D,CAAC,CAAC;EACFkB,EAAE,EAAE/C,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAC9B;IACEc,WAAW,EAAE3C,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,aAAa,CAAC;IACvDe,YAAY,EAAE5C,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,kBAAkB;EAC9D,CAAC,EACD;IACEc,WAAW,EAAE3C,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,aAAa,CAAC;IACvDe,YAAY,EAAE5C,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,kBAAkB;EAC9D,CAAC,CACF,CAAC;EACFmB,OAAO,EAAEhD,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,EAAE,CAAC;EACxCoB,SAAS,EAAEjD,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;EACxCqB,KAAK,EAAElD,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC;AACrC,CAAC;AAED,OAAO,MAAMsB,WAAW,GAAG;EACzBC,OAAO,EAAEpD,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAACH,QAAQ,CAAC;EAC9CwB,KAAK,EAAElD,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;EACpCwB,QAAQ,EAAErD,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACc,eAAe,CAAC,EAAE,CAAC;EACvCY,UAAU,EAAEtD,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC;IACtCuB,OAAO,EAAEpD,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAACH,QAAQ,CAAC;IAC9CwB,KAAK,EAAElD,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC;EACrC,CAAC;AACH,CAAC;AAED,OAAO,MAAM0B,cAAc,GAAG;EAC5BC,QAAQ,EAAE;IACRC,MAAM,EAAEzD,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAACsB,WAAW,CAAC;IAChDO,uBAAuB,EAAE1D,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC;MACnDuB,OAAO,EAAEpD,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAACH,QAAQ,CAAC;MAC9CwB,KAAK,EAAElD,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC;IACrC,CAAC;EACH,CAAC;EACD8B,OAAO,EAAE;IACPF,MAAM,EAAEzD,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAACsB,WAAW;EACjD,CAAC;EACDS,MAAM,EAAE;IACNH,MAAM,EAAEzD,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAACsB,WAAW;EACjD;AACF,CAAC;;AAED;AACA,OAAO,MAAMU,YAAY,GAAG,CAC1B;EACEC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,uBAAuB;EAC9BC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,GAAG;EACTC,OAAO,EAAEzD,IAAI,CAAC0D,GAAG,CAAC,CAAC,GAAG,QAAQ;EAAE;EAChCC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE;AACV,CAAC,EACD;EACEP,IAAI,EAAE,KAAK;EACXC,KAAK,EAAE,iBAAiB;EACxBC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,GAAG;EACTC,OAAO,EAAEzD,IAAI,CAAC0D,GAAG,CAAC,CAAC,GAAG,QAAQ;EAC9BC,QAAQ,EAAE,KAAK;EACfC,MAAM,EAAE;AACV,CAAC,CACF;;AAED;AACA,OAAO,MAAMC,kBAAkB,GAAG;EAChCC,KAAK,EAAE,CAACtE,aAAa,CAAC;EACtBa,OAAO,EAAE,CAACO,cAAc,CAAC;EACzBmD,MAAM,EAAE,CAACrD,cAAc,CAAC;EACxBP,QAAQ,EAAE,CAACW,eAAe,CAAC;EAC3BkD,UAAU,EAAE,CAAC;EACbC,eAAe,EAAE,CAAC;EAClBC,kBAAkB,EAAE,CAAC;EACrBC,SAAS,EAAE,IAAInE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;AACpC,CAAC;;AAED;AACA,OAAO,MAAMmE,eAAe,GAAGA,CAACC,SAAS,GAAG,CAAC,CAAC,MAAM;EAClD,GAAG7E,aAAa;EAChB,GAAG6E,SAAS;EACZ1E,IAAI,EAAE;IACJ,GAAGH,aAAa,CAACG,IAAI;IACrB,IAAI0E,SAAS,CAAC1E,IAAI,IAAI,CAAC,CAAC;EAC1B;AACF,CAAC,CAAC;AAEF,OAAO,MAAM2E,cAAc,GAAGA,CAACD,SAAS,GAAG,CAAC,CAAC,MAAM;EACjD,GAAGpD,QAAQ;EACX,GAAGoD;AACL,CAAC,CAAC;AAEF,OAAO,MAAME,iBAAiB,GAAGA,CAACF,SAAS,GAAG,CAAC,CAAC,MAAM;EACpD,GAAG3B,WAAW;EACdC,OAAO,EAAEpD,IAAI,CAAC4B,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC;IACnC,GAAGH,QAAQ;IACX,IAAIoD,SAAS,CAACG,aAAa,IAAI,CAAC,CAAC;EACnC,CAAC,CAAC;EACF,GAAGH;AACL,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMI,cAAc,GAAG;EAC5BX,KAAK,EAAE,sGAAsG;EAC7GzD,OAAO,EAAE,kFAAkF;EAC3F0D,MAAM,EAAE,iEAAiE;EACzE5D,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA,OAAO,MAAMuE,iBAAiB,GAAG,CAC/B;EAAEC,MAAM,EAAE,MAAM;EAAEC,GAAG,EAAE;AAAsB,CAAC,EAC9C;EAAED,MAAM,EAAE,MAAM;EAAEE,QAAQ,EAAE,oBAAoB;EAAEvB,KAAK,EAAE;AAAgB,CAAC,EAC1E;EAAEqB,MAAM,EAAE,OAAO;EAAEE,QAAQ,EAAE;AAAkB,CAAC,EAChD;EAAEF,MAAM,EAAE,MAAM;EAAEE,QAAQ,EAAE,wBAAwB;EAAEvB,KAAK,EAAE;AAAgB,CAAC,EAC9E;EAAEqB,MAAM,EAAE,OAAO;EAAEE,QAAQ,EAAE;AAAyC,CAAC,CACxE","ignoreList":[]}
{"version":3,"names":["cov_pgiiot4nt","actualCoverage","validateEnvironmentVariables","validateDiscordChannelId","validateYouTubeChannelId","Configuration","constructor","source","b","process","env","f","s","validated","validateAll","get","key","defaultValue","undefined","value","getRequired","Error","getNumber","parsed","parseInt","isNaN","getBoolean","lower","toLowerCase","validationResult","validateDiscordConfig","validateYouTubeConfig","validateXConfig","error","message","token","startsWith","match","console","warn","supportChannelId","youtubeChannelId","xChannelId","channelId","apiKey","length","xUser","includes","interval","getAllConfig","includeSecrets","config","secretKeys","Object","entries","isValid"],"sources":["configuration.js"],"sourcesContent":["import {\n  validateEnvironmentVariables,\n  validateDiscordChannelId,\n  validateYouTubeChannelId,\n} from '../config-validator.js';\n\n/**\n * Centralized configuration management with validation\n */\nexport class Configuration {\n  constructor(source = process.env) {\n    this.env = source;\n    this.validated = this.validateAll();\n  }\n\n  /**\n   * Get configuration value with optional default\n   */\n  get(key, defaultValue = undefined) {\n    const value = this.env[key];\n    return value !== undefined ? value : defaultValue;\n  }\n\n  /**\n   * Get required configuration value, throws if missing\n   */\n  getRequired(key) {\n    const value = this.env[key];\n    if (value === undefined) {\n      throw new Error(`Required configuration key '${key}' is missing`);\n    }\n    return value;\n  }\n\n  /**\n   * Get numeric configuration value\n   */\n  getNumber(key, defaultValue = undefined) {\n    const value = this.get(key, defaultValue);\n    if (value === undefined) {\n      return undefined;\n    }\n\n    const parsed = parseInt(value, 10);\n    if (isNaN(parsed)) {\n      throw new Error(`Configuration key '${key}' must be a valid number, got: ${value}`);\n    }\n    return parsed;\n  }\n\n  /**\n   * Get boolean configuration value\n   */\n  getBoolean(key, defaultValue = undefined) {\n    const value = this.get(key);\n    if (value === undefined) {\n      return defaultValue;\n    }\n\n    const lower = value.toLowerCase();\n    if (lower === 'true' || lower === '1' || lower === 'yes') {\n      return true;\n    }\n    if (lower === 'false' || lower === '0' || lower === 'no') {\n      return false;\n    }\n\n    throw new Error(`Configuration key '${key}' must be a boolean value, got: ${value}`);\n  }\n\n  /**\n   * Validate all required configuration\n   */\n  validateAll() {\n    try {\n      // Use existing validation from config-validator\n      const validationResult = validateEnvironmentVariables(this.env);\n\n      // Additional specific validations\n      this.validateDiscordConfig();\n      this.validateYouTubeConfig();\n      this.validateXConfig();\n\n      return validationResult;\n    } catch (error) {\n      throw new Error(`Configuration validation failed: ${error.message}`);\n    }\n  }\n\n  /**\n   * Validate Discord-specific configuration\n   */\n  validateDiscordConfig() {\n    const token = this.get('DISCORD_BOT_TOKEN');\n    if (token && !token.startsWith('Bot ') && !token.match(/^[A-Za-z0-9._-]{59}$/)) {\n      console.warn('Discord token format may be invalid');\n    }\n\n    const supportChannelId = this.get('DISCORD_SUPPORT_CHANNEL_ID');\n    if (supportChannelId && !validateDiscordChannelId(supportChannelId)) {\n      throw new Error('Invalid Discord support channel ID format');\n    }\n\n    const youtubeChannelId = this.get('DISCORD_YOUTUBE_CHANNEL_ID');\n    if (youtubeChannelId && !validateDiscordChannelId(youtubeChannelId)) {\n      throw new Error('Invalid Discord YouTube channel ID format');\n    }\n\n    const xChannelId = this.get('DISCORD_X_CHANNEL_ID');\n    if (xChannelId && !validateDiscordChannelId(xChannelId)) {\n      throw new Error('Invalid Discord X channel ID format');\n    }\n  }\n\n  /**\n   * Validate YouTube-specific configuration\n   */\n  validateYouTubeConfig() {\n    const channelId = this.get('YOUTUBE_CHANNEL_ID');\n    if (channelId && !validateYouTubeChannelId(channelId)) {\n      throw new Error('Invalid YouTube channel ID format');\n    }\n\n    const apiKey = this.get('YOUTUBE_API_KEY');\n    if (apiKey && apiKey.length < 30) {\n      console.warn('YouTube API key seems too short');\n    }\n  }\n\n  /**\n   * Validate X (Twitter) configuration\n   */\n  validateXConfig() {\n    const xUser = this.get('X_USER_HANDLE');\n    if (xUser && (xUser.startsWith('@') || xUser.includes(' '))) {\n      throw new Error('X_USER_HANDLE should be username without @ symbol and no spaces');\n    }\n\n    const interval = this.getNumber('X_QUERY_INTERVAL_MIN');\n    if (interval !== undefined && interval < 60000) {\n      console.warn('X query interval less than 1 minute may cause rate limiting');\n    }\n  }\n\n  /**\n   * Get all configuration as object (for debugging)\n   */\n  getAllConfig(includeSecrets = false) {\n    const config = {};\n    const secretKeys = ['DISCORD_BOT_TOKEN', 'YOUTUBE_API_KEY', 'WEBHOOK_SECRET'];\n\n    for (const [key, value] of Object.entries(this.env)) {\n      if (\n        key.startsWith('DISCORD_') ||\n        key.startsWith('YOUTUBE_') ||\n        key.startsWith('X_') ||\n        key.startsWith('WEBHOOK_')\n      ) {\n        if (includeSecrets || !secretKeys.includes(key)) {\n          config[key] = value;\n        } else if (secretKeys.includes(key)) {\n          config[key] = '[REDACTED]';\n        }\n      }\n    }\n\n    return config;\n  }\n\n  /**\n   * Check if configuration is valid\n   */\n  isValid() {\n    try {\n      this.validateAll();\n      return true;\n    } catch {\n      return false;\n    }\n  }\n}\n"],"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","ignoreList":[]}
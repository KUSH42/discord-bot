{"version":3,"names":["cov_1204281j2e","actualCoverage","HttpService","fs","path","FetchHttpService","constructor","options","b","f","s","defaultHeaders","headers","timeout","baseUrl","requestInterceptors","responseInterceptors","get","url","request","post","data","put","delete","patch","head","method","fullUrl","buildFullUrl","requestOptions","toUpperCase","signal","createAbortSignal","body","FormData","URLSearchParams","toString","JSON","stringify","interceptor","response","fetch","responseObj","status","statusText","headersToObject","ok","contentType","getContentType","json","text","error","name","Error","message","downloadFile","destination","isSuccessResponse","dir","dirname","existsSync","mkdirSync","recursive","writeFileSync","uploadFile","file","formData","fileBuffer","readFileSync","fileName","basename","append","Blob","Buffer","isBuffer","fields","key","value","Object","entries","setDefaultHeaders","setTimeout","setBaseUrl","addRequestInterceptor","push","index","indexOf","splice","addResponseInterceptor","createInstance","config","validateUrl","base","endsWith","slice","startsWith","timeoutMs","controller","AbortController","abort","obj"],"sources":["fetch-http-service.js"],"sourcesContent":["import { HttpService } from '../interfaces/http-service.js';\nimport fs from 'fs';\nimport path from 'path';\n\n/**\n * Fetch-based implementation of HttpService\n */\nexport class FetchHttpService extends HttpService {\n  constructor(options = {}) {\n    super();\n    this.defaultHeaders = options.headers || {};\n    this.timeout = options.timeout || 30000;\n    this.baseUrl = options.baseUrl || '';\n    this.requestInterceptors = [];\n    this.responseInterceptors = [];\n  }\n\n  /**\n   * Make a GET request\n   */\n  async get(url, options = {}) {\n    return this.request('GET', url, null, options);\n  }\n\n  /**\n   * Make a POST request\n   */\n  async post(url, data = null, options = {}) {\n    return this.request('POST', url, data, options);\n  }\n\n  /**\n   * Make a PUT request\n   */\n  async put(url, data = null, options = {}) {\n    return this.request('PUT', url, data, options);\n  }\n\n  /**\n   * Make a DELETE request\n   */\n  async delete(url, options = {}) {\n    return this.request('DELETE', url, null, options);\n  }\n\n  /**\n   * Make a PATCH request\n   */\n  async patch(url, data = null, options = {}) {\n    return this.request('PATCH', url, data, options);\n  }\n\n  /**\n   * Make a HEAD request\n   */\n  async head(url, options = {}) {\n    return this.request('HEAD', url, null, options);\n  }\n\n  /**\n   * Make a generic HTTP request\n   */\n  async request(method, url, data = null, options = {}) {\n    try {\n      // Build full URL\n      const fullUrl = this.buildFullUrl(url);\n\n      // Prepare request options\n      const requestOptions = {\n        method: method.toUpperCase(),\n        headers: {\n          ...this.defaultHeaders,\n          ...options.headers,\n        },\n        signal: this.createAbortSignal(options.timeout),\n      };\n\n      // Add body for non-GET requests\n      if (data !== null && method.toUpperCase() !== 'GET' && method.toUpperCase() !== 'HEAD') {\n        if (typeof data === 'string') {\n          requestOptions.body = data;\n        } else if (data instanceof FormData) {\n          requestOptions.body = data;\n        } else if (data instanceof URLSearchParams) {\n          requestOptions.body = data.toString();\n          if (!requestOptions.headers['content-type']) {\n            requestOptions.headers['content-type'] = 'application/x-www-form-urlencoded';\n          }\n        } else {\n          requestOptions.body = JSON.stringify(data);\n          if (!requestOptions.headers['content-type']) {\n            requestOptions.headers['content-type'] = 'application/json';\n          }\n        }\n      }\n\n      // Apply request interceptors\n      for (const interceptor of this.requestInterceptors) {\n        await interceptor(requestOptions);\n      }\n\n      // Make the request\n      const response = await fetch(fullUrl, requestOptions);\n\n      // Create response object\n      const responseObj = {\n        status: response.status,\n        statusText: response.statusText,\n        headers: this.headersToObject(response.headers),\n        url: response.url,\n        ok: response.ok,\n      };\n\n      // Add response data\n      const contentType = this.getContentType(responseObj);\n      if (contentType === 'application/json') {\n        try {\n          responseObj.data = await response.json();\n        } catch {\n          responseObj.data = await response.text();\n        }\n      } else {\n        responseObj.data = await response.text();\n      }\n\n      // Apply response interceptors\n      for (const interceptor of this.responseInterceptors) {\n        await interceptor(responseObj);\n      }\n\n      return responseObj;\n    } catch (error) {\n      if (error.name === 'AbortError') {\n        throw new Error('Request timeout');\n      }\n      throw new Error(`HTTP request failed: ${error.message}`);\n    }\n  }\n\n  /**\n   * Download a file\n   */\n  async downloadFile(url, destination, options = {}) {\n    try {\n      const response = await this.get(url, options);\n\n      if (!this.isSuccessResponse(response)) {\n        throw new Error(`Download failed with status: ${response.status}`);\n      }\n\n      // Ensure directory exists\n      const dir = path.dirname(destination);\n      if (!fs.existsSync(dir)) {\n        fs.mkdirSync(dir, { recursive: true });\n      }\n\n      // Write file\n      fs.writeFileSync(destination, response.data);\n\n      return destination;\n    } catch (error) {\n      throw new Error(`File download failed: ${error.message}`);\n    }\n  }\n\n  /**\n   * Upload a file\n   */\n  async uploadFile(url, file, options = {}) {\n    try {\n      const formData = new FormData();\n\n      if (typeof file === 'string') {\n        // File path\n        const fileBuffer = fs.readFileSync(file);\n        const fileName = path.basename(file);\n        formData.append('file', new Blob([fileBuffer]), fileName);\n      } else if (Buffer.isBuffer(file)) {\n        // Buffer\n        formData.append('file', new Blob([file]), options.fileName || 'file');\n      } else {\n        // Assume it's already a File or Blob\n        formData.append('file', file);\n      }\n\n      // Add additional form fields\n      if (options.fields) {\n        for (const [key, value] of Object.entries(options.fields)) {\n          formData.append(key, value);\n        }\n      }\n\n      return await this.post(url, formData, {\n        ...options,\n        headers: {\n          ...options.headers,\n          // Don't set content-type for FormData, let browser set it\n        },\n      });\n    } catch (error) {\n      throw new Error(`File upload failed: ${error.message}`);\n    }\n  }\n\n  /**\n   * Set default headers for all requests\n   */\n  setDefaultHeaders(headers) {\n    this.defaultHeaders = { ...this.defaultHeaders, ...headers };\n  }\n\n  /**\n   * Set default timeout for all requests\n   */\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Set base URL for relative requests\n   */\n  setBaseUrl(baseUrl) {\n    this.baseUrl = baseUrl;\n  }\n\n  /**\n   * Add request interceptor\n   */\n  addRequestInterceptor(interceptor) {\n    this.requestInterceptors.push(interceptor);\n\n    // Return remove function\n    return () => {\n      const index = this.requestInterceptors.indexOf(interceptor);\n      if (index !== -1) {\n        this.requestInterceptors.splice(index, 1);\n      }\n    };\n  }\n\n  /**\n   * Add response interceptor\n   */\n  addResponseInterceptor(interceptor) {\n    this.responseInterceptors.push(interceptor);\n\n    // Return remove function\n    return () => {\n      const index = this.responseInterceptors.indexOf(interceptor);\n      if (index !== -1) {\n        this.responseInterceptors.splice(index, 1);\n      }\n    };\n  }\n\n  /**\n   * Create a new HTTP client instance with custom configuration\n   */\n  createInstance(config = {}) {\n    return new FetchHttpService({\n      headers: { ...this.defaultHeaders, ...config.headers },\n      timeout: config.timeout || this.timeout,\n      baseUrl: config.baseUrl || this.baseUrl,\n    });\n  }\n\n  /**\n   * Build full URL from base URL and relative path\n   */\n  buildFullUrl(url) {\n    if (this.validateUrl(url)) {\n      return url; // Already a full URL\n    }\n\n    if (!this.baseUrl) {\n      return url;\n    }\n\n    const base = this.baseUrl.endsWith('/') ? this.baseUrl.slice(0, -1) : this.baseUrl;\n    const path = url.startsWith('/') ? url : `/${url}`;\n\n    return `${base}${path}`;\n  }\n\n  /**\n   * Create abort signal for timeout\n   */\n  createAbortSignal(timeout) {\n    const timeoutMs = timeout || this.timeout;\n    const controller = new AbortController();\n\n    setTimeout(() => {\n      controller.abort();\n    }, timeoutMs);\n\n    return controller.signal;\n  }\n\n  /**\n   * Convert Headers object to plain object\n   */\n  headersToObject(headers) {\n    const obj = {};\n    for (const [key, value] of headers.entries()) {\n      obj[key] = value;\n    }\n    return obj;\n  }\n}\n"],"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","ignoreList":[]}
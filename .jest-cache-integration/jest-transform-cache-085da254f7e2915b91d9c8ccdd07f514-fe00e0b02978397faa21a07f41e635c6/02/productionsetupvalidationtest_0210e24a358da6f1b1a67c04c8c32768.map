{"version":3,"names":["describe","it","expect","beforeEach","afterEach","jest","unstable_mockModule","Client","fn","channels","fetch","mockResolvedValue","isTextBased","send","isReady","options","intents","login","destroy","on","once","GatewayIntentBits","Guilds","GuildMessages","MessageContent","Partials","Message","Channel","Reaction","google","youtube","videos","list","chromium","launch","newPage","goto","close","DependencyContainer","Configuration","setupProductionServices","container","config","originalEnv","process","env","DISCORD_BOT_TOKEN","YOUTUBE_API_KEY","YOUTUBE_CHANNEL_ID","DISCORD_YOUTUBE_CHANNEL_ID","DISCORD_X_POSTS_CHANNEL_ID","DISCORD_X_REPLIES_CHANNEL_ID","DISCORD_X_RETWEETS_CHANNEL_ID","DISCORD_X_QUOTES_CHANNEL_ID","DISCORD_BOT_SUPPORT_LOG_CHANNEL","ALLOWED_USER_IDS","PSH_SECRET","PSH_CALLBACK_URL","X_USER_HANDLE","TWITTER_USERNAME","TWITTER_PASSWORD","LOG_LEVEL","dispose","resolve","toBeDefined","resolves","not","toThrow","scraperApp","browser","toBeNull","toBe","logger","transports","length","toBeGreaterThanOrEqual","toHaveLength","discordService","client","youtubeService","classifier","announcer","state","eventBus","xUser","twitterUsername","twitterPassword","monitorApp","http","botApp","discord","commandProcessor","brokenContainer","registerSingleton","start","Error","brokenConfig","getRequired","browserService","mockFailingLaunch","mockRejectedValue","rejects","toHaveBeenCalled","scraperApp1","scraperApp2","browserService1","browserService2","logger1","logger2","level","fileTransport","find","t","name","constructor","consoleTransport","expressApp","listen","use","getStatus","getStats","stop"],"sources":["production-setup-validation.test.js"],"sourcesContent":["import { describe, it, expect, beforeEach, afterEach, jest } from '@jest/globals';\n\n// Mock external dependencies that require services not available in CI\njest.unstable_mockModule('discord.js', () => ({\n  Client: jest.fn(() => ({\n    channels: {\n      fetch: jest.fn().mockResolvedValue({ isTextBased: () => true, send: jest.fn() }),\n    },\n    isReady: jest.fn(() => true),\n    options: { intents: ['Guilds', 'GuildMessages', 'MessageContent'] },\n    login: jest.fn().mockResolvedValue(),\n    destroy: jest.fn().mockResolvedValue(),\n    on: jest.fn(),\n    once: jest.fn(),\n  })),\n  GatewayIntentBits: {\n    Guilds: 1,\n    GuildMessages: 512,\n    MessageContent: 32768,\n  },\n  Partials: {\n    Message: 'Message',\n    Channel: 'Channel',\n    Reaction: 'Reaction',\n  },\n}));\n\njest.unstable_mockModule('googleapis', () => ({\n  google: {\n    youtube: jest.fn(() => ({ videos: { list: jest.fn() } })),\n  },\n}));\n\njest.unstable_mockModule('playwright', () => ({\n  chromium: {\n    launch: jest.fn().mockResolvedValue({\n      newPage: jest.fn().mockResolvedValue({\n        goto: jest.fn(),\n        close: jest.fn(),\n      }),\n      close: jest.fn(),\n    }),\n  },\n}));\n\nconst { DependencyContainer } = await import('../../src/infrastructure/dependency-container.js');\nconst { Configuration } = await import('../../src/infrastructure/configuration.js');\nconst { setupProductionServices } = await import('../../src/setup/production-setup.js');\n\ndescribe('Production Setup Validation', () => {\n  let container;\n  let config;\n  let originalEnv;\n\n  beforeEach(() => {\n    // Save original environment\n    originalEnv = process.env;\n\n    // Set up minimal test environment\n    process.env = {\n      ...originalEnv,\n      DISCORD_BOT_TOKEN: 'test-token',\n      YOUTUBE_API_KEY: 'test-key',\n      YOUTUBE_CHANNEL_ID: 'UCabcdefghijklmnopqrstuv',\n      DISCORD_YOUTUBE_CHANNEL_ID: '123456789012345678',\n      DISCORD_X_POSTS_CHANNEL_ID: '123456789012345678',\n      DISCORD_X_REPLIES_CHANNEL_ID: '123456789012345678',\n      DISCORD_X_RETWEETS_CHANNEL_ID: '123456789012345678',\n      DISCORD_X_QUOTES_CHANNEL_ID: '123456789012345678',\n      DISCORD_BOT_SUPPORT_LOG_CHANNEL: '123456789012345678',\n      ALLOWED_USER_IDS: '123456789012345678',\n      PSH_SECRET: 'test-secret',\n      PSH_CALLBACK_URL: 'http://test.com/webhook',\n      X_USER_HANDLE: 'testuser',\n      TWITTER_USERNAME: 'testuser',\n      TWITTER_PASSWORD: 'testpass',\n      LOG_LEVEL: 'info',\n    };\n\n    container = new DependencyContainer();\n    config = new Configuration();\n  });\n\n  afterEach(() => {\n    // Restore original environment\n    process.env = originalEnv;\n\n    // Clean up container\n    if (container) {\n      container.dispose();\n    }\n  });\n\n  describe('Complete Service Registration', () => {\n    it('should register all required services', async () => {\n      await setupProductionServices(container, config);\n\n      // Infrastructure services\n      expect(container.resolve('config')).toBeDefined();\n      expect(container.resolve('eventBus')).toBeDefined();\n      expect(container.resolve('stateManager')).toBeDefined();\n\n      // External services\n      expect(container.resolve('discordService')).toBeDefined();\n      expect(container.resolve('youtubeService')).toBeDefined();\n      expect(container.resolve('httpService')).toBeDefined();\n      expect(container.resolve('expressApp')).toBeDefined();\n      expect(container.resolve('browserService')).toBeDefined();\n\n      // Core services\n      expect(container.resolve('commandProcessor')).toBeDefined();\n      expect(container.resolve('contentClassifier')).toBeDefined();\n      expect(container.resolve('contentAnnouncer')).toBeDefined();\n\n      // Application services\n      expect(container.resolve('botApplication')).toBeDefined();\n      expect(container.resolve('scraperApplication')).toBeDefined();\n      expect(container.resolve('monitorApplication')).toBeDefined();\n\n      // Logging\n      expect(container.resolve('logger')).toBeDefined();\n    });\n\n    it('should validate container after setup', async () => {\n      // This should not throw\n      await expect(setupProductionServices(container, config)).resolves.not.toThrow();\n    });\n  });\n\n  describe('Critical Dependency Validation', () => {\n    it('should ensure scraper application has browser service', async () => {\n      await setupProductionServices(container, config);\n\n      const scraperApp = container.resolve('scraperApplication');\n      expect(scraperApp.browser).toBeDefined();\n      expect(scraperApp.browser).not.toBeNull();\n      expect(typeof scraperApp.browser.launch).toBe('function');\n    });\n\n    it('should ensure logger has Discord transport when configured', async () => {\n      await setupProductionServices(container, config);\n\n      const logger = container.resolve('logger');\n      expect(logger).toBeDefined();\n      expect(logger.transports).toBeDefined();\n\n      // Should have at least console and file transports\n      expect(logger.transports.length).toBeGreaterThanOrEqual(2);\n\n      // Should have Discord transport since DISCORD_BOT_SUPPORT_LOG_CHANNEL is set\n      expect(logger.transports).toHaveLength(3);\n    });\n\n    it('should ensure Discord service is properly configured', async () => {\n      await setupProductionServices(container, config);\n\n      const discordService = container.resolve('discordService');\n      expect(discordService).toBeDefined();\n      expect(discordService.client).toBeDefined();\n      expect(discordService.client.options).toBeDefined();\n      expect(discordService.client.options.intents).toBeDefined();\n    });\n\n    it('should ensure YouTube service is properly configured', async () => {\n      await setupProductionServices(container, config);\n\n      const youtubeService = container.resolve('youtubeService');\n      expect(youtubeService).toBeDefined();\n      expect(youtubeService.youtube).toBeDefined();\n    });\n  });\n\n  describe('Service Dependencies', () => {\n    it('should resolve all scraper application dependencies', async () => {\n      await setupProductionServices(container, config);\n\n      const scraperApp = container.resolve('scraperApplication');\n\n      // Verify all dependencies are properly injected\n      expect(scraperApp.browser).toBeDefined();\n      expect(scraperApp.classifier).toBeDefined();\n      expect(scraperApp.announcer).toBeDefined();\n      expect(scraperApp.config).toBeDefined();\n      expect(scraperApp.state).toBeDefined();\n      expect(scraperApp.eventBus).toBeDefined();\n      expect(scraperApp.logger).toBeDefined();\n\n      // Verify configuration is accessible\n      expect(scraperApp.xUser).toBe('testuser');\n      expect(scraperApp.twitterUsername).toBe('testuser');\n      expect(scraperApp.twitterPassword).toBe('testpass');\n    });\n\n    it('should resolve all monitor application dependencies', async () => {\n      await setupProductionServices(container, config);\n\n      const monitorApp = container.resolve('monitorApplication');\n\n      // Verify all dependencies are properly injected\n      expect(monitorApp.youtube).toBeDefined();\n      expect(monitorApp.http).toBeDefined();\n      expect(monitorApp.classifier).toBeDefined();\n      expect(monitorApp.announcer).toBeDefined();\n      expect(monitorApp.config).toBeDefined();\n      expect(monitorApp.state).toBeDefined();\n      expect(monitorApp.eventBus).toBeDefined();\n      expect(monitorApp.logger).toBeDefined();\n    });\n\n    it('should resolve all bot application dependencies', async () => {\n      await setupProductionServices(container, config);\n\n      const botApp = container.resolve('botApplication');\n\n      // Verify all dependencies are properly injected\n      expect(botApp.discord).toBeDefined();\n      expect(botApp.commandProcessor).toBeDefined();\n      expect(botApp.eventBus).toBeDefined();\n      expect(botApp.config).toBeDefined();\n      expect(botApp.state).toBeDefined();\n      expect(botApp.logger).toBeDefined();\n    });\n  });\n\n  describe('Configuration Validation', () => {\n    it('should handle missing browser service registration', async () => {\n      // Create a broken version of setupProductionServices that doesn't register browser service\n      const brokenContainer = new DependencyContainer();\n\n      // Only register the scraper application without browser service\n      brokenContainer.registerSingleton('scraperApplication', () => {\n        return {\n          browser: null,\n          start: async () => {\n            if (!this.browser) {\n              throw new Error('Browser service not available');\n            }\n          },\n        };\n      });\n\n      const scraperApp = brokenContainer.resolve('scraperApplication');\n      expect(scraperApp.browser).toBeNull();\n    });\n\n    it('should catch missing critical environment variables', () => {\n      // Test with missing Discord token\n      delete process.env.DISCORD_BOT_TOKEN;\n\n      const brokenConfig = new Configuration();\n\n      expect(() => {\n        brokenConfig.getRequired('DISCORD_BOT_TOKEN');\n      }).toThrow();\n    });\n  });\n\n  describe('Error Handling Scenarios', () => {\n    it('should handle Discord transport initialization without token', async () => {\n      // Set up environment without Discord token\n      delete process.env.DISCORD_BOT_TOKEN;\n\n      const brokenConfig = new Configuration();\n\n      // This should throw during getRequired call\n      expect(() => {\n        brokenConfig.getRequired('DISCORD_BOT_TOKEN');\n      }).toThrow();\n    });\n\n    it('should handle browser service failure gracefully', async () => {\n      await setupProductionServices(container, config);\n\n      const browserService = container.resolve('browserService');\n\n      // Mock browser launch failure - this should throw as expected\n      const mockFailingLaunch = jest.fn().mockRejectedValue(new Error('Browser launch failed'));\n      browserService.launch = mockFailingLaunch;\n\n      const scraperApp = container.resolve('scraperApplication');\n\n      await expect(scraperApp.start()).rejects.toThrow('Browser launch failed');\n\n      // Verify the launch method was called\n      expect(mockFailingLaunch).toHaveBeenCalled();\n    });\n  });\n\n  describe('Production Readiness Checks', () => {\n    it('should validate all services are ready for production', async () => {\n      await setupProductionServices(container, config);\n\n      // Check that all critical services are singleton\n      const scraperApp1 = container.resolve('scraperApplication');\n      const scraperApp2 = container.resolve('scraperApplication');\n      expect(scraperApp1).toBe(scraperApp2);\n\n      const browserService1 = container.resolve('browserService');\n      const browserService2 = container.resolve('browserService');\n      expect(browserService1).toBe(browserService2);\n\n      const logger1 = container.resolve('logger');\n      const logger2 = container.resolve('logger');\n      expect(logger1).toBe(logger2);\n    });\n\n    it('should ensure proper logging configuration', async () => {\n      await setupProductionServices(container, config);\n\n      const logger = container.resolve('logger');\n\n      // Should have proper log level (defaults to info in test environment)\n      expect(logger.level).toBe('info');\n\n      // Should have file transport (check for DailyRotateFile name or similar)\n      const fileTransport = logger.transports.find(\n        (t) => t.name === 'DailyRotateFile' || t.name === 'file' || t.constructor.name === 'DailyRotateFile',\n      );\n      expect(fileTransport).toBeDefined();\n\n      // Should have console transport\n      const consoleTransport = logger.transports.find((t) => t.name === 'console');\n      expect(consoleTransport).toBeDefined();\n    });\n\n    it('should validate Express app configuration', async () => {\n      await setupProductionServices(container, config);\n\n      const expressApp = container.resolve('expressApp');\n      expect(expressApp).toBeDefined();\n      expect(typeof expressApp.listen).toBe('function');\n      expect(typeof expressApp.use).toBe('function');\n    });\n  });\n\n  describe('Service Health Checks', () => {\n    it('should provide health check capability for all applications', async () => {\n      await setupProductionServices(container, config);\n\n      const botApp = container.resolve('botApplication');\n      const scraperApp = container.resolve('scraperApplication');\n      const monitorApp = container.resolve('monitorApplication');\n\n      // All applications should have stats/status methods\n      expect(typeof botApp.getStatus).toBe('function');\n      expect(typeof scraperApp.getStats).toBe('function');\n      expect(typeof monitorApp.getStats).toBe('function');\n    });\n\n    it('should handle graceful shutdown', async () => {\n      await setupProductionServices(container, config);\n\n      const botApp = container.resolve('botApplication');\n      const scraperApp = container.resolve('scraperApplication');\n      const monitorApp = container.resolve('monitorApplication');\n\n      // All applications should have stop methods\n      expect(typeof botApp.stop).toBe('function');\n      expect(typeof scraperApp.stop).toBe('function');\n      expect(typeof monitorApp.stop).toBe('function');\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}